{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-source-apiserver","description":"Gatsby plugin to handle any third party api data intake.","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin"],"lastPublisher":{"name":"thinhle-agilityio","avatar":"https://gravatar.com/avatar/e455649ceb7a77c4e7b8cb7a0d3d251a"},"repository":{"url":"https://github.com/thinhle-agilityio/gatsby-source-apiserver"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-source-apiserver\"><a href=\"#gatsby-source-apiserver\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-apiserver</h1>\n<p>A gatsby source plugin for pulling in third party api data.</p>\n<h2 id=\"features\"><a href=\"#features\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Features</h2>\n<ul>\n<li>Pulls data from configured api url</li>\n<li>Uses custom name to allow for multiple instances of plugin</li>\n<li>Option to download the json data to a configurable path</li>\n<li>Option to only download the json data, and skip inserting it into GraphQL</li>\n<li>Supports simple authentication through axios</li>\n</ul>\n<h2 id=\"install\"><a href=\"#install\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-source-apiserver</code></p>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Place configuration options in your gatsby-config.js</span>\n\nplugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-apiserver'</span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Type prefix of entities from server</span>\n      typePrefix<span class=\"token punctuation\">:</span> <span class=\"token string\">'internal__'</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// The url, this should be the endpoint you are attempting to pull data from</span>\n      url<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`http://yourapi.com/api/v1/posts`</span></span><span class=\"token punctuation\">,</span>\n\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\n\n      headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  \n      <span class=\"token comment\">// Request body</span>\n      data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// Name of the data to be downloaded.  Will show in graphQL or be saved to a file</span>\n      <span class=\"token comment\">// using this name. i.e. posts.json</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`posts`</span></span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// Nested level of entities in repsonse object, example: `data.posts`</span>\n      entityLevel<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`data.posts`</span></span>\n\n      <span class=\"token comment\">// Define schemaType to normalize blank values</span>\n      <span class=\"token comment\">// example:</span>\n      <span class=\"token comment\">// const postType = {</span>\n      <span class=\"token comment\">//   id: 1,</span>\n      <span class=\"token comment\">//   name: 'String',</span>\n      <span class=\"token comment\">//   published: true,</span>\n      <span class=\"token comment\">//   object: {a: 1, b: '2', c: false},</span>\n      <span class=\"token comment\">//   array: [{a: 1, b: '2', c: false}]</span>\n      <span class=\"token comment\">// }</span>\n      schemaType<span class=\"token punctuation\">:</span> postType\n\n      <span class=\"token comment\">// Simple authentication, if optional, set it null</span>\n      auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        username<span class=\"token punctuation\">:</span> <span class=\"token string\">'myusername'</span><span class=\"token punctuation\">,</span>\n        password<span class=\"token punctuation\">:</span> <span class=\"token string\">'supersecretpassword1234'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// Optional payload key name if your api returns your payload in a different key</span>\n      <span class=\"token comment\">// Default will use the full response from the http request of the url</span>\n      payloadKey<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`body`</span></span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// Optionally save the JSON data to a file locally</span>\n      <span class=\"token comment\">// Default is false</span>\n      localSave<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">//  Required folder path where the data should be saved if using localSave option</span>\n      <span class=\"token comment\">//  This folder must already exist</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/data/auth/`</span></span>\n\n      <span class=\"token comment\">// Optionally include some output when building</span>\n      <span class=\"token comment\">// Default is false</span>\n      verboseOutput<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// For debugging purposes</span>\n\n      <span class=\"token comment\">// Optionally skip creating nodes in graphQL.  Use this if you only want</span>\n      <span class=\"token comment\">// The data to be saved locally</span>\n      <span class=\"token comment\">// Default is false</span>\n      skipCreateNode<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// skip import to graphQL, only use if localSave is all you want</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"how-to-query\"><a href=\"#how-to-query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to query</h2>\n<p>Data will be available at the following points in GraphQL.</p>\n<p><code class=\"language-text\">all&lt;TypePrefix&gt;&lt;Name&gt;</code> or <code class=\"language-text\">&lt;TypePrefix&gt;&lt;Name&gt;</code> where <code class=\"language-text\">TypePrefix</code> and <code class=\"language-text\">Name</code> is replaced by the name entered in the\nconfiguration options.</p>\n<h2 id=\"dummy-node\"><a href=\"#dummy-node\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dummy Node</h2>\n<p>This plugin will automatically add the dummy node for initialize Gatsby Graphql Schema (for handling graphql error if some field is missing). The dummy node will have field <code class=\"language-text\">id: &#39;dummy&#39;</code>, you should exclude dummy node from <code class=\"language-text\">createPage()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">egdes.node.id === &#39;dummy&#39;</code></pre>\n      </div>\n<p>Note: make sure you pass option <code class=\"language-text\">schemaType</code> to make dummy node works.</p>\n<h3 id=\"conflicting-keys\"><a href=\"#conflicting-keys\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conflicting keys</h3>\n<p>Some of the returned keys may be transformed if they conflict with restricted keys used for\nGraphQL such as the following <code class=\"language-text\">[&#39;id&#39;, &#39;children&#39;, &#39;parent&#39;, &#39;fields&#39;, &#39;internal&#39;]</code></p>\n<p>These conflicting keys will now show up as <code class=\"language-text\">alternative_id</code></p>","timeToRead":2}}}},"pageContext":{"slug":"/packages/gatsby-source-apiserver/","id":"8e615a67-4df0-5743-87b3-c0a1be72639f"}}