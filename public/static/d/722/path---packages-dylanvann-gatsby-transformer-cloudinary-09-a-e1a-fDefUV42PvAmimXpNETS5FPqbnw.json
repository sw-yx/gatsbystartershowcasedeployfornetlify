{"data":{"markdownRemark":null,"npmPackage":{"name":"@dylanvann/gatsby-transformer-cloudinary","description":"Gatsby transformer plugin for images using Cloudinary","keywords":["gatsby","gatsby-plugin","image","sharp"],"lastPublisher":{"name":"dylanvann","avatar":"https://gravatar.com/avatar/320cc10c5cc60d722fac86f3babc6324"},"repository":{"url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-transformer-sharp"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"dylanvanngatsby-transformer-cloudinary\"><a href=\"#dylanvanngatsby-transformer-cloudinary\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@dylanvann/gatsby-transformer-cloudinary</h1>\n<p>Creates <code class=\"language-text\">ImageCloudinary</code> nodes from supported image types.</p>\n<p><strong>Features:</strong></p>\n<ul>\n<li>Optimize images.</li>\n<li>Optimize videos.</li>\n<li>Return size information to prevent UI jank.</li>\n<li>Create base64 placeholders for images and videos.</li>\n</ul>\n<h2 id=\"handling-videos-and-images\"><a href=\"#handling-videos-and-images\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling videos and images</h2>\n<p>One of the primary goals of this module is to handle images and videos.</p>\n<p>To accomplish this the GraphQL schema exposes the following fields:</p>\n<ul>\n<li>\n<p>Image properties, these will be null if the source is a video.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">img*</code></p>\n<ul>\n<li><code class=\"language-text\">imgSrc</code></li>\n<li><code class=\"language-text\">imgSrcSet</code></li>\n<li><code class=\"language-text\">imgBase64</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Video properties, these will be null if the source is an image.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">video*</code></p>\n<ul>\n<li><code class=\"language-text\">videoSrc</code></li>\n<li>There is no <code class=\"language-text\">videoSrcSet</code> or <code class=\"language-text\">videoBase64</code>\nsince video does not support srcset and base64 encoding\nthe video is probably not desirable.</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">videoPoster*</code></p>\n<ul>\n<li><code class=\"language-text\">videoPosterSrc</code></li>\n<li><code class=\"language-text\">videoPosterSrcSet</code></li>\n<li><code class=\"language-text\">videoPosterBase64</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>You can query using <code class=\"language-text\">toImgFormat</code>, <code class=\"language-text\">toVideoFormat</code>, and <code class=\"language-text\">toVideoPosterFormat</code>.</p>\n<p>By querying for all these fields at once you can use a generalized media component to\nrender an image or video based on the data returned to you.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @dylanvann/gatsby-transformer-cloudinary\n<span class=\"token comment\"># or</span>\nyarn add @dylanvann/gatsby-transformer-cloudinary</code></pre>\n      </div>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use?</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// In your gatsby-config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'@dylanvann/gatsby-transformer-cloudinary'</span><span class=\"token punctuation\">,</span>\n            options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                cloudName<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span>\n                apiKey<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span>\n                apiSecret<span class=\"token punctuation\">:</span> <span class=\"token string\">'...'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"how-does-this-recognize-images\"><a href=\"#how-does-this-recognize-images\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How does this recognize images?</h2>\n<p>It recognizes files with the following extensions as media:</p>\n<ul>\n<li>jpeg</li>\n<li>jpg</li>\n<li>png</li>\n<li>webp</li>\n<li>tif</li>\n<li>tiff</li>\n<li>gif</li>\n<li>mp4</li>\n<li>webm</li>\n</ul>\n<p>Each image file is parsed into a node of type <code class=\"language-text\">ImageCloudinary</code>.</p>\n<h2 id=\"how-does-this-interact-with-cloudinary\"><a href=\"#how-does-this-interact-with-cloudinary\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How does this interact with Cloudinary?</h2>\n<p>When this encounters a query for a version of an image or video:</p>\n<ul>\n<li>An ID is generated for the media based on an MD5 hash of its contents.</li>\n<li>We check if the media is already on Cloudinary under that ID.</li>\n<li>If it is not we upload it.</li>\n<li>Either way we get metadata for it including the dimensions.</li>\n<li>We generate lazy urls for the media at different sizes and formats.</li>\n</ul>","timeToRead":2}}}},"pageContext":{"slug":"/packages/@dylanvann/gatsby-transformer-cloudinary/","id":"ef541091-a8b8-5e08-ad2d-ee397e232011"}}