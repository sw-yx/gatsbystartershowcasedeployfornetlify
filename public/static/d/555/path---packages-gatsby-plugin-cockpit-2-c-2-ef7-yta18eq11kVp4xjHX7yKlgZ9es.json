{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-plugin-cockpit","description":"Gatsby source plugin for Cockpit headless CMS API.","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin","cockpit"],"lastPublisher":{"name":"pibii","avatar":"https://gravatar.com/avatar/c3bc8e113b69c57b3f4fb89b549baaff"},"repository":null,"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-plugin-cockpit\"><a href=\"#gatsby-plugin-cockpit\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin-cockpit</h1>\n<p>This source plugin pulls <a href=\"https://getcockpit.com\">Cockpit Headless CMS</a> data to a<a href=\"https://www.gatsbyjs.org\">GatsbyJS</a>, a static site generator for React.</p>\n<h2 id=\"resources\"><a href=\"#resources\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h2>\n<ul>\n<li><strong><a href=\"https://github.com/pierreberchtold/gatsby-cockpit-portfolio\">Example project</a></strong>: a simple portfolio with pages and projects</li>\n<li><strong><a href=\"https://blog.ginetta.net/getting-started-with-gatsby-and-cockpit-part-1-of-2-d86871932d44\">Getting started article</a></strong>: an introduction based on the example project.</li>\n</ul>\n<h2 id=\"install\"><a href=\"#install\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-plugin-cockpit</code></p>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>Add the following to <code class=\"language-text\">gatsby-config.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">  plugins: [\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `src`,\n        path: `${__dirname}/src/`,\n      },\n    },\n    {\n      resolve: &#39;gatsby-plugin-cockpit&#39;,\n      options: {\n        cockpitConfig: {\n          baseURL: &#39;http://localhost:8888&#39;,\n          folder: &#39;/cockpit&#39;,\n          accessToken: &#39;4d659efb084077fd24aeb4871d4386&#39;,\n          collections: [&#39;posts&#39;],\n          regions: [&#39;footer&#39;],\n          customComponents: [],\n        },\n      },\n    },\n  ],</code></pre>\n      </div>\n<h3 id=\"options\"><a href=\"#options\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h3>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th></th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>baseURL</strong></td>\n<td><em>required</em></td>\n<td><em>none</em></td>\n<td>The url to you Cockpit installation</td>\n</tr>\n<tr>\n<td><strong>folder</strong></td>\n<td><em>optional</em></td>\n<td><em>‚Äù</em></td>\n<td>The folder of your Cockpit installation</td>\n</tr>\n<tr>\n<td><strong>accessToken</strong></td>\n<td><em>required</em></td>\n<td><em>none</em></td>\n<td>A valid API access token to you cockpit installation. See the <a href=\"https://getcockpit.com/documentation/api/token\">Cockpit Documentation</a></td>\n</tr>\n<tr>\n<td><strong>collections</strong></td>\n<td><em>optional</em></td>\n<td><em>[]</em></td>\n<td>The specific Cockpit collections you want to fetch. If empty all collections will be fetched.</td>\n</tr>\n<tr>\n<td><strong>regions</strong></td>\n<td><em>optional</em></td>\n<td><em>[]</em></td>\n<td>The specific Cockpit regions you want to fetch. If empty all regions will be fetched.</td>\n</tr>\n<tr>\n<td><strong>customComponents</strong></td>\n<td><em>optional</em></td>\n<td><em>[]</em></td>\n<td>If you have defined some custom components for you cockpit layout fields and want them to be parsed for image fields.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"how-to-query\"><a href=\"#how-to-query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to Query</h2>\n<p>You can query <em>collections</em>, <em>regions</em> and <em>assets</em>.</p>\n<h3 id=\"query-collections\"><a href=\"#query-collections\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Collections</h3>\n<p>Collections are converted into nodes. For example a <code class=\"language-text\">posts</code> collections is transformed into <code class=\"language-text\">post</code> nodes. So you can you <code class=\"language-text\">allPost</code> and <code class=\"language-text\">post</code> in your GraphQL queries.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\">allPost <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n        nodes <span class=\"token punctuation\">{</span>\n            id\n            <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h3 id=\"query-assets\"><a href=\"#query-assets\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Assets</h3>\n<p>Assets are converted into Gatsby filesystem files and can be fetched with <code class=\"language-text\">allFile</code> or <code class=\"language-text\">file</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">allFile {\n    edges {\n        nodes {\n            id\n            publicURL\n            ...\n        }\n    }\n}</code></pre>\n      </div>\n<h3 id=\"query-regions\"><a href=\"#query-regions\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Regions</h3>\n<p>Regions are available in GraphQL as region nodes. So if you have a <code class=\"language-text\">footer</code> region in Cockpit with a <em>col1</em> and a <em>col2</em> field you can use following GraphQL query:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">footer: region(name: { eq: &quot;footer&quot; }) {\n\tvalues {\n\t\tcol1\n\t\tcol2\n\t}\n}</code></pre>\n      </div>\n<h1 id=\"query-child-nodes-from-cockpit-fields\"><a href=\"#query-child-nodes-from-cockpit-fields\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query Child Nodes From Cockpit Fields</h1>\n<p>The Gatsby <strong>CollectionLink,</strong>  <strong>Asset</strong> and <strong>Image</strong> fields will be parsed and transform into corresponding GraphQL nodes.</p>\n<h3 id=\"collectionlink-field\"><a href=\"#collectionlink-field\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CollectionLink Field</h3>\n<p>The CollectionLink field links a collection to another collection. Here an example with <code class=\"language-text\">players</code> and <code class=\"language-text\">teams</code> collections.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">allPlayer {\n\tedges {\n        nodes {\n            name\n            role\n            team {\n                name\n            }            \n        }\n\t}\n}</code></pre>\n      </div>\n<h3 id=\"asset-field\"><a href=\"#asset-field\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Asset Field</h3>\n<p>The asset field gets extended with a <code class=\"language-text\">localFile</code> attribute linking to the corresponding file node. </p>\n<p>For example, if you have a <code class=\"language-text\">candidates</code> collection with a name and a pdf as an asset field. So You can get the PDF URL with following GraphQL query:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">allCandidate {\n\tedges {\n        nodes {\n            name\n            pdf {\n            \tlocalFile {\n\t                publicURL                    \n            \t}\n            }            \n        }\n\t}\n}</code></pre>\n      </div>\n<h3 id=\"image-field\"><a href=\"#image-field\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Field</h3>\n<p>Like the asset field, the image field gets extended with a <code class=\"language-text\">localFile</code> attribute linking to the corresponding file node. </p>\n<p>Given a <code class=\"language-text\">post</code> collection with title, content and preview. You can use <a href=\"https://www.gatsbyjs.org/packages/gatsby-image/\"><code class=\"language-text\">gatsby-image</code> plugin</a> in your GraphQL query and take advantage of Gatsby‚Äôs image processing features.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">allPost {\n\tedges {\n        nodes {\n            title\n            content\n            preview {\n            \tlocalFile {\n                    childImageSharp {\n                        sizes(maxWidth: 2000, quality: 90) {\n                            ...GatsbyImageSharpSizes_withWebp\n                        }\n                    }                    \n            \t}\n            }            \n        }\n\t}\n}</code></pre>\n      </div>\n<h3 id=\"layout-field\"><a href=\"#layout-field\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layout Field</h3>\n<p>The layout field enables us to visually arrange components. It is even possible to define custom components corresponding to React Components we will us in Gatsby. This may be done with the <a href=\"https://github.com/agentejo/LayoutComponents\">LayoutComponents addon</a>.</p>\n<p>Given a <code class=\"language-text\">page</code> collection with title and content. You can do the following query:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">allPage {\n\tedges {\n        nodes {\n            title\n            content {\n            \tcomponent\n\t\t        settings {\n                    # component fields\n                    ...\n\t\t        }\n            }    \n            content_parsed\n            content_files {\n                id\n                publicURL\n                # normal file node\n            }\n        }\n\t}\n}</code></pre>\n      </div>\n<ul>\n<li><strong><em>fieldname</em></strong> gives you the components with their settings</li>\n<li><strong><em>fieldname</em>_parsed</strong> gives you the the same than field name but in an object. It enables you to ignore the type of components in the query and just getting all the component settings.</li>\n<li><strong><em>fieldname</em>_files</strong> gives you all the file nodes present in the layout.</li>\n</ul>","timeToRead":4}}}},"pageContext":{"slug":"/packages/gatsby-plugin-cockpit/","id":"108c7a71-49dd-5371-aced-9e052efa8511"}}