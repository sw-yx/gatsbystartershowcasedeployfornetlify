{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-plugin-pathdata","description":"A gatsby plugin that extracts info from the path of a file","keywords":["gatsby","gatsby-plugin","pathdata"],"lastPublisher":{"name":"barskern","avatar":"https://gravatar.com/avatar/ef9ada9368ee864d6c8f4e07b9fec4a8"},"repository":{"url":"https://github.com/barskern/gatsby-plugin-pathdata"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-plugin-pathdata\"><a href=\"#gatsby-plugin-pathdata\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin-pathdata</h1>\n<p>A plugin for <a href=\"https://www.gatsbyjs.org\">gatsby</a>  which loads data from the path of a file, and adds it into the graphql-database. This way you can avoid duplication of data. For example avoiding to define a date in the name of the markdown file and in the frontmatter. </p>\n<h2 id=\"inspiration\"><a href=\"#inspiration\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inspiration</h2>\n<p>This plugin was inspired by the situation mentioned in the introduction. I wanted to make a blog with <a href=\"https://www.gatsbyjs.org\">gatsby</a>, but I know it can quickly get messy if I define a date in the name of a file and in the frontmatter. I also wanted to be able to use the name of the file as the path, so that the frontmatter of the file only contained information that was relevant to the article.</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-plugin-pathdata</code></pre>\n      </div>\n<h2 id=\"configuration\"><a href=\"#configuration\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The plugin needs a few options to work. First you need to include <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-filesystem\"><code class=\"language-text\">gatsby-source-filesystem</code></a> to source files into graphql. After that you can use this plugin to take data from the path of certain nodes and add to the fields.</p>\n<p>This plugin takes two options: <code class=\"language-text\">matchNodeType</code> and <code class=\"language-text\">extract</code>.</p>\n<ul>\n<li><code class=\"language-text\">matchNodeType</code> - Takes a string of a node type to match against (e.g. ‘MarkdownRemark’)</li>\n<li><code class=\"language-text\">extract</code> - An array of <code class=\"language-text\">extractor</code>-objects</li>\n</ul>\n<p>An <code class=\"language-text\">extractor</code>-object is an object which has the following keys:</p>\n<ul>\n<li><code class=\"language-text\">name</code> - The name of the field which will be in the graphql database</li>\n<li><code class=\"language-text\">selector</code> - Javascript RegEx which selects areas to extract from path</li>\n<li><code class=\"language-text\">replacer</code> - String which will be the replacement of the selector</li>\n</ul>\n<p><em>Important to note is that behind the scenes the <code class=\"language-text\">string.prototype.replace()</code> function is used. Hence the selector needs to match with the entire filepath, and the replacer should select certain match-groups from the selector. I recommend to use <a href=\"https://regexr.com/\">regexr.com</a> to customize and try out your regex. Remember that the entire path should be selected by the regex, and then choose with groups what data you want.</em></p>\n<h2 id=\"example\"><a href=\"#example\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>Under is an example which creates a path and a date field on all ‘MarkdownRemark’ nodes. </p>\n<p>In <code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-source-filesystem'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'posts'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src/pages/posts/`</span></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'gatsby-transformer-remark'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-plugin-pathdata'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        matchNodeType<span class=\"token punctuation\">:</span> <span class=\"token string\">'MarkdownRemark'</span><span class=\"token punctuation\">,</span>\n        extract<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'path'</span><span class=\"token punctuation\">,</span>\n            selector<span class=\"token punctuation\">:</span> <span class=\"token regex\">/.+\\/(\\d+-\\d+-\\d+-[\\w-]+)\\.md$/</span><span class=\"token punctuation\">,</span>\n            replacer<span class=\"token punctuation\">:</span> <span class=\"token string\">'/$1/'</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            name<span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span>\n            selector<span class=\"token punctuation\">:</span> <span class=\"token regex\">/.+\\/(\\d+-\\d+-\\d+)-[\\w-]+\\.md$/</span><span class=\"token punctuation\">,</span>\n            replacer<span class=\"token punctuation\">:</span> <span class=\"token string\">'$1'</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>This <code class=\"language-text\">gatsby-config.js</code> will result in a graphql database where the ‘MarkdownRemark’ nodes have a <code class=\"language-text\">fields</code> object that contains a <code class=\"language-text\">path</code> and <code class=\"language-text\">date</code> field. These can be queried in the creation of pages from markdown.</p>\n<h3 id=\"example-query\"><a href=\"#example-query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example query</h3>\n<p>We have a file named <code class=\"language-text\">2018-01-20-hello-world.md</code> inside the <code class=\"language-text\">src/pages/posts/</code> folder. Then we execute the following query:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allMarkdownRemark <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        fields <span class=\"token punctuation\">{</span>\n          path\n          date\n        <span class=\"token punctuation\">}</span>\n        frontmatter <span class=\"token punctuation\">{</span>\n          title\n        <span class=\"token punctuation\">}</span>\n        html\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>The result of this query will then be:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"allMarkdownRemark\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"edges\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"fields\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"path\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/2018-01-20-hello-world/\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token property\">\"date\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2018-01-20\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"frontmatter\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hello world\"</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"html\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;h1>Hello world!&lt;/h1>\\n&lt;p>This is a blogpost!&lt;/p>\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>","timeToRead":3}}}},"pageContext":{"slug":"/packages/gatsby-plugin-pathdata/","id":"95ed80b4-bd00-5134-bc99-95447a67de2b"}}