{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-source-morty","description":"Gatsby source plugin for building websites using the Morty CMS as a data source","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin","graphql","morty"],"lastPublisher":{"name":"mattclough","avatar":"https://gravatar.com/avatar/d9cd32e82e90dfb5c976658fd0fe9a6f"},"repository":null,"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-mortycms-source\"><a href=\"#gatsby-mortycms-source\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby MortyCMS Source</h1>\n<p>A gatsby plugin that runs a graphql query and parses it’s response based on a schema to get your data properly into gatsby’s world.</p>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Add the following with your settings to the gatsby-config.js file under plugins:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">{\n  resolve: `gatsby-source-morty`,\n  options: {\n    account: `awesome-co`,\n    accessToken: `00000000-0000-0000-0000-000000000000`\n  }\n},</code></pre>\n      </div>\n<p>For development, you can just add <code class=\"language-text\">gatsby-source-morty</code> to plugins and it will point to <code class=\"language-text\">localhost:3000/graphql</code>.</p>\n<h2 id=\"process--workflow\"><a href=\"#process--workflow\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Process / Workflow</h2>\n<ol>\n<li>Download and cache the schema from the server (<code class=\"language-text\">utils/getSchema</code>)</li>\n<li>Build client scheme from that schema</li>\n<li>Parse the client query to query AST and operation AST</li>\n<li>Gather fragment definitions</li>\n<li>Validate the query is valid for the schema</li>\n<li>Run query against server</li>\n<li>Use the type info of the schema to walk through the operations</li>\n<li>Recursively make nodes from the data, using fragments as needed</li>\n</ol>","timeToRead":1}}}},"pageContext":{"slug":"/packages/gatsby-source-morty/","id":"16a1ccea-339c-5d2b-9815-669fafa2b5bc"}}