<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby]]></title><description><![CDATA[Blazing-fast static site generator for React]]></description><link>https://www.gatsbyjs.org</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 26 Jul 2018 21:44:44 GMT</lastBuildDate><atom:link href="https://www.gatsbyjs.org/blog/rss.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[Why We Created the Site Showcase]]></title><description><![CDATA[We recently finished the first phase of the  Site Showcase , which is a searchable, filterable library of sites built with Gatsby! We’re…]]></description><link>https://www.gatsbyjs.org/blog/2018-07-20-why-we-built-the-site-showcase/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-07-20-why-we-built-the-site-showcase/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;p&gt;We recently finished the first phase of the &lt;a href=&quot;https://next.gatsbyjs.org/showcase/&quot;&gt;Site Showcase&lt;/a&gt;, which is a searchable, filterable library of sites built with Gatsby!&lt;/p&gt;
&lt;p&gt;We’re starting the second phase soon and would love your help! For a list of tasks that need to be done, see &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5927&quot;&gt;Issue #5927&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;featured-sites.png&quot; alt=&quot;Featured Sites&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;filtered-sites.png&quot; alt=&quot;Filtered Sites&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Site Showcase was developed by Cassie Beckley (&lt;a href=&quot;https://github.com/ThatOtherPerson&quot;&gt;@ThatOtherPerson&lt;/a&gt;), Shawn Wang (&lt;a href=&quot;https://github.com/sw-yx&quot;&gt;@sw-yx&lt;/a&gt;), and Kurt Kemple (&lt;a href=&quot;https://github.com/kkemple&quot;&gt;@kkemple&lt;/a&gt;) and Flo (&lt;a href=&quot;https://github.com/fk&quot;&gt;@fk&lt;/a&gt;) did an &lt;em&gt;incredible&lt;/em&gt; job on design. Many thanks to other people who contributed, including Kyle Gill (&lt;a href=&quot;https://github.com/gillkyle&quot;&gt;@gillkyle&lt;/a&gt;), LekoArts (&lt;a href=&quot;https://github.com/LeKoArts&quot;&gt;@LeKoArts&lt;/a&gt;), David Luhr (&lt;a href=&quot;https://github.com/davidluhr&quot;&gt;@davidluhr&lt;/a&gt;), Vince P. (&lt;a href=&quot;https://github.com/daydream05&quot;&gt;@daydream05&lt;/a&gt;), Mike Allanson (&lt;a href=&quot;https://github.com/m-allanson&quot;&gt;@m-allanson&lt;/a&gt;), Michal Piechowiak (&lt;a href=&quot;https://github.com/pieh&quot;&gt;@pieh&lt;/a&gt;), Sam Bhagwat (&lt;a href=&quot;https://github.com/calcsam&quot;&gt;@calcsam&lt;/a&gt;) and more.&lt;/p&gt;
&lt;h2 id=&quot;submitting-your-site&quot;&gt;&lt;a href=&quot;#submitting-your-site&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Submitting your site&lt;/h2&gt;
&lt;p&gt;If you’ve built a site with Gatsby and would like it to appear in the Site Showcase, please &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/docs/docs/site-showcase-submissions.md&quot;&gt;submit your site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;why-build-a-site-showcase&quot;&gt;&lt;a href=&quot;#why-build-a-site-showcase&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why build a site showcase?&lt;/h2&gt;
&lt;p&gt;We built the showcase to make it easier for you to (1) find the source code for open source Gatsby sites and (2) show off Gatsby to clients, coworkers, friends &amp;#x26; family.&lt;/p&gt;
&lt;h3 id=&quot;source-code&quot;&gt;&lt;a href=&quot;#source-code&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source code&lt;/h3&gt;
&lt;p&gt;Sometimes, an example is worth 1000 words. That’s why we added a GitHub icon next to sites with open source code (not all sites will have this icon).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;site-showcase-source-code.png&quot; alt=&quot;Site Showcase Source Code Available Icon&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;showing-off-what-gatsby-can-do&quot;&gt;&lt;a href=&quot;#showing-off-what-gatsby-can-do&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Showing off what Gatsby can do&lt;/h3&gt;
&lt;p&gt;The Site Showcase can help you pitch Gatsby to clients and coworkers as the best option for their next project because it shows what developers can accomplish with Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;ux-research-process&quot;&gt;&lt;a href=&quot;#ux-research-process&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UX research process&lt;/h2&gt;
&lt;p&gt;Many of you contributed to the discussion and development of the site showcase. Here are the intial issue and PR if you’d like to go through the discussion that led to this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4392&quot;&gt;Site Showcase Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/5524&quot;&gt;Site Showcase WIP PR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;empathy-map&quot;&gt;&lt;a href=&quot;#empathy-map&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Empathy map&lt;/h3&gt;
&lt;p&gt;Here’s a summary of what I learned from over 80 interviews with Gatsby users. This “empathy map” describes what kinds of pain points we’re trying to solve with the site showcase.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;empathy-map-site-showcase.jpg&quot; alt=&quot;Empathy Map Site Showcase&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;user-flow&quot;&gt;&lt;a href=&quot;#user-flow&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Flow&lt;/h3&gt;
&lt;p&gt;The empathy map reflects the following pain points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the Awesome Gatsby list of sites (used to be part of the READme in the open source repo) was growing long and was not searchable or filterable&lt;/li&gt;
&lt;li&gt;the Awesome Gatsby list also had no visual indication of what the sites looked like&lt;/li&gt;
&lt;li&gt;there isn’t enough time or room for everyone’s awesome sites to get retweeted by the @Gatsbyjs account&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the empathy map and the interviews as our guide, we created a list of jobs to be done and imagined the typical flow a user would take through the site showcase. We did this to make sure we planned both a sensible information architecture and the necessary functionality to meet user’s main needs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;user-flow-site-showcase.jpg&quot; alt=&quot;User flow&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;defining-the-mvp&quot;&gt;&lt;a href=&quot;#defining-the-mvp&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining the MVP&lt;/h3&gt;
&lt;p&gt;Based on the process described above, we thought the following features were important to include:&lt;/p&gt;
&lt;p&gt;Users should be able to:&lt;/p&gt;
&lt;ul&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; See screenshots of sites built with Gatsby (Landing page)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; See source code (Site detail page)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Share sites by copying the URL&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Filter by category&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Search sites&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; Submit their own site to the showcase through yaml file (Shannon writes the instructions)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; checked disabled&gt; See featured sites&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;ways-you-can-help&quot;&gt;&lt;a href=&quot;#ways-you-can-help&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ways you can help&lt;/h2&gt;
&lt;h3 id=&quot;future-iterations&quot;&gt;&lt;a href=&quot;#future-iterations&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future iterations&lt;/h3&gt;
&lt;p&gt;Here’s what’s next in &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5927&quot;&gt;Issue #5927&lt;/a&gt;. Feel free to tackle any part of this project and contribute to it or discuss new possibilities!&lt;/p&gt;
&lt;h2 id=&quot;sneak-peak-into-the-next-ux-project&quot;&gt;&lt;a href=&quot;#sneak-peak-into-the-next-ux-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sneak peak into the next UX project&lt;/h2&gt;
&lt;p&gt;Our next UX project is finishing up the starter showcase, which will look similar to the site showcase and also have a major functional difference: filter by dependency. Please contribute to these issues to help out!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5334&quot;&gt;Starter Showcase Issue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/5831&quot;&gt;Starter Showcase WIP PR&lt;/a&gt;
Again, many thanks to all the community members who have contributed to this research and to making Gatsby awesome. Stay tuned for updates on the site showcase and future Gatsby UX research projects!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/shannonb_ux/status/938551014956732418&quot;&gt;Contact me&lt;/a&gt; here if you have feedback that differs from or provides deeper insight into one of the pain points this article mentions.&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Announcing Gatsby Preview]]></title><description><![CDATA[Today we’re excited to announce our first commercial offering, a hosted Gatsby preview service for teams, with  Contentful  as our initial…]]></description><link>https://www.gatsbyjs.org/blog/2018-07-17-announcing-gatsby-preview/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-07-17-announcing-gatsby-preview/</guid><dc:creator><![CDATA[Sam Bhagwat]]></dc:creator><content:encoded>&lt;p&gt;Today we’re excited to announce our first commercial offering, a hosted Gatsby preview service for teams, with &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt; as our initial integration. &lt;/p&gt;
&lt;p&gt;Since &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-05-24-launching-new-gatsby-company/&quot;&gt;launching Gatsby Inc.&lt;/a&gt;, we’ve loved hearing the increasing excitement from developers as more and more of you try out Gatsby and get hooked on the ability to easily create compelling, performant web experiences. &lt;/p&gt;
&lt;p&gt;With modern Javascript, React’s component model, and Progressive Web App features built in, Gatsby is a compelling alternative to traditional CMS site building, while still allowing content teams to use  mature CMS content workflows.&lt;/p&gt;
&lt;p&gt;But in our conversations with website teams at agencies and enterprises adopting Gatsby, we’ve heard a repeated concern. &lt;/p&gt;
&lt;p&gt;In a traditional CMS setup, content creators and editors are able to preview their changes out of the box before they go live. That workflow is difficult to recreate with Gatsby because it requires teams to set up their own preview infrastructure, which can be challenging. &lt;/p&gt;
&lt;p&gt;This is a problem because content teams &lt;em&gt;are&lt;/em&gt; creators. And creators, as Bret Victor put it, “need an &lt;em&gt;immediate&lt;/em&gt; connection to what they’re making.” &lt;/p&gt;
&lt;p&gt;When a copywriter edits a headline in their CMS, they shouldn’t have to &lt;em&gt;imagine&lt;/em&gt; what their change looks like in context. They should see it—immediately. &lt;/p&gt;
&lt;p&gt;That’s why today, we’re excited to launch a hosted preview service for teams using Gatsby. &lt;/p&gt;
&lt;p&gt;With Gatsby Preview, once teams connect their Github repositories and CMS to our service, we’ll provide a live URL where content creators can see their changes &lt;em&gt;in context&lt;/em&gt;. Curious how the new paragraph header would play with the graphic to the left or the footer below? Take  a look &lt;em&gt;before&lt;/em&gt; you hit publish and your changes go live. &lt;/p&gt;
&lt;p&gt;While we continue development on this product, we’re releasing it today in an invite-only alpha. To &lt;a href=&quot;https://www.gatsbyjs.com/preview/&quot;&gt;apply to use the service, fill out this form&lt;/a&gt; and we’ll be in touch. There will be no charge for the service while it’s in alpha.&lt;/p&gt;
&lt;p&gt;Over the next few months, we’ll be adding integration with other CMSs like Drupal, Wordpress, and other hosted CMSs like Contentful, as well as moving Preview into general availability.&lt;/p&gt;
&lt;p&gt;We’re incredibly excited to launch our first commercial service and to continue to push forward the Gatsby experience! We’re looking forward to meeting more of you and working together to push forward the modern web.&lt;/p&gt;
&lt;p&gt;Before you go, take a look at a GIF of Gatsby Preview in action on our own &lt;a href=&quot;gatsbyjs.com&quot;&gt;https://wwww.gatsbyjs.com&lt;/a&gt; website:&lt;/p&gt;
&lt;video controls=&quot;controls&quot; autoplay=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source type=&quot;video/mp4&quot; src=&quot;./gatsby-contentful-preview.mp4&quot;&gt;&lt;/source&gt;
  &lt;p&gt;Your browser does not support the video element.&lt;/p&gt;
&lt;/video&gt;</content:encoded></item><item><title><![CDATA[Learning how to code with Gatsby]]></title><description><![CDATA[Graphic Design Students at the Art Institute Recently, Gatsby fan Phil Howley starting teaching Gatsby in an Emerging Technologies class at…]]></description><link>https://www.gatsbyjs.org/blog/2018-07-07-graphic-design-class/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-07-07-graphic-design-class/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;h2 id=&quot;graphic-design-students-at-the-art-institute&quot;&gt;&lt;a href=&quot;#graphic-design-students-at-the-art-institute&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphic Design Students at the Art Institute&lt;/h2&gt;
&lt;p&gt;Recently, Gatsby fan Phil Howley starting teaching Gatsby in an Emerging Technologies class at the Art Institute (AI) in North Hollywood. I got to interview him.&lt;/p&gt;
&lt;p&gt;In his 10 years of teaching over 50 web development/design classes at (AI), he’s observed that graphic design students tend to come to class less as the class gets more focused on coding.&lt;/p&gt;
&lt;p&gt;However, in his current class &lt;em&gt;nobody has dropped out&lt;/em&gt;. And every single one of his students turned in the MVP and at least one extra credit feature for their final portfolio project, which has never happened when he previously taught this class. The reason? He taught them to create their portfolios using Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;here-are-some-of-the-students-final-sites&quot;&gt;&lt;a href=&quot;#here-are-some-of-the-students-final-sites&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Here are some of the student’s final sites:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://mmd-site.netlify.com/&quot;&gt;&lt;img src=&quot;graphic-design-1.png&quot; alt=&quot;Image of graphic designer&amp;#x27;s site&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mmd-site.netlify.com/&quot;&gt;Melany Dierks&lt;/a&gt; (&lt;a href=&quot;https://github.com/reguv760/mmd-site&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://myceevee.netlify.com/&quot;&gt;&lt;img src=&quot;graphic-design-2.png&quot; alt=&quot;Image of graphic designer&amp;#x27;s site&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://myceevee.netlify.com/&quot;&gt;Khabarovsk&lt;/a&gt; (&lt;a href=&quot;https://github.com/msergushova/myceevee&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://trudesignsongatsby.netlify.com/&quot;&gt;&lt;img src=&quot;graphic-design-3.png&quot; alt=&quot;Image of graphic designer&amp;#x27;s site&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://trudesignsongatsby.netlify.com/&quot;&gt;TruDesigns&lt;/a&gt; (&lt;a href=&quot;https://github.com/trudesigns/newStuff&quot;&gt;source&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;After our initial phone conversation, Phil responded to a series of interview questions via email.&lt;/p&gt;
&lt;h2 id=&quot;interview&quot;&gt;&lt;a href=&quot;#interview&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interview&lt;/h2&gt;
&lt;h3 id=&quot;how-did-you-hear-about-gatsby&quot;&gt;&lt;a href=&quot;#how-did-you-hear-about-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did you hear about Gatsby?&lt;/h3&gt;
&lt;p&gt;I work for Iron Cove Solutions and the CEO, Patrick Monahan, wanted a new site. He was tired of WordPress and how slow it was, having to update the plugins and the core WP. In addition, the theme wasn’t fun. He also had a separate part of the site built with custom PHP. Overall, the site was slow, the SEO was bad, and all changes took forever.&lt;/p&gt;
&lt;p&gt;Patrick wanted me to find a better, more modern solution and that’s where I stumbled upon Gatsby. Once I showed him how fast one of the demo sites was, he gave me the green light. I dug in and here is the URL for &lt;a href=&quot;https://ironcovesolutions.com&quot;&gt;Iron Cove’s new “Gatsby” website&lt;/a&gt;. Props to &lt;a href=&quot;https://html5up.net/&quot;&gt;HTML5 Up&lt;/a&gt; for coding the &lt;a href=&quot;https://github.com/ChangoMan/gatsby-starter-forty&quot;&gt;Gatsby starter&lt;/a&gt; that I used.&lt;/p&gt;
&lt;p&gt;The speed is lightning fast. We removed WordPress entirely from the equation and replaced it with the more user-friendly, less of a headache &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;He also liked the cost-effectiveness of Godaddy but when things broke, it was a huge time suck to repair. We swapped Godaddy with &lt;a href=&quot;https://netlify.com&quot;&gt;Netlify&lt;/a&gt; and used Netlify to automatically run production builds from our Github repo. We wired Contentful to Netlify using a hook and to GatsbyJS using API keys and now Iron Cove’s site was fast and super simple to update. A win-win all around.&lt;/p&gt;
&lt;p&gt;Patrick loved Gatsby so much he created a new product line where he is actively looking to help companies build sites using GatsbyJS and all the other tools he used on his current site.&lt;/p&gt;
&lt;h3 id=&quot;what-do-you-teach&quot;&gt;&lt;a href=&quot;#what-do-you-teach&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What do you teach?&lt;/h3&gt;
&lt;p&gt;This term I teach Emerging Technologies at AI, which is a class that gives me the freedom to teach something cutting edge. This is my favorite class to teach as I get to teach something I am currently using/learning.&lt;/p&gt;
&lt;p&gt;Since I just built a site using GatsbyJS, I decided this was the perfect topic to cover in the class. A year ago, I was thinking of teaching Jekyll (jekyllrb.com) because it was so cool and fast, but it was not well received, and the students hated the process and typing Markdown. So, I scrapped it and just introduced them to Node.&lt;/p&gt;
&lt;p&gt;Structure of the class:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;Taught them React.&lt;/em&gt; They loved &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; and how it magically created a server and gave them hot code push powers.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Taught them NextJS.&lt;/em&gt; They liked how routing was removed from the equation and they could just drop stuff into the pages directory and they would magically work.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Taught them Gatsby.&lt;/em&gt; Learning NextJS wasn’t as smooth as I would have liked but once we jumped to learn GatsbyJS, some interesting things happened. A light when on. They were excited.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;“Once we jumped to learn GatsbyJS, some interesting things happened. A light when on. They were excited.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;what-do-your-students-like-about-gatsby&quot;&gt;&lt;a href=&quot;#what-do-your-students-like-about-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What do your students like about Gatsby?&lt;/h3&gt;
&lt;p&gt;Here’s a list of what they love about Gatsby:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Hot reloading&lt;/em&gt; gives them instant visual feedback like they get in Illustrator and Photoshop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Coding in React&lt;/em&gt; is fun. By fun, they mean it’s easy to add modules, don’t have to build everything from scratch, and they already knew enough about creating React components from Phil’s teaching to jump into Gatsby&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Docs:&lt;/em&gt; While not perfect, the Gatsby tutorial and documentation. was “approachable”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Speed&lt;/em&gt;: They never heard of static site generators or the JAMstack, but the speed immediately impressed them&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Built off previous knowledge:&lt;/em&gt; They were able to use the routing knowledge they gleaned from NextJS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Uses simple commands:&lt;/em&gt; They work locally and type &lt;code class=&quot;language-text&quot;&gt;$ gatsby develop&lt;/code&gt;. A server opens up and they see and can edit their site in real time. Easy peasy. They want to build for production they use &lt;code class=&quot;language-text&quot;&gt;$ gatsby build &amp;amp;&amp;amp; gatsby serve&lt;/code&gt;. Simple!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Netlify:&lt;/em&gt; When I showed them Netlify and how they could quickly (and freely) push their site to Github and hook it up to Netlify so that it would automatically build it and make their site live! They were blown away.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Fast to build:&lt;/em&gt; They were able to create their final projects in 3 weeks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;anything-they-didnt-like&quot;&gt;&lt;a href=&quot;#anything-they-didnt-like&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anything they didn’t like?&lt;/h3&gt;
&lt;p&gt;One thing they wanted more of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they wanted more sample sites built with Gatsby.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They suggest that a link be added to the home page of Gatsby pointing to it and all sites with git repos should be searchable first.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: His students are in luck! The &lt;a href=&quot;https://dreamy-shannon-191f15.netlify.com/starter-showcase/?sort=stars&quot;&gt;Starter Showcase&lt;/a&gt; (see &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/6113&quot;&gt;PR 6113&lt;/a&gt;) and &lt;a href=&quot;https://next.gatsbyjs.org/showcase/&quot;&gt;Site Showcase&lt;/a&gt; (&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues?utf8=%E2%9C%93&amp;#x26;q=is%3Aissue+is%3Aopen+site+showcase&quot;&gt;see relevant issues here&lt;/a&gt;) are nearly done.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;what-do-you-like-about-teaching-with-gatsby&quot;&gt;&lt;a href=&quot;#what-do-you-like-about-teaching-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What do you like about teaching with Gatsby?&lt;/h3&gt;
&lt;p&gt;It wasn’t just Gatsby but the whole collaborative team of Gatsby, Git, Github, and Netlify that broke through to every student this term. It was amazing to witness this as a teacher. I also tried to show them blogs and Markdown but that wasn’t super smooth and none of the students added that part to their final project.&lt;/p&gt;
&lt;p&gt;In my next class with Gatsby, I plan on introducing Contentful and GraphCMS to show them CAAS sites.&lt;/p&gt;
&lt;h3 id=&quot;phils-final-thoughts&quot;&gt;&lt;a href=&quot;#phils-final-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phil’s final thoughts:&lt;/h3&gt;
&lt;p&gt;This technological experiment was a huge success.&lt;/p&gt;
&lt;p&gt;My students:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;had fun in this class&lt;/li&gt;
&lt;li&gt;applied what they learned&lt;/li&gt;
&lt;li&gt;felt comfortable enough walking over and helping each other&lt;/li&gt;
&lt;li&gt;had lots of smiles on the last day&lt;/li&gt;
&lt;li&gt;all turned in a final project (this doesn’t always happen)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the students hadn’t coded HTML or CSS in a couple years and just came back to school. Even that student jumped on board and created a working website.&lt;/p&gt;
&lt;p&gt;One student dug into the documentation and figured out how to get lightbox working.&lt;/p&gt;
&lt;p&gt;One of the students who fell behind found out I was teaching Gatsby next term and he asked if he could sit in on my class and audit because he thought learning Gatsby was important and he wanted to have more time to get better with it.&lt;/p&gt;
&lt;p&gt;I thoroughly enjoyed this term and plan on teaching Gatsby next term again for my advanced web class.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Automatically create pages from components in any directory]]></title><description><![CDATA[In this article we will talk about a new plugin that lets you auto create
pages from components in any folder within your Gatsby project! We…]]></description><link>https://www.gatsbyjs.org/blog/2018-07-07-the-gatsby-plugin-page-creator/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-07-07-the-gatsby-plugin-page-creator/</guid><dc:creator><![CDATA[Steven Natera]]></dc:creator><content:encoded>&lt;p&gt;&lt;img src=&quot;plugin-library-page-creator.png&quot; alt=&quot;Gatsby plugin page creator in the plugin library&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this article we will talk about a new plugin that lets you auto create
pages from components in any folder within your Gatsby project! We will chat about the
problem that sparked the creation of this plugin. Afterwards, we’ll talk about how you can
use this plugin to auto create pages without having to place your components in the &lt;strong&gt;src/pages&lt;/strong&gt; directory.&lt;/p&gt;
&lt;h1 id=&quot;the-problem-with-static-values&quot;&gt;&lt;a href=&quot;#the-problem-with-static-values&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The problem with static values&lt;/h1&gt;
&lt;p&gt;Here’s how it all got started. The goal with &lt;a href=&quot;https://gatsbymanor.com&quot;&gt;Gatsby Manor&lt;/a&gt; (a separate project, unaffiliated with the Gatsby core team)
is to create professional designed Gatsby starters
to give your site a clean, modern look the moment you create a new project.
While creating our newest starter
&lt;a href=&quot;https://gatsbymanor.com/demo/eventually&quot;&gt;gatsby-starter-eventually&lt;/a&gt;,
I wanted to organize the directory structure of the project to better fit my
workflow.&lt;/p&gt;
&lt;p&gt;Gatsby core automatically turns React components in &lt;strong&gt;src/pages&lt;/strong&gt; into pages.
Prior to this plugin, that functionality was only available to Gatsby core
as an internal plugin. There was no way to have a different folder
automatically create pages from components because the default &lt;strong&gt;src/pages&lt;/strong&gt;
path was hardcoded. The side effect of this behavior
is that you have a hard time creating folder structures that best fit your needs.
If you wanted all your javascript to live in a single folder, you would
lose the ability to automatically create pages.&lt;/p&gt;
&lt;h1 id=&quot;the-community-asks-for-a-solution&quot;&gt;&lt;a href=&quot;#the-community-asks-for-a-solution&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The community asks for a solution&lt;/h1&gt;
&lt;p&gt;After searching the repo issues for a solution, I found other people
having the same problem and asking for a solution. A user in
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/2424&quot;&gt;#2424&lt;/a&gt; wanted to move their
components into a render folder. Another wanted to keep their Gatsby code
near non-Gatsby related code but under a different directory name.&lt;/p&gt;
&lt;p&gt;One &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/2514&quot;&gt;issue&lt;/a&gt; raised how
uncommon this pattern might be when handing a project over to other
clients that are less technical. Each issue focused on a valid concern, with
many community members in support of a better convention. With this data,
I set out to determine a solution for this problem.&lt;/p&gt;
&lt;h1 id=&quot;the-great-pull-request&quot;&gt;&lt;a href=&quot;#the-great-pull-request&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The great pull request&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;page-creator-pull-request.png&quot; alt=&quot;Pull request for gatsby plugin page creator&quot;&gt;&lt;/p&gt;
&lt;p&gt;With the help of Kyle Mathews, he directed me to the location of the
internal plugin responsible for the hardcoded behavior. To support the desired
functionality, we would have to extract the internal plugin so
any project could download the plugin from npm.&lt;/p&gt;
&lt;p&gt;The next step would be to add a path option that takes a directory path string
to denote the directory of components we want to use for
automatic page creation. With a development plan in place, I started
coding a solution. After a few days of coding, I opened a pull request to
add a &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-page-creator&lt;/code&gt; to the Gatsby Plugin
Library. After a few weeks of code reviews the
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/4490&quot;&gt;pull request&lt;/a&gt; was merged!&lt;/p&gt;
&lt;h1 id=&quot;how-you-can-use-this-plugin&quot;&gt;&lt;a href=&quot;#how-you-can-use-this-plugin&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How you can use this plugin&lt;/h1&gt;
&lt;p&gt;You can find
&lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-plugin-page-creator/?=page-creator&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-page-creator&lt;/code&gt;&lt;/a&gt;
in the plugin library. Use &lt;code class=&quot;language-text&quot;&gt;yarn add gatsby-plugin-page-creator&lt;/code&gt; to add this
into your project. In &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, use a JSON object to use the
plugin, making sure to add the required path option with your desired directory
path.&lt;/p&gt;
&lt;p&gt;If you need to designate another location for auto page creation, add another entry of the
plugin with a different path. You can have unlimited directories responsible for
auto page creation. The result is you can keep your project well organized without
having to give up on the most powerful out-of-the-box feature.&lt;/p&gt;
&lt;h1 id=&quot;community-reception&quot;&gt;&lt;a href=&quot;#community-reception&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community reception&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;npm-stats.png&quot; alt=&quot;NPM stats for gatsby plugin page creator&quot;&gt;&lt;/p&gt;
&lt;p&gt;This plugin has by far been the most impactful open source contribution I have made
to date. As of writing, the newly published Gatsby plugin has been
&lt;a href=&quot;https://npm-stat.com/charts.html?package=gatsby-plugin-page-creator&amp;#x26;from=2018-06-01&amp;#x26;to=2018-07-18&quot;&gt;downloaded more than 50k+ times&lt;/a&gt;
in less than a month!&lt;/p&gt;
&lt;p&gt;I am happy this plugin is being used by so many developers. What brings me even more joy is that this small contribution will help the Gatsby community continue to deliver an amazing open source tool.&lt;/p&gt;
&lt;h1 id=&quot;gatsby-manor&quot;&gt;&lt;a href=&quot;#gatsby-manor&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby Manor&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://gatsbymanor.com&quot;&gt;Gatsby Manor&lt;/a&gt; builds professional design
Gatsby starters. We make starters to meet your project needs, with new starters
added monthly. Can’t find a starter you like? Message us and we’ll
build a starter project for you.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Presenting the Docs Redesign Card Sort Results]]></title><description><![CDATA[What is a card sort? Recently, 36 Gatsby users completed an open card sort to help make our docs here on gatsbyjs.org easier to use. Without…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-26-card-sort-results/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-26-card-sort-results/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;h2 id=&quot;what-is-a-card-sort&quot;&gt;&lt;a href=&quot;#what-is-a-card-sort&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is a card sort?&lt;/h2&gt;
&lt;p&gt;Recently, 36 Gatsby users completed an open card sort to help make our docs here on gatsbyjs.org easier to use. Without any outside input or help, they each sorted 90 cards into categories that made sense to them and then named those categories.&lt;/p&gt;
&lt;h3 id=&quot;raw--beautified-data&quot;&gt;&lt;a href=&quot;#raw--beautified-data&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw &amp;#x26; beautified data&lt;/h3&gt;
&lt;p&gt;I ran this card sort through &lt;a href=&quot;https://www.optimalworkshop.com/&quot;&gt;OptimalSort&lt;/a&gt;, a software that moderates the card sort and presents the data in usable forms. If you’re curious to see the full results, you can &lt;a href=&quot;https://www.optimalworkshop.com/optimalsort/x87kpp82/5x34psa3-0/shared-results/fa8b66knb66qyhwh5l8j38bd273vkkm7&quot;&gt;view the data&lt;/a&gt;, including raw data as well as things like a similarity matrix and a &lt;a href=&quot;https://support.optimalworkshop.com/hc/en-us/articles/201997650-Interpreting-the-OptimalSort-dendrograms&quot;&gt;dendogram&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;how-did-participants-categorize-the-docs&quot;&gt;&lt;a href=&quot;#how-did-participants-categorize-the-docs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did participants categorize the docs?&lt;/h2&gt;
&lt;p&gt;People sorted the docs into the following categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get Started / Welcome to Gatsby / Intro&lt;/li&gt;
&lt;li&gt;Development environment&lt;/li&gt;
&lt;li&gt;Releases &amp;#x26; Migration&lt;/li&gt;
&lt;li&gt;Core Concepts / About Gatsby&lt;/li&gt;
&lt;li&gt;Advanced Guides&lt;/li&gt;
&lt;li&gt;API Reference&lt;/li&gt;
&lt;li&gt;Tutorials / Examples&lt;/li&gt;
&lt;li&gt;Contributing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These categories weren’t too surprising (I included multiple names when the some category names were equally popular). However, upon further digging into the data, I discovered some unexpected results that further refine how we might categorize the docs, write new docs, and change how we think and talk about Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;pwa&quot;&gt;&lt;a href=&quot;#pwa&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PWA&lt;/h2&gt;
&lt;p&gt;No one seems to know what to do with the doc titled “Building apps with Gatsby”. In the similarity matrix data visualization, 41% of people associated it with the “Authentication tutorial” doc and 41% also associated it with the “Progressive web app” doc. A 41% isn’t &lt;em&gt;very&lt;/em&gt; strong. Essentially, this means participants didn’t think it “fit” very snugly alongside any other docs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;building-apps-with-gatsby.png&quot; alt=&quot;Building apps with Gatsby is weakly associated with other docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;This could mean several things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We don’t have very many docs about how Gatsby can be used to build dynamic apps&lt;/li&gt;
&lt;li&gt;People don’t think of Gatsby as a tool they’d use to build apps with&lt;/li&gt;
&lt;li&gt;The title of the doc is too broad or too vague&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Without interviewing each participant I can’t be sure, but I’m inclined to think a combination of all three factors means people don’t know where to put that doc in the navigation. This might mean we need clarity in how we present what Gatsby &lt;em&gt;is&lt;/em&gt; in all our informational material and marketing and that we build more docs about Gatsby being more than a static site generator.&lt;/p&gt;
&lt;h3 id=&quot;deployment&quot;&gt;&lt;a href=&quot;#deployment&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h3&gt;
&lt;p&gt;There was a lot of disagreement about where docs about deployment should go. For example, card sort participants placed the “Build and deploy a live site” doc in 28 unique categories. Here’s a sample of the categories:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;deployment-categories.png&quot; alt=&quot;Deployment categories&quot;&gt;&lt;/p&gt;
&lt;p&gt;The three most common categories it was placed under are “Getting Started”, “Tutorials,” and “Deployment.” Other categories include “Examples,” “Guides,” and “Production.” Here are the deployment docs that need to find a place to call home:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build and deploy a site&lt;/li&gt;
&lt;li&gt;Preparing site for deployment&lt;/li&gt;
&lt;li&gt;Deploying a site live online&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One solution that occurred to me is to bring Deployment &amp;#x26; Hosting to top level navigation as their own category, since there was so little agreement on where to put them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; If you look at the data, the number of unique categorizations isn’t always a useful number, because Optimal Sort considers “getting started” and “get started” to be different categories even though a human eye can see they are essentially the same. However, in the case of these deployment docs, there were 28 categories and many of them are &lt;em&gt;truly unique&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;core-concepts-vs-advanced-guides&quot;&gt;&lt;a href=&quot;#core-concepts-vs-advanced-guides&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Concepts vs. Advanced Guides&lt;/h3&gt;
&lt;p&gt;There was quite a bit of overlap in the docs people assigned to these two categories. This is probably because the two categories have a close relationship with each other; they work in harmony to help Gatsby users build at an advanced level. For example, if you read about how Gatsby works with GraphQL in “Core Concepts,” there is a high chance you’ll want to start playing with GraphQL queries and find examples of these in “Advanced Guides.” I’m not entirely sure how to reflect this close relationship in the docs; the most straightforward way is probably for each doc in “Core Concepts” to have a list of relevant links in “Advanced Guides,” and vice versa.&lt;/p&gt;
&lt;p&gt;Here’s a sampling of docs that people associate with both categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Search engine optimization (SEO)&lt;/li&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;E-commerce&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List of other lonely docs that didn’t find a solid home through the card sort:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The “RFC Process” doc didn’t find a snug fit. Two people didn’t know what it meant, and 44% of people put it under Contributing, but that’s not a majority. Seems like many people don’t know where to put it. I’m wondering if the title is too vague.&lt;/li&gt;
&lt;li&gt;There was little agreement on where the “Html.js” doc goes. There was a 47% association with Babel and a 47% association with using layouts to build reusable site sections.&lt;/li&gt;
&lt;li&gt;“React components” highest association was a 47% association with “basic structure of a Gatsby site” and all its associated pages. This slightly low association score probably results from the fact that the .org site doesn’t teach that much React at all, and there aren’t many docs on React specifically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dendogram-adventures&quot;&gt;&lt;a href=&quot;#dendogram-adventures&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dendogram adventures&lt;/h2&gt;
&lt;p&gt;These screenshots that show a portion of the dendogram show that the clearest category was “Contributing”, clear because the category name and the contents of the category are consistent:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;contributing-dendogram.png&quot; alt=&quot;Contributing dendogram&quot;&gt;&lt;/p&gt;
&lt;p&gt;Gatsby users are in agreement on what that category ought to be called and what docs it should contain :)&lt;/p&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;&lt;a href=&quot;#next-steps&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps&lt;/h2&gt;
&lt;h3 id=&quot;usability-testing&quot;&gt;&lt;a href=&quot;#usability-testing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usability testing&lt;/h3&gt;
&lt;p&gt;The next step is to conduct usability testing on a new design of the .org site. I’ve already conducted 8 usability tests with several more coming (5-7 produces reliable data in conventional UX research practices) and I’m seeing more ways to improve what we place in these categories as well as many ways I can improve my usability testing :).&lt;/p&gt;
&lt;p&gt;Many thanks to all those participants who have been enthusiastic and willing to give feedback, including Korey Boone, Shannon Smith, Peter Wiebe, Abhishek Vishwakarma, Ria Carmin, and Hugo Marques, Bogdan Lazar, Cameron Steele, and Simon Koelewijn. There are quite a few more people meeting with me in the upcoming week.&lt;/p&gt;
&lt;p&gt;These are the docs categories I’ve used for usability testing so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get Started&lt;/li&gt;
&lt;li&gt;Core Concepts&lt;/li&gt;
&lt;li&gt;Releases&lt;/li&gt;
&lt;li&gt;API Reference&lt;/li&gt;
&lt;li&gt;Recipes&lt;/li&gt;
&lt;li&gt;Tutorials&lt;/li&gt;
&lt;li&gt;Contributing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are a few realizations from usability testing already:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sometimes people don’t see the search bar on the .org site&lt;/li&gt;
&lt;li&gt;when searching for something in the docs or to solve an error, many people do a google search before using docs navigation or the .org search bar&lt;/li&gt;
&lt;li&gt;the category name “Recipes” was unclear to most people, although once they see the contents of the category, most people tend to like it&lt;/li&gt;
&lt;li&gt;the usability testing validated one of the card sort results, which is that some docs kind of fit in three categories: “Core Concepts” and “Recipes” and “Tutorials”. These categories are all closely related and will need to link to each other often&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;whats-next&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s next&lt;/h3&gt;
&lt;p&gt;Stay tuned for the results of the usability test and the new sidebar menu of the .org site, which will likely get released together :D&lt;/p&gt;
&lt;p&gt;And please read and comment on the &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/pull/5&quot;&gt;Doc Redesign RFC&lt;/a&gt; if you have more ideas on how we can redesign the docs!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Escalade Sports: From $5000 to $5/month in Hosting With Gatsby]]></title><description><![CDATA[Escalade Sports  is a sports equipment company with a portfolio of 40 brands across a wide variety of sports—from Goalrilla basketball hoops…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-14-escalade-sports-from-5000-to-5-in-hosting/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-14-escalade-sports-from-5000-to-5-in-hosting/</guid><dc:creator><![CDATA[Sam Bhagwat]]></dc:creator><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.escaladesports.com/&quot;&gt;Escalade Sports&lt;/a&gt; is a sports equipment company with a portfolio of 40 brands across a wide variety of sports—from Goalrilla basketball hoops to Bear Archery bows to Onix pickleball paddles.&lt;/p&gt;
&lt;p&gt;Headquartered in Evansville, Indiana, USA, Escalade sells its equipment direct-to-consumers online, as well as through a network of local and regional distributors and specialty stores.&lt;/p&gt;
&lt;p&gt;Escalade recently started migrating its sites to Gatsby. They first chose to migrate one of their e-commerce brands, &lt;a href=&quot;https://cajunbowfishing.com/&quot;&gt;cajunbowfishing.com&lt;/a&gt; and recently relaunched it on Gatsby. Next they’ll be migrating the Escalade Sports homepage and then other brand sites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./cajun-bowfishing-homepage.jpg&quot; alt=&quot;cajunbowfishing.com homepage&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;making-the-decision-to-migrate-to-gatsby&quot;&gt;&lt;a href=&quot;#making-the-decision-to-migrate-to-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making the decision to migrate to Gatsby&lt;/h1&gt;
&lt;p&gt;When lead developer Kennedy Rose took responsibility for Escalade’s web stack, the first challenges he confronted were stability issues.&lt;/p&gt;
&lt;p&gt;“When I started, all of our sites were on Drupal,” said Rose. “The problem was that it wasn’t stable. The sites all shared a core, and when the core went down, everything went down.”&lt;/p&gt;
&lt;p&gt;Successful marketing efforts created traffic spikes — but the technology stack couldn’t keep up with demand.&lt;/p&gt;
&lt;p&gt;“Whenever we had a trade show, our sites would just go down,” Rose said, “We had to put a load balancer in front of multiple servers in order to keep it up. It just wasn’t working—and when that happens after a trade show, you’re just not getting your ROI.”&lt;/p&gt;
&lt;p&gt;As a long-time React fan, Rose turned first to a Node/Express stack to handle the stability issues, and then Next.js. Ultimately he moved away from the idea due to the complexity of handling the kinds of data he was dealing with.&lt;/p&gt;
&lt;p&gt;“We had to create custom modules during the build, then dump data into JSON, then import the JSON from these files, then pull it into the component using getInitialProps,” Rose explained. “There isn’t really a plugin ecosystem [in Next.js] - if you wanted to modify webpack in any way, you want to manually reach into configuration files.”&lt;/p&gt;
&lt;p&gt;Data loading is a big deal to Rose because of the way Escalade is structured. As a portfolio of brands, each brand is a department with wide latitude to run itself almost independently. That meant each brand has its own requirements and own APIs for its product catalog, that might or might not be formatted in similar ways.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./cajun-bowfishing-product-categories.jpg&quot; alt=&quot;cajunbowfishing.com product categories&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;benefits-theyve-found-using-gatsby&quot;&gt;&lt;a href=&quot;#benefits-theyve-found-using-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benefits they’ve found using Gatsby&lt;/h1&gt;
&lt;p&gt;Then Rose found Gatsby. Gatsby’s plugin system solved his data problems—he was able to encapsulate data fetching into Gatsby plugins that ran at build time. It also prevented data bloat—he often didn’t need the full JSON data being returned by APIs, and with GraphQL he could query only what he needed.&lt;/p&gt;
&lt;p&gt;And as Escalade started to use Gatsby, Rose found other benefits.&lt;/p&gt;
&lt;p&gt;“Working with Gatsby, if someone does know React, there’s really not a whole lot more they need to learn,” says Rose. “We were able to get contractors on board much easier than with previous projects.”&lt;/p&gt;
&lt;p&gt;Working with another developer, a photographer, and a graphic designer, he found that projects progressed quicker because prototype code was suddenly reusable.&lt;/p&gt;
&lt;p&gt;“Almost all the code we used in prototyping went into production,” says Rose. “Especially back in the Drupal days, that was just not going to happen.&lt;/p&gt;
&lt;p&gt;Another unexpected benefit was the cost reduction of hosting static content, instead of running PHP servers. After migrating to Gatsby, Rose moved the cajunbowfishing.com website hosting over to &lt;a href=&quot;www.netlify.com&quot;&gt;Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;“Our bill went from $5,000 a month to $5,” he says.&lt;/p&gt;
&lt;p&gt;The most challenging piece of the move, Rose said, was helping others understand what the new technology stack looks like.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./cajun-bowfishing-products.jpg&quot; alt=&quot;cajunbowfishing.com products&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Cajun Bowfishing store is a hybrid application, pulling in some data at build time using Gatsby plugins (Salsify, Markdown, custom pricing &amp;#x26; stock APIs). Other data is queried live from the client—a shopping cart API and a dealer API for a map-based store locator.&lt;/p&gt;
&lt;p&gt;The trickiest part, Rose said, was communicating what the new stack looks like. “There’s a misconception about these technologies,” he says. “People would ask, ‘If we move away from Drupal does that mean that we don’t have a CMS anymore?’”&lt;/p&gt;
&lt;p&gt;What others took time to realize is that with a Gatsby site, all of the complexity Rose used to have to manage just went away.&lt;/p&gt;
&lt;p&gt;“Not having these systems,” Rose says, “is actually a benefit.”&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Life After Layouts]]></title><description><![CDATA[So the Gatsby V2 beta is out, and Gatsby’s  layout components are going away . What does this mean for your projects? This article will dive…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-08-life-after-layouts/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-08-life-after-layouts/</guid><dc:creator><![CDATA[Jason Lengstorf]]></dc:creator><content:encoded>&lt;p&gt;So the Gatsby V2 beta is out, and Gatsby’s &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/blob/master/text/0002-remove-special-layout-components.md&quot;&gt;layout components are going away&lt;/a&gt;. What does this mean for your projects?&lt;/p&gt;
&lt;p&gt;This article will dive into the Gatsby V2’s approach to layouts, talk about what changed and why, and walk through the migration process to get your existing projects updated to V2.&lt;/p&gt;
&lt;h2 id=&quot;what-changed&quot;&gt;&lt;a href=&quot;#what-changed&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What changed?&lt;/h2&gt;
&lt;p&gt;In Gatsby V1, layouts were a special kind of component that automagically wrapped generated page components. They were stored in &lt;code class=&quot;language-text&quot;&gt;src/layouts/&lt;/code&gt;, and received a prop called &lt;code class=&quot;language-text&quot;&gt;children&lt;/code&gt; that needed to be executed as a function.&lt;/p&gt;
&lt;h3 id=&quot;how-it-works-in-gatsby-v1&quot;&gt;&lt;a href=&quot;#how-it-works-in-gatsby-v1&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works in Gatsby V1&lt;/h3&gt;
&lt;p&gt;A simple layout would live at &lt;code class=&quot;language-text&quot;&gt;src/layouts/index.js&lt;/code&gt; and might contain the following code:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; children &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app-wrapper&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Our app also might have a home page at &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt; that looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;I&lt;/span&gt;’m &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; a layout&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Once we start the app, we’ll see the following in the browser console:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;simple-layout.png&quot; alt=&quot;Screenshot of the generated markup with the layout wrapper around the page content.&quot;&gt;&lt;/p&gt;
&lt;p&gt;Like magic, our page is wrapped with the &lt;code class=&quot;language-text&quot;&gt;.app-wrapper&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;If you’d like to try out this app, check out the &lt;a href=&quot;https://github.com/jlengstorf/life-after-layouts/tree/v1-layout&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;v1-layout&lt;/code&gt; branch of the demo repo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;how-it-works-in-gatsby-v2&quot;&gt;&lt;a href=&quot;#how-it-works-in-gatsby-v2&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works in Gatsby V2&lt;/h3&gt;
&lt;p&gt;In V2, layouts are no longer automatically applied to our pages (more on &lt;em&gt;why&lt;/em&gt; this decision was made in the next section).&lt;/p&gt;
&lt;p&gt;This ultimately boils down to two breaking changes and one recommendation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;BREAKING CHANGE:&lt;/strong&gt; Components at &lt;code class=&quot;language-text&quot;&gt;src/layouts/&lt;/code&gt; are no longer automagically wrapped around page components.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BREAKING CHANGE:&lt;/strong&gt; The &lt;code class=&quot;language-text&quot;&gt;children&lt;/code&gt; prop in our layout components is no longer a function (unless you explicitly provide a function).&lt;/li&gt;
&lt;li&gt;We now recommend moving your layout components alongside the rest of your components (e.g. into &lt;code class=&quot;language-text&quot;&gt;src/components/&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If we upgrade our simplified app by running &lt;code class=&quot;language-text&quot;&gt;yarn add gatsby@next react react-dom&lt;/code&gt; (see &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/&quot;&gt;the V1 =&gt; V2 migration guide&lt;/a&gt; for more information on why we need to install React here), we need to upgrade our layout by moving &lt;code class=&quot;language-text&quot;&gt;src/layouts/index.js&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;src/components/layout.js&lt;/code&gt; and changing &lt;code class=&quot;language-text&quot;&gt;children&lt;/code&gt; from a function to a regular prop:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; children &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app-wrapper&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;children&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Next, in &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt; we need to explicitly include the &lt;code class=&quot;language-text&quot;&gt;Layout&lt;/code&gt; component and wrap our page in it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Layout &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../components/layout&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;I&lt;/span&gt;’m &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; a layout&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Once we’ve made these changes, we can run &lt;code class=&quot;language-text&quot;&gt;yarn develop&lt;/code&gt; and see the updated layout in our browser:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;simple-layout-v2.png&quot; alt=&quot;Screenshot of the updated layout in the browser.&quot;&gt;&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://github.com/jlengstorf/life-after-layouts&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;v2-layout&lt;/code&gt; branch of the demo repo&lt;/a&gt; to see this in action, or see &lt;a href=&quot;https://github.com/jlengstorf/life-after-layouts/compare/v1-layout...v2-layout&quot;&gt;the diff&lt;/a&gt; for details on exactly what changed.&lt;/p&gt;
&lt;h2 id=&quot;why-change-the-layouts&quot;&gt;&lt;a href=&quot;#why-change-the-layouts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why change the layouts?&lt;/h2&gt;
&lt;p&gt;Looking at the difference in code, it might be tempting to think, “Doesn’t that just create &lt;em&gt;more work&lt;/em&gt; for developers who want to use layouts?”&lt;/p&gt;
&lt;p&gt;In short, the decision to remove layouts was part of an effort to reduce unnecessary complexity and mystery issues in Gatsby projects.&lt;/p&gt;
&lt;h3 id=&quot;what-was-the-unnecessary-complexity&quot;&gt;&lt;a href=&quot;#what-was-the-unnecessary-complexity&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What was the unnecessary complexity?&lt;/h3&gt;
&lt;p&gt;Because layouts in V1 were applied under the hood, it made it &lt;em&gt;really hard&lt;/em&gt; to pass data between the layout and the pages it wrapped.&lt;/p&gt;
&lt;p&gt;In short, layouts in V1 broke React’s compositional model, and that made things unnecessarily hard to implement. By going back to the standard React way of importing components and using them directly, we’re able to easily pass data between the layout and pages without any confusing, complicated, or otherwise unwieldy workarounds.&lt;/p&gt;
&lt;h3 id=&quot;what-are-mystery-issues&quot;&gt;&lt;a href=&quot;#what-are-mystery-issues&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are mystery issues?&lt;/h3&gt;
&lt;p&gt;In V1, if something breaks on your page, you’d likely go to the page, look through the code, and try to spot the bug. But what if the bug is in the magic layout component? That component isn’t referenced anywhere on the page, and if you don’t &lt;em&gt;already know&lt;/em&gt; that Gatsby V1 wraps pages with layouts, it’s pretty difficult to figure out what’s going on.&lt;/p&gt;
&lt;p&gt;Because Gatsby is doing things in the background, out of sight of the developers building the site, we’re creating a mystery: where the hell did this bug come from if all the code I can see doesn’t have the bug?&lt;/p&gt;
&lt;p&gt;By removing the magic and making layouts an explicit dependency in V2, that same bug would be much easier to spot because there’s a clear link between our page code and the layout.&lt;/p&gt;
&lt;h3 id=&quot;why-is-this-better&quot;&gt;&lt;a href=&quot;#why-is-this-better&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is this better?&lt;/h3&gt;
&lt;p&gt;Our goal at Gatsby is to make building great apps more fun and less frustrating — and &lt;em&gt;very few things&lt;/em&gt; are more frustrating than mystery bugs.&lt;/p&gt;
&lt;p&gt;This change reduces the number of mysteries in your Gatsby projects, and makes debugging a little simpler.&lt;/p&gt;
&lt;h2 id=&quot;what-else-is-changing&quot;&gt;&lt;a href=&quot;#what-else-is-changing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What else is changing?&lt;/h2&gt;
&lt;p&gt;Removing layouts isn’t the only improvement coming in Gatsby V2. We’re really excited to introduce a lot of new and exciting features, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Much faster hot reloading, which enables Ludicrous Mode&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Coming soon to Gatsby v2: Ludicrous mode data hot reloading ;-)&lt;a href=&quot;https://t.co/by1PyOYXc0&quot;&gt;https://t.co/by1PyOYXc0&lt;/a&gt;&lt;br&gt;&lt;br&gt;(note, this gif is not sped up at all) &lt;a href=&quot;https://t.co/hFIYMbpalN&quot;&gt;pic.twitter.com/hFIYMbpalN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Gatsby (@gatsbyjs) &lt;a href=&quot;https://twitter.com/gatsbyjs/status/974507205121617920?ref_src=twsrc%5Etfw&quot;&gt;March 16, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We can now add GraphQL queries to any component in our app (not just page components) using &lt;a href=&quot;https://next.gatsbyjs.org/docs/static-query/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;StaticQuery&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgraded to the latest versions of React, Babel, Webpack, and other libraries Gatsby depends on&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Better support for CSS inlining and splitting, which will boost performance&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a full list of what’s new, check out our &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/&quot;&gt;V2 migration guide&lt;/a&gt; and &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-06-16-announcing-gatsby-v2-beta-launch/&quot;&gt;&lt;em&gt;What’s New in Gatsby V2?&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can get started using Gatsby V2 right now by installing our V2 default starter:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby new my-gatsby-v2-site https://github.com/gatsbyjs/gatsby-starter-default#v2&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Huge thanks to &lt;a href=&quot;https://github.com/mottox2&quot;&gt;Yuki Takemoto&lt;/a&gt; for upgrading the starter to V2!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/projects/2&quot;&gt;see the V2 roadmap&lt;/a&gt;, help us squash any V2 bugs by opening &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues&quot;&gt;issues&lt;/a&gt; or sending &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pulls&quot;&gt;pull requests&lt;/a&gt;, or &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;follow along with our progress on Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can’t wait to see what you build with this new and improved version of Gatsby!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Moving from create-react-app to Gatsby.js]]></title><description><![CDATA[How to Move from create-react-app to Gatsby.js]]></description><link>https://www.gatsbyjs.org/blog/2018-06-18-moving-from-create-react-app-to-gatsby-js/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-18-moving-from-create-react-app-to-gatsby-js/</guid><dc:creator><![CDATA[Khaled Garbaya]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This blog post was originally posted on the &lt;a href=&quot;https://khaledgarbaya.net/articles/moving-from-create-react-app-to-gatsby-js&quot;&gt;Khaled Garbaya Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/B8BpyFB720SAM8qW68qgY/0b2020576a2d44640a9de1302b6e9ff8/businessman-2108029_1280.jpg&quot; alt=&quot;Man moving boxes&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;create-react-app&lt;/a&gt; is a build CLI, it helps you bootstrap a new React app without the need to configure tools like &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt; or &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They are preconfigured and hidden so that you can focus on the code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you came across &lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;Gatsby&lt;/a&gt; you will notice that there is a lot of similarity between them. In this blog post I will explain the key difference between the two.&lt;/p&gt;
&lt;h2 id=&quot;what-is-gatsby&quot;&gt;&lt;a href=&quot;#what-is-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Gatsby?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/4OW1X9ex1mImko8G4w4WAK/a16fceab310b718c7f375a760c4e1e16/logo-gatsby-0603eb9dd6bdfec9599dbc7590f891be-347ea.jpg&quot; alt=&quot;gatsby-logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;Gatsby is a blazing fast static site generator for &lt;a href=&quot;https://github.com/facebook/react&quot;&gt;React&lt;/a&gt;. Actually, it is more than that. Think of it as a PWA (Progressive Web App) framework with best practices baked in. For example: you get code and data splitting out-of-the-box.&lt;/p&gt;
&lt;h2 id=&quot;why-move-to-gatsby&quot;&gt;&lt;a href=&quot;#why-move-to-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Move to Gatsby?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/3KWkbincyQaSCOE2SIkS88/4e89a683e737c99688d662cd7786468d/tools-864983_1280.jpg&quot; alt=&quot;tools-picture&quot;&gt;&lt;/p&gt;
&lt;p&gt;Gatsby lets you use a modern web stack without the setup headache. With its flexible plugin system it lets you bring your own data sources like &lt;a href=&quot;https://contentful.com&quot;&gt;Contentful&lt;/a&gt;, databases or your filesystem.&lt;/p&gt;
&lt;p&gt;When you build your Gatsby website you will end up with static files. They are easy to deploy on a lot of services like &lt;a href=&quot;https://netlify.com&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Amazon S3&lt;/a&gt; and more.&lt;/p&gt;
&lt;p&gt;Gatsby provides code and data splitting out-of-the-box. It loads your critical HTML and CSS first. Once that’s loaded it prefetches resources for other pages. That’s why clicking around feels so fast.&lt;/p&gt;
&lt;p&gt;Gatsby uses React components as a view layer so you can share and reuse them across pages/projects. Once it loads the page’s javascript code, your website becomes a full React app.&lt;/p&gt;
&lt;p&gt;Gatsby uses &lt;a href=&quot;https://graphql.org/learn/&quot;&gt;GraphQL&lt;/a&gt; to share data across pages. You only get the data you need in the page. At build time Gatsby will resolve the query and embed it in your page.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-project-folder-structure&quot;&gt;&lt;a href=&quot;#gatsby-project-folder-structure&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby project folder structure&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;
      &lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;├── LICENSE
├── README.md
├── gatsby-config.js
├── gatsby-node.js
├── node_modules
├── package-lock.json
├── package.json
├── src
│   ├── layouts
│   ├── pages
│   └── templates
└── static&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;from-react-routes-to-gatsby-pages&quot;&gt;&lt;a href=&quot;#from-react-routes-to-gatsby-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From React Routes to Gatsby Pages&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/3PdoKQ8J1uscaW0s2IMuEo/8bce2e060e4a6ec7791c9fe8d6e2cfb6/road-601871_1280.jpg&quot; alt=&quot;road-601871 1280&quot;&gt;&lt;/p&gt;
&lt;p&gt;There are two types of routes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;static - when you know all the parts that will define your route, like &lt;code class=&quot;language-text&quot;&gt;/home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dynamic - when part of your route is only known at runtime like, &lt;code class=&quot;language-text&quot;&gt;blog/:slug&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s assume you have the following static routes in your &lt;code class=&quot;language-text&quot;&gt;create-react-app&lt;/code&gt; project:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Route exact path&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&apos;&lt;/span&gt; component&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Home&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Route path&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/blog&apos;&lt;/span&gt; component&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Blog&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Route path&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/contact&apos;&lt;/span&gt; component&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;Contact&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Gatsby will create these routes automatically based on files you create in your &lt;code class=&quot;language-text&quot;&gt;pages&lt;/code&gt; folder. The good news is you’ve already created the React components so it’s a matter of copying them to the right place. The exception is the home page which should be named &lt;code class=&quot;language-text&quot;&gt;index.js&lt;/code&gt;.  You will end up with something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;
      &lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;├── LICENSE
├── README.md
├── gatsby-config.js
├── gatsby-node.js
├── node_modules
├── package-lock.json
├── package.json
├── src
│   ├── layouts
│   ├── pages
│   │    ├──  index.js
│   │    ├──  blog.js
│   │    ├──  contact.js
│   └── templates
└── static&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now that you’ve converted your static routes let’s tackle the dynamic routes.&lt;/p&gt;
&lt;p&gt;I will take an example of blog posts in this case loaded from Contentful. Every blog post has a unique slug used to load its content.&lt;/p&gt;
&lt;p&gt;In a normal React app the route will look something like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Route path&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/blog/:slug&quot;&lt;/span&gt; component&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BlogPost&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;And your &lt;code class=&quot;language-text&quot;&gt;BlogPost&lt;/code&gt; component will look something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// a function that requests a blog post from Contentful&apos;s API&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; getBlogPost &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./contentful-service&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; marked &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;marked&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogPost&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; status&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;loading&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;getBlogPost&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;match&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; status&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;error&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;status &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;Sorry&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; but the blog post was not found&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;marked&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;To create pages dynamically in Gatsby you need to write some logic in the &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file. To get an idea on what is possible to do at build time check out &lt;a href=&quot;/docs/node-apis&quot;&gt;Gatsby’s node API docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will use the &lt;a href=&quot;/docs/node-apis/#createPages&quot;&gt;createPages node API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Following our Contentful example we need to create a page for each article. To do that first we need to get a list of all blog posts and then create pages for them based on their unique slug.&lt;/p&gt;
&lt;p&gt;Your &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file will look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogPostTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/blog-post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Query for markdown nodes to use in creating pages.&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
          {
            allContentfulBlogPost(limit: 1000) {
              edges {
                node {
                  slug
                }
              }
            }
          }
        `&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// Create blog post pages.&lt;/span&gt;
        result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allContentfulBlogPost&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;edge &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// required&lt;/span&gt;
            component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; blogPostTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              slug&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// in react this will be the `:slug` part&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Since you already have the &lt;code class=&quot;language-text&quot;&gt;BlogPost&lt;/code&gt; component from your React project move it to &lt;code class=&quot;language-text&quot;&gt;src/template/blog-post.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Your Gatbsy project will look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sh&quot;&gt;
      &lt;pre class=&quot;language-sh&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;├── LICENSE
├── README.md
├── gatsby-config.js
├── gatsby-node.js
├── node_modules
├── package-lock.json
├── package.json
├── src
│   ├── layouts
│   ├── pages
│   │    ├──  index.js
│   │    ├──  blog.js
│   │    ├──  contact.js
│   └── templates
│   │    ├──  blog-post.js
└── static&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;You need to make some slight modifications to your &lt;code class=&quot;language-text&quot;&gt;BlogPost&lt;/code&gt; component.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;src/templates/blog-post.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogPost&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; post &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;contentfulBlogPost

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;childMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; BlogPost

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
 query BlogPostBySlug($slug: String!) {
   contentfulBlogPost(fields: { slug: { eq: $slug } }) {
     title
      content {
        childMarkdownRemark {
          html
        }
      }
   }
 }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Note the &lt;code class=&quot;language-text&quot;&gt;$slug&lt;/code&gt; part that’s passed through the context when creating the page to be able to use it in the GraphQL query.&lt;/p&gt;
&lt;p&gt;Gatsby will pick the exported &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; const and will know it’s a GraphQL query string by the &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; tag.&lt;/p&gt;
&lt;h2 id=&quot;from-the-react-state-to-graphql&quot;&gt;&lt;a href=&quot;#from-the-react-state-to-graphql&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;From the React state to GraphQL&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/xodXA1B5OCGKW6eAkqi8e/47789915812c2ab95512f97efb1fcb79/files-1614223_1280.jpg&quot; alt=&quot;files-1614223 1280&quot;&gt;&lt;/p&gt;
&lt;p&gt;I will not go in depth with how to manage state with React since there are a lot of ways to achieve that. There is the new &lt;a href=&quot;https://reactjs.org/docs/context.html&quot;&gt;React 16 Context API&lt;/a&gt; or you can use other state libraries such as &lt;a href=&quot;https://github.com/reduxjs/react-redux&quot;&gt;Redux&lt;/a&gt;. Using Gatsby you can request the data you need using the GraphQL data layer as shown in the previous example. This option is only available in the root components. This will change in &lt;a href=&quot;https://next.gatsbyjs.org/docs/static-query/&quot;&gt;Gatsby v2 with the new &lt;code class=&quot;language-text&quot;&gt;StaticQuery&lt;/code&gt; feature&lt;/a&gt;. You can still use &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-redux&quot;&gt;Redux with Gatsby&lt;/a&gt; if you need to.&lt;/p&gt;
&lt;h2 id=&quot;deployment&quot;&gt;&lt;a href=&quot;#deployment&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://images.ctfassets.net/4x6byznv2pet/2xjoMXpIKoAwAM4sqeOCcA/721945e76b4b5861476a9ce8781a326c/server-2160321_1280.jpg&quot; alt=&quot;server-2160321 1280&quot;&gt;&lt;/p&gt;
&lt;p&gt;Since Gatsby builds “static” files you can host them on tons of services. One of my favourites is &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;. There is also &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;AWS S3&lt;/a&gt; and more, see the &lt;a href=&quot;/docs/deploy-gatsby/&quot;&gt;deploying Gatsby documentation&lt;/a&gt; for examples.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot;&gt;&lt;a href=&quot;#resources&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://howtocontentful.com/&quot;&gt;Contentful tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/blog/2018/02/28/contentful-gatsby-video-tutorials/&quot;&gt;Contentful’s Gatsby video series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/docs/&quot;&gt;Gatsby Getting Started docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Why Narative loves Gatsby]]></title><description><![CDATA[Redefining how Narative builds page based websites with Gatsby]]></description><link>https://www.gatsbyjs.org/blog/2018-06-18-why-narative-loves-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-18-why-narative-loves-gatsby/</guid><dc:creator><![CDATA[Dennis Brotzky]]></dc:creator><content:encoded>&lt;p&gt;&lt;img src=&quot;narative-gatsby-hero.jpg&quot; alt=&quot;Why Narative loves Gatsby hero&quot;&gt;&lt;/p&gt;
&lt;p&gt;To understand why we love Gatsby you have to understand what we do at Narative. Narative is a digital studio that focuses on creating the best brands and products in the world. Our team works on everything from page based websites to complex web apps. The core of our engineering team works in the React ecosystem and has experience from some of the best startups in Canada.&lt;/p&gt;
&lt;p&gt;Traditionally, building page based websites, such as marketing websites, landing pages, or blogs, would require a vastly different skillset from building interactive web apps. There are popular tools such as WordPress or Drupal that are written in their own flavour of PHP or static site generators such as Jekyll, Hugo, and Middleman that leverage templating to build static websites. &lt;em&gt;The problem we’ve found with these tools is that there is very little overlap between web app development and page based development&lt;/em&gt;. Within the last couple years, React has taken over web app development and popularized an intuitive API for building user interfaces. React has also created an astonishing community of developers that are focused on creating amazing tools to accelerate and improve UI development.&lt;/p&gt;
&lt;p&gt;Part of our mission at Narative is to provide technical excellence through an engineering team that is proud and cohesive. To help accomplish this, we need a team that can share its knowledge, tools, and skills amongst itself and with the community around it.&lt;/p&gt;
&lt;h1 id=&quot;the-beauty-of-gatsby&quot;&gt;&lt;a href=&quot;#the-beauty-of-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The beauty of Gatsby&lt;/h1&gt;
&lt;p&gt;Gatsby allows our team to use the powerful React API when creating page based websites with almost no drawbacks. &lt;em&gt;All the principles and techniques we’ve learned from using React for the last few years can be leveraged with Gatsby&lt;/em&gt;. This has enabled us to create a team that is extremely dynamic and cohesive without the worry of creating silos or losing knowledge across teams. &lt;em&gt;Our team is able to learn once, write everywhere&lt;/em&gt;. With an engineering team that’s familiar with React and Gatsby we’re able to tackle more problems faster, which is highly beneficial to our partners and the services we offer.&lt;/p&gt;
&lt;p&gt;One concern we had when adopting Gatsby is that page based websites are not the same as web apps. Even though we’re using similar tools to build them there are different principles that drive each type of development. Luckily, our team doesn’t have to worry about that problem, because the team behind Gatsby is focused on delivering the perfect experience to end users for us. The Gatsby team has baked in all the necessary features to make our websites fast and up to standard.&lt;/p&gt;
&lt;h1 id=&quot;gatsbys-fast-really-fast&quot;&gt;&lt;a href=&quot;#gatsbys-fast-really-fast&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby’s fast, really fast&lt;/h1&gt;
&lt;p&gt;Gatsby handles a lot of the complexity of delivering a fast website for you. There are new performance standards built into it; we don’t have to worry about code splitting, service workers / progress web app capabilities, server side rendering, asset optimization, and basic security.&lt;/p&gt;
&lt;p&gt;Great performance out-of-the-box is a huge win. Our team does not have to focus on these optimizations anymore. Instead, we focus on telling the story and building the values of our partners into our websites and web apps.&lt;/p&gt;
&lt;h1 id=&quot;developing-with-gatsby-is-fast-really-fast&quot;&gt;&lt;a href=&quot;#developing-with-gatsby-is-fast-really-fast&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing with Gatsby is fast, really fast&lt;/h1&gt;
&lt;p&gt;Gatsby does not only allow us to deliver fast websites, it has also sped up our development time. The developer experience is another focus of the team behind Gatsby - and it shows. Features such as live reload are ready to go at when you start a new project. There’s no need to setup a custom Webpack configuration as the basics are completed for you. Building your website and deploying is also carefully thought out by Gatsby and often requires running a single command and using one of the many integrations for hosting. Furthermore, the documentation is comprehensive and has plenty of content from introductory guides to complex use cases. This has been amazing for training and on boarding new members of our team, especially if they’re already familiar with React.&lt;/p&gt;
&lt;h1 id=&quot;separation-between-view-and-data-layers&quot;&gt;&lt;a href=&quot;#separation-between-view-and-data-layers&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Separation between view and data layers&lt;/h1&gt;
&lt;p&gt;Many popular CMS tools are tightly coupled to their source of data. Gatsby offers a clear separation between the data and view layer building on top of the Headless CMS principles. The advantage for Narative is that we can develop without CMS lock-in such as WordPress. If our team decides to go with a new view layer the migration would be less painful than migrating all the data as well. Often times flexibility in software means more complexity to manage but in this case the flexibility is in the right spots where it reduces complexity.&lt;/p&gt;
&lt;p&gt;We pass this flexibility on to our partners. They are able to manage their data while &lt;em&gt;our team is able to deliver an excellent product on top of their existing infrastructure. This has made our solutions to revamping legacy projects even stronger than before&lt;/em&gt;.&lt;/p&gt;
&lt;h1 id=&quot;plugins-and-integrations&quot;&gt;&lt;a href=&quot;#plugins-and-integrations&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins and integrations&lt;/h1&gt;
&lt;p&gt;Tools such as WordPress have a strong appeal because of the maturity and vast plugin ecosystem build around it. Gatsby has a well architected plugin-system that has already met our needs at Narative. The plugins are modern, plentiful, and easy to create if needed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;narative-gatsby-plugins.jpg&quot; alt=&quot;Plugins making up a website&quot;&gt;&lt;/p&gt;
&lt;p&gt;Beyond all the plugins, Gatsby provides integrations into today’s popular tools. Integrations such as Contentful are a perfect match for Gatsby because of the separation between data and view layers. Every major hurdle we thought we’d have to solve has already been taken care of by the Gatsby team and their custom integrations.&lt;/p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Narative strives for technical excellence for all its products, which can be achieved with React, Gatsby, and GraphQL for us. We’ve landed on a solution that allows our team to stay cohesive and flexible. Thanks to the popularization of React and the principles behind it &lt;em&gt;Narative has been able to build page based websites and web apps with the same expertise. In the past, it was hard to share knowledge and tools between page based websites and web apps but now there’s very little difference&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Gatsby streamlines our process with an excellent developer experience and all the features you could ask for in 2018. The heavy lifting of delivering a technically sound website with performance that users will love has slowly shifted towards frameworks such as Gatsby, which has freed up our team to focus on even better experiences and products.&lt;/p&gt;
&lt;p&gt;To conclude, Gatsby may not be the perfect solution for your project, but for our needs it’s perfect. By building with Gatsby, we’ve extended our team to an amazing group of people that are working hard to improve page based websites. We’re excited to see where Gatsby takes us next.&lt;/p&gt;
&lt;h1 id=&quot;narative&quot;&gt;&lt;a href=&quot;#narative&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Narative&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://narative.co&quot;&gt;Narative&lt;/a&gt; is a digital studio co-founded by designers, engineers and strategists with decades of experience at Canada’s most successful startups. We merge best practices in design, engineering, and growth marketing to create narratives that empowers your brand and product.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Announcing Gatsby v2 beta launch!]]></title><description><![CDATA[We’re excited to announce that today we shipped the first beta for Gatsby v2! 36 contributors have made over 300 commits to v2 since Gatsby…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-16-announcing-gatsby-v2-beta-launch/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-16-announcing-gatsby-v2-beta-launch/</guid><dc:creator><![CDATA[Mike Allanson]]></dc:creator><content:encoded>&lt;p&gt;We’re excited to announce that today we shipped the first beta for Gatsby v2! 36 contributors have made over 300 commits to v2 since Gatsby v1 was released in July 2017.&lt;/p&gt;
&lt;h2 id=&quot;whats-coming-in-v2&quot;&gt;&lt;a href=&quot;#whats-coming-in-v2&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s coming in v2?&lt;/h2&gt;
&lt;p&gt;Gatsby v2 builds on the foundations of v1 to introduce a range of improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Out With Gatsby Layout Components, In With StaticQuery&lt;/p&gt;
&lt;p&gt;Gatby’s special layout components were a common source of confusion in v1. After an RFC and &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/blob/master/text/0002-remove-special-layout-components.md&quot;&gt;informative community discussion&lt;/a&gt;, we decided to remove them and create &lt;code class=&quot;language-text&quot;&gt;StaticQuery&lt;/code&gt; which allows GraphQL queries to be added to any component. For more information on migrating your layouts, check out our &lt;a href=&quot;/blog/2018-06-08-life-after-layouts/&quot;&gt;Life After Layouts post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve APIs&lt;/p&gt;
&lt;p&gt;We’ve renamed &lt;code class=&quot;language-text&quot;&gt;sizes&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;resolutions&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;fluid&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;fixed&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;boundActionCreators&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;actions&lt;/code&gt;, as well as other changes intended to make API names more consistent and prevent common gotchas.&lt;/p&gt;
&lt;p&gt;To see the full list of renamings, take a look at the upgrade guide for &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/#rename-responsive-image-queries&quot;&gt;image queries&lt;/a&gt;, &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/#rename-code-classlanguage-textboundactioncreatorscode-to-code-classlanguage-textactionscode&quot;&gt;actions&lt;/a&gt; and the &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/#change-code-classlanguage-textmodifybabelrccode-to-code-classlanguage-textoncreatebabelconfigcode&quot;&gt;babel&lt;/a&gt; and &lt;a href=&quot;https://next.gatsbyjs.org/docs/migrating-from-v1-to-v2/#change-code-classlanguage-textmodifywebpackconfigcode-to-code-classlanguage-textoncreatewebpackconfigcode&quot;&gt;webpack&lt;/a&gt; API hooks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hotter Hot Reloading&lt;/p&gt;
&lt;p&gt;Previously, hot reloading of code and data had been dependent on new webpack builds. On larger sites, that could take ten or fifteen seconds — more like lukewarm reloading, really. With &lt;a href=&quot;https://twitter.com/gatsbyjs/status/974507205121617920&quot;&gt;&lt;em&gt;ludicrous mode&lt;/em&gt;&lt;/a&gt; we’ve decoupled data updates from webpack so changes you make to your content show up on your site at blistering speeds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgraded Dependencies&lt;/p&gt;
&lt;p&gt;Gatsby is built on top of amazing JavaScript libraries. In this beta, we’re delighted to ship the latest improvements from webpack, Babel, and React to you.&lt;/p&gt;
&lt;p&gt;Key upgrades include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.freecodecamp.org/were-nearing-the-7-0-babel-release-here-s-all-the-cool-stuff-we-ve-been-doing-8c1ade684039&quot;&gt;Babel to v7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2017/09/26/react-v16.0.html&quot;&gt;React to v16&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-released-today-6cdb994702d4&quot;&gt;webpack to v4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These updates allow Gatsby to take advantage of the &lt;a href=&quot;https://medium.com/webpack/webpack-4-released-today-6cdb994702d4&quot;&gt;performance&lt;/a&gt; &lt;a href=&quot;https://reactjs.org/blog/2017/09/26/react-v16.0.html#better-server-side-rendering&quot;&gt;improvements&lt;/a&gt; and &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/5709&quot;&gt;new features&lt;/a&gt; of these tools.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;can-i-upgrade-now-to-v2&quot;&gt;&lt;a href=&quot;#can-i-upgrade-now-to-v2&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I upgrade now to v2?&lt;/h2&gt;
&lt;p&gt;Yes! We’ve built &lt;a href=&quot;https://www.gatsbyjs.com&quot;&gt;gatsbyjs.com&lt;/a&gt; with v2 and the Gatsby community is &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5598&quot;&gt;converting over the example sites&lt;/a&gt;. While the effort to migrate individual sites may vary, we’ve noticed significant build speedups in Gatsby v2 versus v1 and would love you to dig in and try it. We’re working hard on refining Gatsby v2 for full release and would love your help!&lt;/p&gt;
&lt;h2 id=&quot;whats-coming-next&quot;&gt;&lt;a href=&quot;#whats-coming-next&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s coming next?&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/projects/2&quot;&gt;v2 roadmap&lt;/a&gt; details everything else we’re planning for v2. Improvements include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Additional build optimisations&lt;/li&gt;
&lt;li&gt;Better error messaging&lt;/li&gt;
&lt;li&gt;PostCSS configuration updates&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;getting-involved&quot;&gt;&lt;a href=&quot;#getting-involved&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting involved&lt;/h2&gt;
&lt;p&gt;We ❤️ your feedback. Try out the &lt;a href=&quot;/docs/migrating-from-v1-to-v2/&quot;&gt;migration guide&lt;/a&gt; and let us know how you get on. &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues&quot;&gt;Issues&lt;/a&gt; and &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pulls&quot;&gt;pull requests&lt;/a&gt; are welcome (for real).&lt;/p&gt;
&lt;p&gt;Finally a big thank you to all of &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/graphs/contributors&quot;&gt;Gatsby’s contributors&lt;/a&gt; for their time and effort on every version of Gatsby. Special thanks in particular to everyone who’s helped with v2 so far: &lt;a href=&quot;https://github.com/ajayns&quot;&gt;@ajayns&lt;/a&gt; &lt;a href=&quot;https://github.com/brizzoli&quot;&gt;@brizzoli&lt;/a&gt; &lt;a href=&quot;https://github.com/calcsam&quot;&gt;@calcsam&lt;/a&gt; &lt;a href=&quot;https://github.com/CanRau&quot;&gt;@CanRau&lt;/a&gt; &lt;a href=&quot;https://github.com/chmac&quot;&gt;@chmac&lt;/a&gt; &lt;a href=&quot;https://github.com/danielfarrell&quot;&gt;@danielfarrell&lt;/a&gt; &lt;a href=&quot;https://github.com/davidluhr&quot;&gt;@davidluhr&lt;/a&gt; &lt;a href=&quot;https://github.com/daydream05&quot;&gt;@daydream05&lt;/a&gt; &lt;a href=&quot;https://github.com/dennari&quot;&gt;@dennari&lt;/a&gt; &lt;a href=&quot;https://github.com/Drew-Slagter&quot;&gt;@Drew-Slagter&lt;/a&gt; &lt;a href=&quot;https://github.com/dvonlehman&quot;&gt;@dvonlehman&lt;/a&gt; &lt;a href=&quot;https://github.com/flipactual&quot;&gt;@flipactual&lt;/a&gt; &lt;a href=&quot;https://github.com/hsribei&quot;&gt;@hsribei&lt;/a&gt; &lt;a href=&quot;https://github.com/jlengstorf&quot;&gt;@jlengstorf&lt;/a&gt; &lt;a href=&quot;https://github.com/jquense&quot;&gt;@jquense&lt;/a&gt; &lt;a href=&quot;https://github.com/Khaledgarbaya&quot;&gt;@Khaledgarbaya&lt;/a&gt; &lt;a href=&quot;https://github.com/kkemple&quot;&gt;@kkemple&lt;/a&gt; &lt;a href=&quot;https://github.com/kripod&quot;&gt;@kripod&lt;/a&gt; &lt;a href=&quot;https://github.com/KyleAMathews&quot;&gt;@KyleAMathews&lt;/a&gt; &lt;a href=&quot;https://github.com/LeKoArts&quot;&gt;@LeKoArts&lt;/a&gt; &lt;a href=&quot;https://github.com/lettertwo&quot;&gt;@lettertwo&lt;/a&gt; &lt;a href=&quot;https://github.com/m-allanson&quot;&gt;@m-allanson&lt;/a&gt; &lt;a href=&quot;https://github.com/mathieudutour&quot;&gt;@mathieudutour&lt;/a&gt; &lt;a href=&quot;https://github.com/mottox2&quot;&gt;@mottox2&lt;/a&gt; &lt;a href=&quot;https://github.com/mquandalle&quot;&gt;@mquandalle&lt;/a&gt; &lt;a href=&quot;https://github.com/nihgwu&quot;&gt;@nihgwu&lt;/a&gt; &lt;a href=&quot;https://github.com/noelebrun&quot;&gt;@noelebrun&lt;/a&gt; &lt;a href=&quot;https://github.com/pieh&quot;&gt;@pieh&lt;/a&gt; &lt;a href=&quot;https://github.com/piotrkwiecinski&quot;&gt;@piotrkwiecinski&lt;/a&gt; &lt;a href=&quot;https://github.com/resir014&quot;&gt;@resir014&lt;/a&gt; &lt;a href=&quot;https://github.com/ryanditjia&quot;&gt;@ryanditjia&lt;/a&gt; &lt;a href=&quot;https://github.com/syndia&quot;&gt;@syndia&lt;/a&gt; &lt;a href=&quot;https://github.com/ThatOtherPerson&quot;&gt;@ThatOtherPerson&lt;/a&gt; &lt;a href=&quot;https://github.com/thebigredgeek&quot;&gt;@thebigredgeek&lt;/a&gt; &lt;a href=&quot;https://github.com/thescientist13&quot;&gt;@thescientist13&lt;/a&gt; &lt;a href=&quot;https://github.com/tsriram&quot;&gt;@tsriram&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby for Marketers, Managers, Agencies and Teams]]></title><description><![CDATA[A few years ago, I worked at a small startup on an agile marketing team. This startup built website management tools and they had many…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-08-gatsby-marketers-managers-agencies-teams/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-08-gatsby-marketers-managers-agencies-teams/</guid><dc:creator><![CDATA[Linda Watkins]]></dc:creator><content:encoded>&lt;p&gt;A few years ago, I worked at a small startup on an agile marketing team. This startup built website management tools and they had many customers come to them with stories of hosting headaches. I saw first-hand the hosting hassles that companies face.&lt;/p&gt;
&lt;p&gt;One of the biggest challenges was having your best day become your worst nightmare. An up-and-coming e-commerce site put a lot of effort into making a clean, interactive website in preparation for the holiday season. Their site looked amazing and they were ready to go! But they were using traditional hosting which means they were competing for server resources with other websites. Unfortunately, traffic spiked, the server couldn’t scale as quickly as needed, and their site went down. Their best day became their worst nightmare.&lt;/p&gt;
&lt;p&gt;In contrast, I’ve become a fan of Gatsby— a blazing-fast website development tool that eliminates the hosting hassles of managing complex, costly infrastructure. Gatsby is a new paradigm for building websites and there are some key benefits that are explained in this new one-page overview.&lt;/p&gt;
&lt;h1 id=&quot;living-on-the-edge&quot;&gt;&lt;a href=&quot;#living-on-the-edge&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Living on the edge&lt;/h1&gt;
&lt;p&gt;Gatsby sites scale quickly and easily because they live on the edge. There are no servers! With a Gatsby website, content is compiled ahead of time and stored directly on the CDN (content delivery network). Basically, this means that your website lives closest to your customers—wherever they are—which means it’s immediately available, instantly scalable, and loads with lightning-fast speed. And it’s inherently secure because hackers can’t access your database or CMS. Honestly, it’s like magic. I guess I’ve gotten used to pages that take a second or two to load (which is annoying but happens so often) but when I go to a Gatsby site, it’s almost instantaneous. It’s so much faster than anything I’ve seen before.&lt;/p&gt;
&lt;p&gt;Last week, I was on a long plane flight and decided to pay the $30 for in-flight wifi (yes, $30 for wifi. United- seriously?). It was a terrible connection and I couldn’t get any websites to load…except Gatsby. Gatsby loaded effortlessly and quickly while all other sites timed out. It was like a smooth magic carpet ride, flying from one page to the other. Amazing.&lt;/p&gt;
&lt;p&gt;So I’ve become a fan girl for Gatsby. It’s blazing-fast, secure, serverless, and lets me use the tools (CMS) that I already love. And this &lt;a href=&quot;/gatsby-one-pager.pdf&quot;&gt;new one-page overview&lt;/a&gt; is great in positioning Gatsby to the marketer, manager, agency, or team. The overview is perfect for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An agency or individual freelancer trying to help a client understand the benefits of this new technology&lt;/li&gt;
&lt;li&gt;An engineering manager trying to help less-technical stakeholders such as marketers or senior leadership understand why choosing Gatsby makes sense&lt;/li&gt;
&lt;li&gt;A developer who’s just launched a Gatsby website and coworkers are asking how you made it so fast and if you can do that for future projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get a better understanding of what Gatsby can do for your website. &lt;a href=&quot;/gatsby-one-pager.pdf&quot;&gt;Check it out&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Build a Gatsby Blog using the Cosmic JS source plugin]]></title><description><![CDATA[This article originally appears on  the Cosmic JS website . In this tutorial, I’m going to show you how to create a simple but blazing fast…]]></description><link>https://www.gatsbyjs.org/blog/2018-06-07-build-a-gatsby-blog-using-the-cosmic-js-source-plugin/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-06-07-build-a-gatsby-blog-using-the-cosmic-js-source-plugin/</guid><dc:creator><![CDATA[Tony Spiro]]></dc:creator><content:encoded>&lt;p&gt;&lt;img src=&quot;./gatsby-cosmic.jpg&quot; alt=&quot;Cosmic JS Gatsby&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article originally appears on &lt;a href=&quot;https://cosmicjs.com/articles/build-a-gatsby-blog-using-the-cosmic-js-source-plugin-jhzwvr45&quot;&gt;the Cosmic JS website&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this tutorial, I’m going to show you how to create a simple but blazing fast blog using React, Gatsby, and &lt;a href=&quot;https://cosmicjs.com&quot;&gt;Cosmic JS&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;tldr&quot;&gt;&lt;a href=&quot;#tldr&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cosmicjs/gatsby-blog-cosmicjs&quot;&gt;Download the GitHub repo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cosmicjs.com/apps/gatsby-blog&quot;&gt;Check out the demo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/cosmicjs/gatsby-source-cosmicjs&quot;&gt;Check out the Cosmic JS Source Plugin for Gatsby.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;&lt;a href=&quot;#prerequisites&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;This tutorial requires Node.js and npm. Make sure you already have them installed.&lt;/p&gt;
&lt;h2 id=&quot;blog-development&quot;&gt;&lt;a href=&quot;#blog-development&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blog Development&lt;/h2&gt;
&lt;p&gt;In order to start working on the blog, we first have to set up the environment.&lt;/p&gt;
&lt;h3 id=&quot;install-gatsby-and-set-up-your-site&quot;&gt;&lt;a href=&quot;#install-gatsby-and-set-up-your-site&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Gatsby and Set Up Your Site&lt;/h3&gt;
&lt;p&gt;First, install the Gatsby CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --global gatsby-cli&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Create a new site based on the Gatsby Cosmic JS starter:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gatsby new gatsby-blog-cosmicjs&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Enter in your project’s folder:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; gatsby-blog-cosmicjs&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Start the server:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gatsby develop&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;At this point, you can access your Gatsby website by visiting &lt;a href=&quot;http://localhost:8000&quot;&gt;http://localhost:8000&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;install-the-cosmic-js-source-plugin&quot;&gt;&lt;a href=&quot;#install-the-cosmic-js-source-plugin&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the Cosmic JS Source Plugin&lt;/h2&gt;
&lt;p&gt;In a static website, data can be consumed from multiple different sources, for example Markdown files, HTML files, and/or an eternal API (WordPress, Cosmic JS, etc).&lt;/p&gt;
&lt;p&gt;To make consuming data simpler, Gatsby implements a data layer powered by GraphQL. Very exciting stuff!&lt;/p&gt;
&lt;p&gt;To connect this data layer with different data providers, you need to integrate a source plugin. Fortunately, there are many source plugins available for common data sources, and &lt;a href=&quot;/docs/create-source-plugin/&quot;&gt;an API available to create your own&lt;/a&gt; if necessary.&lt;/p&gt;
&lt;p&gt;In our case, we are using &lt;a href=&quot;https://cosmicjs.com&quot;&gt;Cosmic JS&lt;/a&gt;. We need a source plugin to connect data from Cosmic JS to our Gatsby site. Good news: there’s already a &lt;a href=&quot;https://github.com/cosmicjs/gatsby-source-cosmicjs&quot;&gt;source plugin for Cosmic JS&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Install the source plugin with the following command:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --save gatsby-source-cosmicjs&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We’re going to use a couple other plugins later, so let’s install them here:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --save gatsby-plugin-offline gatsby-source-filesystem&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;These plugins need some configuration, so let’s replace the content of &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; with:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-offline`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-react-helmet`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-filesystem`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;__dirname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pages&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-source-cosmicjs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        bucketSlug&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-blog-cosmic-js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Your CosmicJS bucket slug&lt;/span&gt;
        objectTypes&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;settings&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// List of the object types you want to be able to request from Gatsby.&lt;/span&gt;
        apiAccess&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          read_key&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;a-couple-of-notes-on-this-config&quot;&gt;&lt;a href=&quot;#a-couple-of-notes-on-this-config&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A couple of notes on this config:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Notice &lt;code class=&quot;language-text&quot;&gt;bucketSlug&lt;/code&gt; is set to &lt;code class=&quot;language-text&quot;&gt;gatsby-blog-cosmic-js&lt;/code&gt;. This is a demo Bucket that includes pre-populated content, so when you &lt;a href=&quot;https://github.com/cosmicjs/gatsby-blog-cosmicjs&quot;&gt;download the GitHub repo&lt;/a&gt; and start the app, it will display demo content right out of the box. You can also import this demo content into your own Cosmic JS Bucket by going to &lt;code class=&quot;language-text&quot;&gt;Your Cosmic JS Bucket Dashboard &amp;gt; Settings &amp;gt; Apps&lt;/code&gt;, then find and install the Gatsby Blog.&lt;/li&gt;
&lt;li&gt;The API read key is optional and can be set after you login to Cosmic JS at:
&lt;code class=&quot;language-text&quot;&gt;Your Cosmic JS Bucket Dashboard &amp;gt; Settings &amp;gt; Basic Settings&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now restart the server to apply the updates.&lt;/p&gt;
&lt;h2 id=&quot;posts-list--settings&quot;&gt;&lt;a href=&quot;#posts-list--settings&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Posts List &amp;#x26; Settings&lt;/h2&gt;
&lt;p&gt;First, we want to display the list of posts on the homepage. To do so, add the following content to &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Link &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-link&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;lodash/get&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-helmet&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Bio &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../components/Bio&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; rhythm &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../utils/typography&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogIndex&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; siteTitle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;props.data.cosmicjsSettings.metadata.site_title&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;props.data.allCosmicjsPosts.edges&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; author &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;props.data.cosmicjsSettings.metadata&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Helmet title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;siteTitle&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Bio settings&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; title &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h3
                style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                  marginBottom&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
                &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boxShadow&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;none&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`posts/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
                  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h3&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;small&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;created&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;small&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p
                dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; BlogIndex

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query IndexQuery {
    allCosmicjsPosts(sort: { fields: [created], order: DESC }, limit: 1000) {
      edges {
        node {
          metadata {
            description
          }
          slug
          title
          created(formatString: &quot;DD MMMM, YYYY&quot;)
        }
      }
    }
    cosmicjsSettings(slug: { eq: &quot;general&quot; }) {
      metadata {
        site_title
        author_name
        author_bio
        author_avatar {
          imgix_url
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;explanation&quot;&gt;&lt;a href=&quot;#explanation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explanation:&lt;/h3&gt;
&lt;p&gt;At the end of &lt;code class=&quot;language-text&quot;&gt;index.js&lt;/code&gt; file, we exported &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;. These are GraphQL queries which are used to fetch important information about settings and list of posts.&lt;/p&gt;
&lt;p&gt;Then, we pass the &lt;code class=&quot;language-text&quot;&gt;{ data }&lt;/code&gt; destructured object as parameter of &lt;code class=&quot;language-text&quot;&gt;IndexPage&lt;/code&gt; and loop on its &lt;code class=&quot;language-text&quot;&gt;allCosmicjsPosts&lt;/code&gt; &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;cosmicjsSettings&lt;/code&gt; object to display the data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gatsby-cosmic-screenshot-1.png&quot; alt=&quot;Gatsby Cosmic Screenshot&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;single-post-layout&quot;&gt;&lt;a href=&quot;#single-post-layout&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single Post Layout&lt;/h2&gt;
&lt;p&gt;Till now we have integrated Cosmic JS source plugin with Gatsby and it’s looking like a blog. Now we will work on adding a details page for individual blog posts.&lt;/p&gt;
&lt;p&gt;Create the template at &lt;code class=&quot;language-text&quot;&gt;src/templates/blog-post.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-helmet&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Link &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-link&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;lodash/get&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Bio &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../components/Bio&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; rhythm&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scale &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../utils/typography&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; relative &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogPostTemplate&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; post &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cosmicjsPosts
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; siteTitle &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;data.cosmicjsSettings.metadata.site_title&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; author &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;props.data.cosmicjsSettings.metadata&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; previous&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; next &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pathContext

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
          .post-content {
            text-align: justify;
          }
          .post-hero {
            width: calc(100% + &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;);
            margin-left: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;;
            height: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;;
          }
          @media (max-width: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;) {
            .post-hero {
              width: calc(100% + &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;);
              margin-left: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;;
              height: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;;
            }
          }
        `&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;style&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Helmet title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; | &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;siteTitle&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            marginTop&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1.4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;← Back to Posts&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            marginTop&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            display&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;block&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            marginBottom&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            marginTop&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;created&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;post-hero&quot;&lt;/span&gt;
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            backgroundColor&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;#007ACC&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            backgroundImage&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`url(&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;metadata&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hero&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;imgix_url&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;?w=2000&quot;)`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            backgroundSize&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;cover&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            backgroundPosition&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            marginBottom&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            position&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;relative&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;post-content&quot;&lt;/span&gt;
          dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;hr
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            marginBottom&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Bio settings&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ul
          style&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            display&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;flex&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            flexWrap&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;wrap&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            justifyContent&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;space-between&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            listStyle&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            padding&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;previous &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;previous&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; rel&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;prev&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
                ← &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;previous&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;next &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; rel&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;next&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
                &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;next&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; →
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; BlogPostTemplate

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query BlogPostBySlug($slug: String!) {
    cosmicjsPosts(slug: { eq: $slug }) {
      id
      content
      title
      created(formatString: &quot;MMMM DD, YYYY&quot;)
      metadata {
        hero {
          imgix_url
        }
      }
    }
    cosmicjsSettings(slug: { eq: &quot;general&quot; }) {
      metadata {
        site_title
        author_name
        author_bio
        author_avatar {
          imgix_url
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;That looks fine, but at this point, Gatsby does not know when this template should be displayed. Each post needs a specific URL. So, we are going to inform Gatsby about the new URLs we need using the &lt;a href=&quot;https://www.gatsbyjs.org/docs/node-apis/#createPages&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Path: &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; _ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;lodash&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Promise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;bluebird&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; indexPage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./src/pages/index.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`posts`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; indexPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogPost &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./src/templates/blog-post.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
          {
            allCosmicjsPosts(
              sort: { fields: [created], order: DESC }
              limit: 1000
            ) {
              edges {
                node {
                  slug
                  title
                }
              }
            }
          }
        `&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// Create blog posts pages.&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allCosmicjsPosts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges

        _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;posts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; next &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node
          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; previous &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node

          &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`posts/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; blogPost&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              slug&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              previous&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              next&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Restart the Gatsby server, then visit the detail page by clicking on URLs displayed on the homepage.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gatsby-cosmic-screenshot-2.png&quot; alt=&quot;Gatsby Cosmic Screenshot&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;extra-stuff&quot;&gt;&lt;a href=&quot;#extra-stuff&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extra Stuff!&lt;/h3&gt;
&lt;p&gt;In addition to the code covered in this tutorial, we also implemented &lt;code class=&quot;language-text&quot;&gt;src/components/Bio.js&lt;/code&gt; to display author information &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;src/layouts/index.js&lt;/code&gt; to &lt;a href=&quot;/tutorial/part-three/#our-first-layout-component&quot;&gt;create a generic layout&lt;/a&gt; for the blog.&lt;/p&gt;
&lt;p&gt;The source code for this tutorial is available &lt;a href=&quot;https://github.com/cosmicjs/gatsby-blog-cosmicjs&quot;&gt;on GitHub&lt;/a&gt;. To see it live, clone the repository, and run (&lt;code class=&quot;language-text&quot;&gt;cd gatsby-blog-cosmicjs &amp;amp;&amp;amp; npm i &amp;amp;&amp;amp; npm run develop&lt;/code&gt;) or check out the &lt;a href=&quot;https://gatsby-blog-cosmicjs.netlify.com/&quot;&gt;demo on Netlify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The static website generated by Gatsby can easily be published on services like Netlify, S3/CloudFront, GitHub Pages, GitLab pages, Heroku, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./gatsby-cosmic-screenshot-3.png&quot; alt=&quot;Gatsby Cosmic Screenshot&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Congrats! You’ve successfully built a super fast and easy-to-maintain blog! Feel free to continue this project to discover both Gatsby and Cosmic JS advantages.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Introduction to Gatsby]]></title><description><![CDATA[In case you haven’t heard about it, Gatsby is the latest hot thing in static site generators]]></description><link>https://www.gatsbyjs.org/blog/2017-05-31-introduction-to-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-05-31-introduction-to-gatsby/</guid><dc:creator><![CDATA[Michelle Barker]]></dc:creator><content:encoded>&lt;p&gt;In case you haven’t heard about it, Gatsby is the latest hot thing in static site generators. While many static site generators (SSGs) use templating languages like Handlebars or Mustache, Gatsby uses React, helping contribute to its “blazing fast” claim.&lt;/p&gt;
&lt;p&gt;Having never used an SSG before (although I’ve read about them), and with very limited experience with React, what better way to dip my toe into the water than using Gatsby to publish my brand new blog &lt;a href=&quot;https://css-irl.info/&quot;&gt;CSS {In Real Life}&lt;/a&gt;?&lt;/p&gt;
&lt;h3 id=&quot;getting-started&quot;&gt;&lt;a href=&quot;#getting-started&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;It turns out that getting started with Gatsby is pretty easy. The Gatsby site features a fantastic, step-by-step tutorial that walks you through getting your first site up and running (even down to deploying), and contains a wealth of resources for when you’ve mastered the basics. You don’t need any prior experience with React, although working with Gatsby definitely made me want to learn React to take full advantage of its power.&lt;/p&gt;
&lt;p&gt;One thing that prohibits me from publishing side projects is the thought of configuring a whole build setup with Gulp, webpack, etc. just for something small. This is where Gatsby really appeals to me. Gatsby provides an entire out-of-the-box build setup. Yep. Run &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt; and immediately you can bypass all that configuration and start building cool stuff in the browser (with live reloads). Run &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; and your production code is optimised (including progressive image loading and code splitting, among many other features) with &lt;em&gt;absolutely no effort on your part whatsoever&lt;/em&gt;. You could feasibly get a small, performant site built and deployed in just minutes. You can also add a custom webpack config if you need to.&lt;/p&gt;
&lt;h3 id=&quot;css&quot;&gt;&lt;a href=&quot;#css&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS&lt;/h3&gt;
&lt;p&gt;There are two options when it comes to writing CSS for your components: CSS-in-JS (using libraries such as Glamor and Styled Components) or &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS Modules&lt;/a&gt;. As I feel far more comfortable writing “traditional” CSS, I opted for the latter. CSS Modules are really interesting, and not tied to Gatsby. Styles are scoped locally by default and unique class names are generated programmatically, meaning you don’t get the clashes with naming and specificity that you sometimes get in traditional CSS, and you can compose new selectors from others. I feel like I’ve only scratched the surface of CSS Modules, and am looking forward to experimenting further.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Side note: This doesn’t mean I have a problem with traditional CSS, or that I’m advocating CSS Modules in every scenario! Many of the so-called “problems” of CSS are actually down to misuse or misapplication. Nevertheless, CSS Modules and CSS-in-JS are good to know about, and can be useful tools to have in your arsenal.)&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;plugins&quot;&gt;&lt;a href=&quot;#plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h3&gt;
&lt;p&gt;There is a whole ecosystem of Gatsby plugins that you can pick and choose to tailor your project. I’m using &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-sass&lt;/code&gt; to enable me to write Sass instead of regular CSS, &lt;code class=&quot;language-text&quot;&gt;gatsby-transformer-remark&lt;/code&gt; for markdown files and &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-typography&lt;/code&gt; which sets you up with some nice typography combos with minimal configuration. Authoring your own plugins and contributing to the Gatsby community is encouraged, if that’s your bag.&lt;/p&gt;
&lt;h3 id=&quot;data&quot;&gt;&lt;a href=&quot;#data&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data&lt;/h3&gt;
&lt;p&gt;You could of course hard code all your content, but it’s likely you’ll want some sort of dynamic content on your site.&lt;/p&gt;
&lt;p&gt;Gatsby’s data layer is powered by GraphQL, and the tutorial walks through how to build database queries with Gatsby’s GraphiQL tool. It’s very visual, showing you exactly what your database queries will return, which for someone like me (who finds anything database-related a little scary) is a blessing.&lt;/p&gt;
&lt;p&gt;I write my blog posts in markdown files, but you could configure Gatsby to work with Github Pages, or the CMS of your choice for a better editorial experience.&lt;/p&gt;
&lt;h3 id=&quot;deployment&quot;&gt;&lt;a href=&quot;#deployment&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h3&gt;
&lt;p&gt;After you’ve run the build command, Gatsby allows near-instantaneous deployment through &lt;a href=&quot;https://surge.sh/&quot;&gt;Surge&lt;/a&gt;, &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; and others. I set up my hosting with Netlify – run &lt;code class=&quot;language-text&quot;&gt;gatsby deploy&lt;/code&gt;, set up a Netlify account and you’re good to go. You can then configure Netlify to auto-deploy whenever you push to a repository. Netlify provides a simpler and more helpful experience than other hosting providers I’ve used, with helpful documentation, taking all the stress away from launching a site!&lt;/p&gt;
&lt;h3 id=&quot;in-conclusion&quot;&gt;&lt;a href=&quot;#in-conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In conclusion&lt;/h3&gt;
&lt;p&gt;I thoroughly recommend giving Gatsby a go if you’re on the fence about trying a static site generator and want to get a simple site up and running quickly and easily. The amount of thought that’s gone into every aspect of the onboarding process and the developer experience is absolutely fantastic. And, have just received a shed load of seed money to launch as a startup, it’s only going to get better.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Open Sourcing Gatsby Workshops]]></title><description><![CDATA[In April and May, we hosted 2-day Gatsby workshops in both San Francisco and NYC and want to share what we learned and resources you can use…]]></description><link>https://www.gatsbyjs.org/blog/2018-05-31-open-sourcing-gatsby-workshops/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-05-31-open-sourcing-gatsby-workshops/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;p&gt;In April and May, we hosted 2-day Gatsby workshops in both San Francisco and NYC and want to share what we learned and resources you can use to host your own Gatsby workshops. A big thank you to all the developers who came to these workshops, and another big thank you to Ryan Florence for organizing the workshop logistics; check out his company’s website at &lt;a href=&quot;https://workshop.me/&quot;&gt;workshop.me&lt;/a&gt;. Ryan has been an awesome supporter of Gatsby and a longtime fan, so yes, the workshop.me site is built on Gatsby :).&lt;/p&gt;
&lt;p&gt;We will keep improving these workshops and hope you’ll help us do that! Share your ideas and report how these workshops go for you in the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;Open source repo&lt;/a&gt; through issues and PRs (if you ran into problems with the workshops and/or have ideas of how to improve them) or &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt; if you want to share an upcoming workshops you’re running.&lt;/p&gt;
&lt;h1 id=&quot;what-we-learned-in-the-first-few-workshops&quot;&gt;&lt;a href=&quot;#what-we-learned-in-the-first-few-workshops&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What we learned in the first few workshops&lt;/h1&gt;
&lt;p&gt;Here is a photo of how many notes I took during our first workshop in San Francisco (I crossed out notes as I converted them to issues in GitHub):&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./workshop-notes.JPG&quot; alt=&quot;Photo of my workshop outline with notes scribbled all over it&quot;&gt;&lt;/p&gt;
&lt;p&gt;And that’s just one page of notes (there were many more). The biggest takeaways were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;People wanted to know how Gatsby works, so we drew this diagram and nearly everyone said it was helpful:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./gatsby-diagram.jpg&quot; alt=&quot;Diagram of how Gatsby build time and run time works&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This diagram helped them understand why adding extra plugins to their Gatsby sites doesn’t slow them down (because plugins do their work at build time, not at runtime)&lt;/li&gt;
&lt;li&gt;People wanted to know how Gatsby works with React and GraphQL, and we’re still working on diagrams to illustrate those concepts&lt;/li&gt;
&lt;li&gt;If React and GraphQL are new to people, they seem to be the most difficult parts of learning to use Gatsby&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;new-tutorials&quot;&gt;&lt;a href=&quot;#new-tutorials&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New tutorials!&lt;/h1&gt;
&lt;p&gt;People are interested in tutorials that go beyond the basic &lt;a href=&quot;/tutorial/&quot;&gt;Tutorial&lt;/a&gt;, so we created three new tutorials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/docs/wordpress-source-plugin-tutorial/&quot;&gt;WordPress Source Plugin Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/docs/image-tutorial/&quot;&gt;Adding Images to a WordPress Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/docs/source-plugin-tutorial/&quot;&gt;Creating a Source Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;why-you-might-want-to-host-a-workshop&quot;&gt;&lt;a href=&quot;#why-you-might-want-to-host-a-workshop&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why you might want to host a workshop&lt;/h2&gt;
&lt;p&gt;Here are some advantages that we experienced in the workshops; if these appeal to you, you could consider hosting your own workshop at your work, a meetup, or any other setting that makes sense!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Dedicated time and place to learn:&lt;/em&gt; it’s easier to set aside time to learn something new when you are in a room with other people doing the same thing&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Quicker problem-solving:&lt;/em&gt; you can usually get answers to your questions and solve problems faster than you could otherwise&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Customized content:&lt;/em&gt; the workshop host can customize the workshop for the group’s needs ahead of time by sending out a survey, and the workshop can shift focus depending on real-time needs and questions of the group and individuals&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’d love to hear how it goes and hope that you’ll use the resources below.&lt;/p&gt;
&lt;h1 id=&quot;where-to-find-workshop-resources&quot;&gt;&lt;a href=&quot;#where-to-find-workshop-resources&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to find workshop resources&lt;/h1&gt;
&lt;p&gt;Please use the following links to find workshop materials in the Gatsby open source repo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Survey questions to send out &lt;a href=&quot;https://docs.google.com/a/gatsbyjs.com/forms/d/1S6diwCjR36VSJod7DGL0ZpESx3KdaNGiB4Szl4hOpg0/edit?usp=sharing&quot;&gt;before&lt;/a&gt; and &lt;a href=&quot;https://docs.google.com/a/gatsbyjs.com/forms/d/1iKok_QJHSav51_668QneqwxOFOMw_WNDPnX0PdBfUVA/edit?usp=sharing&quot;&gt;after&lt;/a&gt; workshops&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1fQNLvf1C8kj4rY-hVVY5zCsxy0z03gGkiqc-wiHHYhI/edit?usp=sharing&quot;&gt;Introductory slide deck for Day 1&lt;/a&gt;, &lt;a href=&quot;https://docs.google.com/presentation/d/1w_0CGX2DNUDAIDT0MCaCPNqA_0HgamutaECP8kZ3yyI/edit?usp=sharing&quot;&gt;Introductory slide deck for Day 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1gn5dk5RkuOXgZatd-Ow4XGqKY1NWZVCaUhyOwrRP0JE/edit?usp=sharing&quot;&gt;Agenda for workshop attendees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1epeLO_7xkbd-WvPDCEZZ8f2GV5uMLHHM_UIhpZxqRbo/edit?usp=sharing&quot;&gt;Step-by-step guide for the workshop host&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We hope these workshop materials help you share Gatsby at work, meetups, and wherever else it makes sense. Let us know how it goes and how you customize or modify these workshops!&lt;/p&gt;
&lt;h1 id=&quot;how-you-can-contribute&quot;&gt;&lt;a href=&quot;#how-you-can-contribute&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How you can contribute&lt;/h1&gt;
&lt;p&gt;If you’d like to contribute to making workshops and tutorials more awesome, here are a few of the many issues we created in the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/projects/3&quot;&gt;Documentation Project&lt;/a&gt; as a result of what we learned in the workshops; contributions welcome! (Note: we used the main &lt;a href=&quot;/tutorial/&quot;&gt;tutorials&lt;/a&gt; in the workshops, so edits and improvements to the tutorials also improve the workshop)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Good first issue&lt;/em&gt;: &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5608&quot;&gt;Emphasize file names&lt;/a&gt; with (bold, italics, headers, or some other way) when people copy and paste code, because it’s easy to miss &lt;em&gt;where&lt;/em&gt; you’re supposed to paste it with the current format&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Good first issue&lt;/em&gt;: Make it clear in tutorial part 0 and workshops that all instructions are built assuming that you have installed &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5610&quot;&gt;VS Code and Prettier&lt;/a&gt; because those work well with React&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/5030&quot;&gt;Add a copy button to code examples&lt;/a&gt; because people often missed backticks if their screen resolution didn’t make the ticks very visible&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We loved hosting workshops and plan to keep developing the resources as we learn. We’re so grateful for the workshop attendees and their feedback.&lt;/p&gt;
&lt;p&gt;And just as a reminder: we will keep improving these workshops and hope you’ll help us do that! Share your ideas and report how these workshops go for you in the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;Open source repo&lt;/a&gt; through issues and PRs (if you ran into problems with the workshops and/or have ideas of how to improve them) or &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt; if you want to share an upcoming workshops you’re running.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Announcing new Gatsby Company]]></title><description><![CDATA[Together with my co-founder,  Sam Bhagwat , I’m thrilled to announce the formation of  Gatsby Inc.  Based on the open source project Gatsby…]]></description><link>https://www.gatsbyjs.org/blog/2018-05-24-launching-new-gatsby-company/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-05-24-launching-new-gatsby-company/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;Together with my co-founder, &lt;a href=&quot;https://twitter.com/calcsam&quot;&gt;Sam Bhagwat&lt;/a&gt;, I’m thrilled to announce the formation of &lt;a href=&quot;https://www.gatsbyjs.com/&quot;&gt;Gatsby Inc.&lt;/a&gt; Based on the open source project Gatsby I founded, Gatsby the company will make feature-rich and blazing-fast websites easier to build and run.&lt;/p&gt;
&lt;p&gt;First of all, if you haven’t used Gatsby yet, what is it? Gatsby:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is a blazing fast static site generator for React.js&lt;/li&gt;
&lt;li&gt;is a powerful and flexible modern website framework that simplifies every step of starting, developing and running websites&lt;/li&gt;
&lt;li&gt;helps you leverage open source innovations in the React, NPM, and Gatsby communities for your web projects&lt;/li&gt;
&lt;li&gt;lets you pull data into pages from WordPress, Drupal, Contentful, markdown—and any other data source you can imagine&lt;/li&gt;
&lt;li&gt;compiles and optimizes your site’s code to make your sites lightning fast—even on mobile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gatsby is used by tens of thousands of developers and organizations and is downloaded nearly ½ million times per month.&lt;/p&gt;
&lt;p&gt;Follow our &lt;a href=&quot;/docs/&quot;&gt;getting started instructions&lt;/a&gt; to try out Gatsby in less than 5 minutes!&lt;/p&gt;
&lt;p&gt;I’ll get to the new company in a bit, but first, let me tell the story of how Gatsby came to be.&lt;/p&gt;
&lt;h2 id=&quot;origins-of-gatsby&quot;&gt;&lt;a href=&quot;#origins-of-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Origins of Gatsby&lt;/h2&gt;
&lt;h3 id=&quot;drupal-and-the-lamp-stack&quot;&gt;&lt;a href=&quot;#drupal-and-the-lamp-stack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drupal and the LAMP stack&lt;/h3&gt;
&lt;p&gt;I first tried web development 12 years ago during my sophomore year of college. I spent hours setting up PHP and MySQL on my laptop and was ecstatic when the iconic blue of Drupal finally appeared in my browser. Drupal v5 had just been released and I was proud to be learning the latest version of the top open source CMS. I clicked around the admin screens with awe and anticipation.&lt;/p&gt;
&lt;p&gt;I spent 1000s of hours building websites with Drupal—I even attempted to build a startup based around Drupal after college. I spoke at several DrupalCons and participated heavily within the Drupal open source ecosystem.&lt;/p&gt;
&lt;h3 id=&quot;the-emerging-world-of-javascript-applications&quot;&gt;&lt;a href=&quot;#the-emerging-world-of-javascript-applications&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The emerging world of JavaScript applications&lt;/h3&gt;
&lt;p&gt;But after years of building Drupal sites, I started feeling the pull of the emerging world of JavaScript web applications.&lt;/p&gt;
&lt;p&gt;Like most people, I was blown away when I first tried Gmail. How was an application running in my browser faster to load and use than my desktop email app?&lt;/p&gt;
&lt;p&gt;During my years building Drupal sites, I’d occasionally cast envious eyes at apps like Gmail, wishing I could work on something like that. But I could never quite figure out how they worked. JavaScript was a second-class citizen in Drupal those days, and I spent 99% of my time writing PHP.&lt;/p&gt;
&lt;h3 id=&quot;backbonejsnodejsnpm&quot;&gt;&lt;a href=&quot;#backbonejsnodejsnpm&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backbone.js/Node.js/NPM&lt;/h3&gt;
&lt;p&gt;Then, in late 2010, the initial version of Backbone.js was released. I started playing with it and got super excited because things finally clicked for me: this was how to build rich, real-time JavaScript apps. The next year, I started my first full-time software development job at &lt;a href=&quot;https://pantheon.io/&quot;&gt;Pantheon.io&lt;/a&gt; and had a fantastic time building the Pantheon dashboard with Backbone.js to support Drupal &amp;#x26; WordPress developers. I attended Backbone.js meetups and the first few Backbone.js conferences. Developer excitement online and at meetups was palpable. We could all feel that the world of web applications was starting to change dramatically.&lt;/p&gt;
&lt;p&gt;Node.js, then only a couple of years old, was gaining traction fast. For the first time, NPM enabled the easy sharing of JavaScript libraries. Consequently, the number of libraries exploded. With a server runtime and ecosystem developing around JS, more and more web development tools started being written in JavaScript.&lt;/p&gt;
&lt;p&gt;The fast paced world of the web was reinventing itself again.&lt;/p&gt;
&lt;h3 id=&quot;first-exposure-to-cloud-native-software-engineering&quot;&gt;&lt;a href=&quot;#first-exposure-to-cloud-native-software-engineering&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First exposure to cloud-native software engineering&lt;/h3&gt;
&lt;p&gt;Working at Pantheon was my first exposure to modern software engineering techniques like microservices, stateless services, 12-factor applications, Chef, Docker, Heroku, cheap development environments that mirrored production, continuous integration and deployment, atomic deploys and easy rollbacks with dreams of canary deploys and feature flagging. &lt;a href=&quot;https://www.amazon.com/Principles-Product-Development-Flow-Generation/dp/1935401009&quot;&gt;Product Development Flow&lt;/a&gt; became my bible.&lt;/p&gt;
&lt;p&gt;I was hooked on being able to ship production code so quickly. Life was good.&lt;/p&gt;
&lt;h3 id=&quot;reactjs&quot;&gt;&lt;a href=&quot;#reactjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React.js&lt;/h3&gt;
&lt;p&gt;Then in 2013, React.js was released.&lt;/p&gt;
&lt;p&gt;I first heard about React from &lt;a href=&quot;http://swannodette.github.io/2013/12/17/the-future-of-javascript-mvcs&quot;&gt;David Nolen’s blog post introducing his ClojureScript wrapper of React Om&lt;/a&gt;. I was completely fascinated by his analysis; his identification of DOM manipulation code as a major contributor to application complexity and slowdowns resonated with me. I started reading everything I could find on React and soon became a huge fan.&lt;/p&gt;
&lt;p&gt;Early in 2014, I left Pantheon to explore new opportunities. I dove deeper into React and built a number of sample applications and was astounded at how productive I was. Problems that used to take me weeks to solve in Backbone.js took me hours in React.js. Not only was I productive; my code felt remarkably simple. With Backbone.js, I always felt I was one or two slip-ups from the whole application spiraling out of control. With React, elegant and simple solutions seemed to come naturally from using the library. Again, I could feel things in web land were changing in a very big way.&lt;/p&gt;
&lt;h3 id=&quot;distributed-computing--event-sourcing&quot;&gt;&lt;a href=&quot;#distributed-computing--event-sourcing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed computing &amp;#x26; event sourcing&lt;/h3&gt;
&lt;p&gt;A friend and I decided to work on a startup idea using React to build data-driven landing pages for sales reps.&lt;/p&gt;
&lt;p&gt;During this time, I read two articles that had an enormous impact on me—“&lt;a href=&quot;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&quot;&gt;The Log: What every software engineer should know about real-time data’s unifying abstraction&lt;/a&gt;” and “&lt;a href=&quot;https://www.confluent.io/blog/turning-the-database-inside-out-with-apache-samza/&quot;&gt;Turning the database inside-out with Apache Samza&lt;/a&gt;.” Databases and distributed systems finally clicked for me, and I obsessed over how to implement event sourcing for my startup. The latter article’s elegant critique of caching as an inevitable source of bugs and complexity and its suggestion to use materialized views generated through event sourcing sunk deep.&lt;/p&gt;
&lt;p&gt;The traditional batch processing mode of computing—which reached its pinnacle with Hadoop—was taking heavy criticism as more and more applications demanded real-time data processing. The era of Big Data had arrived as the volume of data rolling through systems reached stratospheric levels at large numbers of companies. Kafka and stream processing frameworks like Spark were getting lots of attention.&lt;/p&gt;
&lt;h3 id=&quot;designing-and-launching-the-initial-version-of-gatsby&quot;&gt;&lt;a href=&quot;#designing-and-launching-the-initial-version-of-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Designing and launching the initial version of Gatsby&lt;/h3&gt;
&lt;p&gt;Meanwhile, I was having lots of fun in my startup optimizing my landing pages. I added server side rendering and a number of other really fun performance tweaks while poring over reports from &lt;a href=&quot;http://www.webpagetest.org/&quot;&gt;webpagetest.org&lt;/a&gt;. Universal JavaScript had arrived and was amazing.&lt;/p&gt;
&lt;p&gt;We reached the point where we needed a website for the startup and after having focused on web apps for so long, all of the solutions in the content website world felt out of date.&lt;/p&gt;
&lt;p&gt;Spinning up a local DB &amp;#x26; server felt like a return to 2006, while template-based site generation felt far inferior to React’s elegant component model.&lt;/p&gt;
&lt;p&gt;After some exploration with React server rendering for our app, I realized that React could actually be used as the basis for a static site generator. I got really excited about the potential and started scribbling notes in my notebook from time to time. Eventually, I took a week to build this out and launched Gatsby in late May 2015.
To my surprise and delight, people started using Gatsby almost immediately after I open sourced it. I spoke about Gatsby at the React conference in January of 2016 and was surprised at how many people knew about it and were using it.&lt;/p&gt;
&lt;h3 id=&quot;growing-momentumcan-gatsby-be-much-much-more&quot;&gt;&lt;a href=&quot;#growing-momentumcan-gatsby-be-much-much-more&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Growing momentum—can Gatsby be much much more?&lt;/h3&gt;
&lt;p&gt;Like most open source projects under heavy use, it started getting feature requests. One of the most common requests was how to scale Gatsby to larger sites as well as how to integrate Gatsby with CMSs like WordPress, Contentful, Drupal, and others. I had assumed people just used static sites for markdown or JSON driven sites, but as it turned out, there was a large group of developers interested in pushing the boundaries of what static sites can do.&lt;/p&gt;
&lt;p&gt;These developers realized that the scaling and performance challenges faced by traditional CMS-driven sites was difficult to resolve without a new way to build websites. They had watched database-driven sites fail under heavy loads, and had seen slow, unoptimized websites drive away potential visitors.&lt;/p&gt;
&lt;p&gt;They also like static sites generators because they easily leverage modern engineering ideas like Git, cheap development environments, continuous integration and deployment, open source innovations, modern JavaScript tooling and frameworks that dramatically improve productivity and developer happiness.&lt;/p&gt;
&lt;p&gt;Static sites let you focus on what’s unique to your site—components, data structures, and design.&lt;/p&gt;
&lt;h3 id=&quot;limitations-of-static-site-generators&quot;&gt;&lt;a href=&quot;#limitations-of-static-site-generators&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations of static site generators&lt;/h3&gt;
&lt;p&gt;But static sites, despite how much developers love them, have never gained widespread usage. They have real limitations in real-world use cases—they can’t handle frequent content updates and can’t scale to large and complex sites.&lt;/p&gt;
&lt;h3 id=&quot;rebuild-gatsby-on-a-stream-processing-architecture-to-eliminate-the-build-step&quot;&gt;&lt;a href=&quot;#rebuild-gatsby-on-a-stream-processing-architecture-to-eliminate-the-build-step&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rebuild Gatsby on a stream processing architecture to eliminate the build step&lt;/h3&gt;
&lt;p&gt;As I thought deeply about this problem, it occurred to me that there were strong parallels between this problem and everything I’d learned about event sourcing and building cloud-native applications.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Static sites are the materialized views of websites.&lt;/p&gt;&amp;mdash; Kyle Mathews (@kylemathews) &lt;a href=&quot;https://twitter.com/kylemathews/status/825512417337544705?ref_src=twsrc%5Etfw&quot;&gt;January 29, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Event sourcing potentially fantastic model for static site builder. Continually rebuilding website on events.&lt;/p&gt;&amp;mdash; Kyle Mathews (@kylemathews) &lt;a href=&quot;https://twitter.com/kylemathews/status/825513977329307648?ref_src=twsrc%5Etfw&quot;&gt;January 29, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;I realized you could view a website as the current computed state of a long stream of content and code changes. When viewed through that lens, the architecture became clear for a new version of Gatsby that would glue Gatsby to various data sources &amp;#x26; solve the really hard problems of static sites: fast incremental builds and parallelizing builds for large and complex sites.&lt;/p&gt;
&lt;p&gt;This architecture would enable Gatsby to eliminate the build step entirely—any code or content change would be quickly incorporated into the site and go live immediately. We could port the ideas of real-time event processing to building websites.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Building for the web in the future will revolve entirely around thinking about design and data structures.&lt;/p&gt;&amp;mdash; Kyle Mathews (@kylemathews) &lt;a href=&quot;https://twitter.com/kylemathews/status/916165920359198720?ref_src=twsrc%5Etfw&quot;&gt;October 6, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Everything else can be automated&lt;/p&gt;&amp;mdash; Kyle Mathews (@kylemathews) &lt;a href=&quot;https://twitter.com/kylemathews/status/916165988772487168?ref_src=twsrc%5Etfw&quot;&gt;October 6, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;launching-new-version-of-gatsby&quot;&gt;&lt;a href=&quot;#launching-new-version-of-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Launching new version of Gatsby&lt;/h3&gt;
&lt;p&gt;So with my mind buzzing with ideas and possibilities, in late summer 2016, I plunged into work on the new version of Gatsby.&lt;/p&gt;
&lt;p&gt;I posted my plans on GitHub and with help from 100s of developers in the community, we spent 10 months building out the new version of Gatsby which we released in July of 2017 with plugins for markdown, WordPress, Contentful, and others.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-a-company-for-automating-websites&quot;&gt;&lt;a href=&quot;#gatsby-a-company-for-automating-websites&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby, a company for automating websites&lt;/h2&gt;
&lt;p&gt;After spending fall 2016, and most of 2017 consulting with companies around Gatsby and interacting with 100s of developers in the open source world, I started feeling confident that it was time to create a company devoted to bringing the full vision of Gatsby to fruition. My longtime best friend and Gatsby core contributor Sam Bhagwat and I started chatting about forming this startup to bring Gatsby to the world.&lt;/p&gt;
&lt;p&gt;We were lucky to find some great investors, led by &lt;a href=&quot;http://www.trinityventures.com/team/dan-scholnick/&quot;&gt;Dan Scholnick of Trinity Ventures&lt;/a&gt;, who shared our vision for new cloud-native website infrastructure and has extensive experience investing in and working with open source &amp;#x26; cloud infrastructure startups like New Relic, Docker, Meteor, InfluxData and more, to back us with $3.8M in seed funding.&lt;/p&gt;
&lt;p&gt;I want to emphasize that this new startup doesn’t signal any move away from open source. I’ve been heavily involved in open source communities since I started programming 12 years ago and strongly believe it’s the best way to build software. We will be building cloud services for Gatsby but Gatsby itself will remain 100% open source as will most of what we intend to do. What the investment and company will enable is a much larger amount of effort towards improving Gatsby core and its surrounding ecosystem. Several core contributors have already joined to work full-time on Gatsby. We’ve been able to work with upstreams to make targeted improvements that benefit not just Gatsby but the whole frontend ecosystem. And as our company grows, we’ll be able to proportionally increase our investment in open source.&lt;/p&gt;
&lt;p&gt;Gatsby, the company, is just getting off the ground, but, since the open source project is widely used, we wanted to talk about it now vs. keeping it a secret. If you’re a company exploring building some of your websites with React and headless CMSs, we would love to talk with you. If you are an engineer interested in helping us build the the future of web development, we’d love to talk with you as well.&lt;/p&gt;
&lt;p&gt;It’s been an amazing journey so far. Wish Sam and I and our new colleagues luck on this new adventure.&lt;/p&gt;
&lt;h3 id=&quot;learn-more-about-gatsby&quot;&gt;&lt;a href=&quot;#learn-more-about-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more about Gatsby&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://thenewstack.io/gatsbyjs-the-open-source-react-based-ssg-creates-company-to-evolve-cloud-native-website-builds/&quot;&gt;From the New Stack “GatsbyJS, the Open Source React-Based SSG, Creates Company to Evolve Cloud-Native Website Builds”&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com&quot;&gt;gatsbyjs.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/&quot;&gt;gatsbyjs.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Also participating in Gatsby’s funding round: Fathom Ventures, Robin Vasan, Mulesoft founder Ross Mason &amp;#x26; the Pantheon founding team (Zack Rosen, Josh Koenig, Matt Cheney and David Strauss).&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Six Reasons I Chose Gatsby]]></title><description><![CDATA[Spoiler alert: I'm a big fan of Gatsby.]]></description><link>https://www.gatsbyjs.org/blog/2018-05-11-six-reasons-i-chose-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-05-11-six-reasons-i-chose-gatsby/</guid><dc:creator><![CDATA[Ray Gesualdo]]></dc:creator><content:encoded>&lt;p&gt;Spoiler alert: I’m a big fan of &lt;a href=&quot;/&quot;&gt;Gatsby&lt;/a&gt;. I’ve worked with it multiple times and I’m continually impressed with its power and flexibility. For those who aren’t familiar, Gatsby is an open-source static site generator incorporating React and GraphQL. A few weeks ago, I switched my site to Gatsby and wanted to share my reasons for doing so. Plenty of articles have been written about &lt;em&gt;how&lt;/em&gt; to build a Gatsby site, but I wanted to talk about &lt;em&gt;why&lt;/em&gt; Gatsby is a great choice. I’ve outlined these reasons below in no particular order (the numbering is only for organizational purposes). I hope they give you a better understanding of Gatsby’s benefits and features.&lt;/p&gt;
&lt;h2 id=&quot;1-its-react&quot;&gt;&lt;a href=&quot;#1-its-react&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#1: It’s React&lt;/h2&gt;
&lt;p&gt;I’ve been working with React for the better part of 3.5 years. I know it. I’m efficient in it. Being able to create my site markup with React makes complete sense for me. More than that however, by using React as its templating engine, Gatsby also benefits from all the wonderful React components developed by the community. Like CSS-in-JS? Use it (&lt;a href=&quot;https://styled-components.com&quot;&gt;styled-components&lt;/a&gt; FTW!). Have a favorite React UI kit? Throw it in there. Any React component that can be server-side rendered, which is most of them, can be used with Gatsby. This opens up a whole new set of possibilities when building out your “static” site.&lt;/p&gt;
&lt;h2 id=&quot;2-an-extensive-well-architected-plugin-system&quot;&gt;&lt;a href=&quot;#2-an-extensive-well-architected-plugin-system&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#2: An extensive, well-architected plugin system&lt;/h2&gt;
&lt;p&gt;One of the first things about Gatsby that impressed me was its plugin system. Like many other OSS tools such as Webpack and Babel, much of the power of Gatsby is provided by plugins. And that’s a good thing. Its plugin architecture allows for incredibly deep integrations into almost every aspect of Gatsby: build configuration, data extraction and transformation, the build process, the browser at runtime, etc. This system has allowed not only the core Gatsby team to create powerful plugins, but the community to create equally powerful plugins as well. I’ve even tried my hand at &lt;a href=&quot;https://github.com/raygesualdo/gatsby-plugin-settings&quot;&gt;writing one&lt;/a&gt; (quite successfully, I might add). If there’s a task you’re looking to accomplish with Gatsby, odds are there is already a plugin for it. And if not, there’s &lt;a href=&quot;/docs/plugin-authoring/&quot;&gt;plenty of documentation&lt;/a&gt; to help you get started writing one.&lt;/p&gt;
&lt;h2 id=&quot;3-the-data-fetching-layer&quot;&gt;&lt;a href=&quot;#3-the-data-fetching-layer&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#3: The data fetching layer&lt;/h2&gt;
&lt;p&gt;With any website, one needs to have data/content injected into markup to generate HTML. With static site generators, this usually involves writing Markdown files adjacent to template files that get merged together in some way at build time. Gatsby takes a different approach by providing a data fetching abstraction layer between your data/content and your templates. This brings about a huge paradigm shift both in how data is accessed in the templates as well as from where data can be pulled (we’ll look at the latter in reason #4).&lt;/p&gt;
&lt;p&gt;With Gatsby, the entirety of your site’s data is accessed via a local &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; API. If you’ve never worked with GraphQL before, that’s okay; Gatsby’s docs &lt;a href=&quot;/docs/querying-with-graphql/&quot;&gt;walk you through the process&lt;/a&gt;. In your page templates, you can specify the data you require for that page as a GraphQL query. Then, when Gatsby’s build process runs, it analyzes the query and provides the requested data to the template. Future versions of Gatsby will also let you do this at the component level as well. This allows you to build up your templates using the React’s normal component paradigm.&lt;/p&gt;
&lt;h2 id=&quot;4-multiple-data-sources&quot;&gt;&lt;a href=&quot;#4-multiple-data-sources&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#4: Multiple data sources&lt;/h2&gt;
&lt;p&gt;Because the manner in which one accesses data is abstracted from the data itself, Gatsby can collate data from multiple sources which can then be queried by our templates. This is a significant difference when compared to most static site generators. Instead of only using Markdown files, I can now use any number of different data files locally. But I can also pull data from remote sources such as WordPress, Drupal, Contentful, Stripe, Trello, Medium, MongoDB, and many others. If the data you require can be accessed via an API, you can write a Gatsby source plugin to consume it too. Moreover, any number of these sources can be used in parallel. This allows for powerful and flexible combinations to bring just about any data into your site. I’ll be writing a whole blog post on this soon.&lt;/p&gt;
&lt;h2 id=&quot;5-performance-and-pwa-features-out-of-the-box&quot;&gt;&lt;a href=&quot;#5-performance-and-pwa-features-out-of-the-box&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#5: Performance and PWA features out-of-the-box&lt;/h2&gt;
&lt;p&gt;Performance on the web can be difficult. It’s especially helpful to have a tool that enforces best practices and optimizes your site by default. Gatsby does just that. When the build process runs, Gatsby creates static HTML files for each of your pages which provides fast initial load times and makes SEO much simpler. Once your page is loaded by the browser though, Gatsby will boot up React and navigate around your site as if you were navigating via a single page app with near-instant transitions without page reloads. Gatsby will even prefetch adjacent/related page content in the background so there’s zero delay when your user clicks a link. The client-side experience is buttery smooth with JavaScript enabled and you don’t lose any content or navigation if the user has JavaScript dislabed. By adding a single plugin, Gatsby can provide offline support as well, transforming your site into a full-blown Progressive Web App.&lt;/p&gt;
&lt;h2 id=&quot;6-the-developer-experience&quot;&gt;&lt;a href=&quot;#6-the-developer-experience&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;#6: The developer experience&lt;/h2&gt;
&lt;p&gt;This one may be a bit more subjective, but working with Gatsby is plain fun. The plugin system makes it easy to extend, typically with a simple &lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt; and a few lines in the configuration file. When you’re developing or writing local content, Gatsby has live-reload so you see your changes immediately. Documentation for the project is solid and keeps improving. The maintainers are extremely helpful on GitHub and Twitter (and I’m sure elsewhere too). It’s an all around pleasant experience.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Have you used Gatsby before? What are your reasons for using it? Chat with me about them on &lt;a href=&quot;https://twitter.com/RayGesualdo&quot;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Eviction Free NYC with GatsbyJS + Contentful]]></title><description><![CDATA[Lessons in building a minimal, low-connectivity site for navigating a daunting legal process.]]></description><link>https://www.gatsbyjs.org/blog/2018-04-27-building-eviction-free-nyc-with-gatsbyjs-and-contentful/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-27-building-eviction-free-nyc-with-gatsbyjs-and-contentful/</guid><dc:creator><![CDATA[Dan Kass]]></dc:creator><content:encoded>&lt;p&gt;On March 29th, we launched &lt;a href=&quot;http://www.evictionfreenyc.org/&quot;&gt;Eviction Free NYC&lt;/a&gt; with the &lt;a href=&quot;https://www.righttocounselnyc.org/&quot;&gt;Right to Counsel Coalition&lt;/a&gt; as part of a campaign to educate tenants living in affordable housing on their legal rights and how to navigate the daunting process of receiving an eviction notice.&lt;/p&gt;
&lt;p&gt;In order to build this new resource we applied a &lt;a href=&quot;https://medium.com/@JustFixNYC/co-designing-eviction-free-nyc-b54570c69153&quot;&gt;human-centered design process&lt;/a&gt; followed by specialized technical scoping in order to determine what was best for our users and build something for this unique context. &lt;strong&gt;That process led us to using GatsbyJS, Contentful, and Netlify!&lt;/strong&gt; Below, we’ve written up how we mapped design to dev, approached different stakeholders, and utilized Gatsby’s great flexibility &amp;#x26; plugin library.&lt;/p&gt;
&lt;h4 id=&quot;mapping-design-considerations-to-technical-scoping&quot;&gt;&lt;a href=&quot;#mapping-design-considerations-to-technical-scoping&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Mapping Design Considerations to Technical Scoping&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;design-mapping.jpeg&quot;&gt;
&lt;em&gt;Journey mapping for a tenant organizing process!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We started this process with a pretty strong sense of our average user’s
technical capacity and degree of comfort in using a website or app. For the past
3 years, we’ve been collecting user insights from the &lt;a href=&quot;https://www.justfix.nyc/&quot;&gt;JustFix.nyc Tenant
Web-App&lt;/a&gt; and other resources. As you might imagine,
the majority of our users are coming from mobile devices (&lt;strong&gt;over 95% of
low-income Americans now have a device that connects to the Internet&lt;/strong&gt;) and
usually do not have a very fast connection to the Internet. We learned from
user-testing in Housing Court that there is usually little-to-no cell
reception in the building. We also knew that internationalization (i18n) and
language localization would be a launch requirement. Previous analytics from the
Tenant Web-App also informed us to account for older browsers such as Internet
Explorer 11, given that many older users and nonprofit employees still use it.&lt;/p&gt;
&lt;p&gt;For coalition members, the site needed to be incredibly adaptable and easily
managed from a &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_management_system&quot;&gt;Content Management
System&lt;/a&gt;, or CMS. The
RTC policy and coverage areas change on an almost daily basis, and thus required
a content modelling system that would prevent the site from quickly becoming
outdated. We also wanted to utilize this system to make it easy for new
languages to be added and maintained with as little technical knowledge as
possible.&lt;/p&gt;
&lt;h4 id=&quot;our-solution-gatsbyjs&quot;&gt;&lt;a href=&quot;#our-solution-gatsbyjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Our solution: GatsbyJS&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;We knew that we would build the site in &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;.
Developers can build websites quickly and reliably through its modular
architecture and extensive system of third-party components. React’s simple
component-based philosophy creates code and structure that just &lt;em&gt;makes sense&lt;/em&gt;,
allowing other developers to more easily contribute to the project as well.
It’s also unobtrusive enough that it can be applied to both large and small web
development projects.&lt;/p&gt;
&lt;p&gt;From there, we looked for different scaffolds that would help us get
up-and-running quickly. While we’re big fans of
&lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;create-react-app&lt;/a&gt; and have used
it on other projects, due to an aggressive project timeline, we needed something
that provided a more “out-of-the-box” solution. We wound up building the site in
GatsbyJS, which is a &lt;strong&gt;React-based static site generator&lt;/strong&gt;. GatsbyJS is the
perfect fit for a number of reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Static_web_page&quot;&gt;Static sites&lt;/a&gt; load content much
more quickly than dynamic web applications, which require multiple
back-and-forth calls to a server in order to display the final composited view
to the user. They are more easily adaptable for low connectivity / offline
functionality for this reason. This allows us to provide a faster and more
reliable experience for tenants utilizing the service.&lt;/li&gt;
&lt;li&gt;GatsbyJS ships with an incredible amount of pre-handled optimization features,
from prefetching resources to progressive image loading to inlining code blocks
so they don’t need to be fetched via
&lt;a href=&quot;https://en.wikipedia.org/wiki/Ajax_(programming)&quot;&gt;AJAX&lt;/a&gt;. There was no way we
could have achieved this level of optimization on our own in this timeframe.&lt;/li&gt;
&lt;li&gt;A growing plugin library that allows for easy integrations that utilize Gatsby’s
GraphQL data query system. With these we could easily use things like
&lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-source-contentful/?=conten&quot;&gt;gatsby-source-contentful&lt;/a&gt;
and &lt;a href=&quot;https://github.com/angeloocana/gatsby-plugin-i18n&quot;&gt;gatsby-plugin-i18n&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A growing community of developers sharing resources and best practices. Credit
is due to &lt;a href=&quot;https://github.com/mccrodp&quot;&gt;mccrodp&lt;/a&gt; for setting up
&lt;a href=&quot;https://github.com/mccrodp/gatsby-starter-contentful-i18n&quot;&gt;gatsby-starter-contentful-i18n&lt;/a&gt;,
a boilerplate that synced Contentful and i18n features together and allowed us
to hit the ground running.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;using-contentful&quot;&gt;&lt;a href=&quot;#using-contentful&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Using Contentful&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt; is a “headless” &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_management_system&quot;&gt;Content Management
System&lt;/a&gt;, or CMS.
Traditional CMS platforms, like Wordpress or Drupal, allow authors and editors
to easily create websites and publish content such as text articles, image, or
video embeds. A headless CMS takes those publishing features (and the easy admin
tools that come with them) and additionally gives you total flexibility as to
how the website itself is constructed.&lt;/p&gt;
&lt;p&gt;In previous projects where we used Contentful, content was loaded dynamically
(via AJAX) when a user visits the site. GatsbyJS instead pulls content from
Contentful &lt;em&gt;as the site compiles&lt;/em&gt; (pre-deploy), not when the user visits it.
This change creates significantly less server requests after page load and
further speeds up the site’s final load time.&lt;/p&gt;
&lt;p&gt;With Contentful, you define &lt;em&gt;Content Models&lt;/em&gt; in tandem with coding individual
pages in order to construct the structure of the site and its content. For
Eviction Free NYC, some sample &lt;em&gt;Content Models&lt;/em&gt; are &lt;strong&gt;Providers&lt;/strong&gt;, &lt;strong&gt;Housing
Court Action Steps&lt;/strong&gt;, and meta-level page models, such as &lt;strong&gt;LandingPage&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;provider-example.png&quot;&gt;
&lt;em&gt;An example of the Provider content model&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As GatsbyJS compiles the site (either in dev or building for production), it
will pull content from Contentful and make it available via GraphQL. A file’s
GraphQL &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; will then populate your React component’s &lt;code class=&quot;language-text&quot;&gt;props&lt;/code&gt; with the
corresponding data, creating an incredibly simple pipeline from content → code.
As an example, here’s the provider portion of a sample &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;providers {
  title
  acceptsRtcCases
  phoneNumber
  website
  hours
  intakeInstructions
  address
  logo {
    resolutions(width: 100, height: 100) {
      aspectRatio
      width
      height
      src
      srcSet
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;challenge-hyper-personalized-result-pages-in-a-static-site&quot;&gt;&lt;a href=&quot;#challenge-hyper-personalized-result-pages-in-a-static-site&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Challenge: Hyper-personalized result pages in a static site&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;When a tenant goes to Eviction Free NYC, they answer a simple questionnaire that
determines a results page. It’s tailored to their borough’s housing court
(including information about room numbers and different parts) and factors in
their eligibility for legal representation as well as different types of
eviction proceedings. &lt;strong&gt;This level of personalization is difficult to achieve in
a static site and manage in a CMS.&lt;/strong&gt; We wound up finding a solution that gave us
flexibility and reuse of content while preserving the static page nature of
GatsbyJS.&lt;/p&gt;
&lt;p&gt;The four variables for generating these pages were language, housing court, case
type, and eligibility. A quick calculation gave us the basic number of result
pages:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2 languages x 5 different housing courts x 3 different case types x (y/n)
eligibility = 60 static results pages&lt;/strong&gt;!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This doesn’t include additional pages we built afterwards to account for NYCHA
tenants and other situations. Here’s an example of what this looks like in
Contentful:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;housing-court-example.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;There are 6 potential pathways that a user could be taken (seen above as
Holdover, Qualifies; Holdover, Doesn’t Qualify, etc) per housing court. These
were represented as &lt;em&gt;arrays of references&lt;/em&gt; to Housing Court Action Steps, which
are in turn represented in Contentful as editable Markdown snippets. This system
allows for steps to be reused (see “Brooklyn Housing Court location” above) and for
third-party content, such as Google Maps, to be embedded in the steps. To
reorder a step or change a part of the process for a specific court or case
type, you can simply drag-n-drop things in Contentful!&lt;/p&gt;
&lt;p&gt;From there, we had to teach GatsbyJS how to properly render each page based on
pathway. We did this by implementing the &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; function in the &lt;a href=&quot;https://www.gatsbyjs.org/docs/node-apis/&quot;&gt;Gatsby
Node API&lt;/a&gt;. For each Housing Court Page
(also per language!), Gatsby creates 6 different pages based on the pathways.
While our solution had to account for some &lt;a href=&quot;https://github.com/facebook/graphql/issues/414&quot;&gt;limitations in
GraphQL&lt;/a&gt;, everything wound up
working as needed.&lt;/p&gt;
&lt;p&gt;Feel free to &lt;a href=&quot;https://github.com/JustFixNYC/eviction-free-nyc&quot;&gt;explore the source
code&lt;/a&gt; to get a better sense of
how all this works!&lt;/p&gt;
&lt;h4 id=&quot;wrapping-everything-up-using-netlify&quot;&gt;&lt;a href=&quot;#wrapping-everything-up-using-netlify&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;strong&gt;Wrapping everything up: using Netlify&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;When it came time to deploy, we were very excited to try out a new hosting
platform called &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; that we’d been hearing a lot
about. It has a great free tier and is perfect for hosting static sites. We
simply linked Netlify to a branch in the Eviction Free NYC GitHub repo and it
compiles and deploys the site with each push. It simplifies HTTPS certificate
generation and even includes a system for deploying AWS Lambda functions, which
we used to ship a small Twilio integration for the site’s “Save to Phone”
feature. &lt;em&gt;(note: we’re actually still using the original
_&lt;a href=&quot;https://serverless.com/&quot;&gt;Serverless&lt;/a&gt;&lt;/em&gt; solution, but this code is in the repo
as a to-do)_&lt;/p&gt;
&lt;p&gt;The best feature of Netlify is its ability to utilize build hooks. This allows
us to trigger a new site build when someone edits or adds content from
Contentful. Contentful’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Webhook&quot;&gt;webhook&lt;/a&gt;
functionality will fire an event when content is edited or published. Once you
link the two together, Netlify will receive the event, rebuild the site, and
deploy everything. Done!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;mobile-comps.png&quot;&gt;
&lt;em&gt;Mobile comps for Eviction Free NYC&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;in-conclusion&quot;&gt;&lt;a href=&quot;#in-conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In Conclusion&lt;/h4&gt;
&lt;p&gt;The technical process for building the site went by incredibly fast — this all
came together in a little over a month! Despite the frenzied speed, we created a
valuable new service that also acts as a launching pad for future feature
development and refinement. &lt;strong&gt;It’s already been used by over 1,000 people in the
past few weeks!&lt;/strong&gt; We’re really excited for this site to grow and develop as
tenants take advantage of this historic new right.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Footnote: Our code for &lt;a href=&quot;http://www.evictionfreenyc.org/&quot;&gt;evictionfreenyc.org&lt;/a&gt; is
open source! &lt;a href=&quot;https://github.com/JustFixNYC/eviction-free-nyc&quot;&gt;Click
here&lt;/a&gt; to view the code on
github.&lt;/strong&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How Gatsby Changes Teams' Website Development Workflow]]></title><description><![CDATA[Gatsby is more than just a new website framework -- it changes the way your team works together.]]></description><link>https://www.gatsbyjs.org/blog/2018-04-25-how-gatsby-changes-teams-website-development-workflow/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-25-how-gatsby-changes-teams-website-development-workflow/</guid><dc:creator><![CDATA[Sam Bhagwat]]></dc:creator><content:encoded>&lt;p&gt;Gatsby is more than just a new website framework — creating websites in Gatsby is a fundamentally different paradigm than in a CMS-specific framework.&lt;/p&gt;
&lt;p&gt;Website teams adopting Gatsby report improved collaboration at each stage — from architecture and user research, to design and development, to testing and launch. Many of these derive from Gatsby features: faster development cycles, easy compatibility with React component libraries, a CMS-agnostic development environment, the ability to easily deploy static build artifacts.&lt;/p&gt;
&lt;p&gt;To fully take advantage of new, Gatsby-enabled workflows, consider adopting some of these techniques:&lt;/p&gt;
&lt;h3 id=&quot;architecture&quot;&gt;&lt;a href=&quot;#architecture&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Take advantage of extended evaluation periods to build a component library&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Larger companies considering adopting Gatsby often plan in terms of migrating multiple sites (or internationalized versions of sites) over a timeframe of a few months to two years. These projects can have long preparation times before active development starts.&lt;/p&gt;
&lt;p&gt;One high-leverage activity during these time windows is to focus development on a React component library. Then, when development begins the team is able to quickly assemble Gatsby React pages from these pre-built components. Consider designating senior UI developers as “component architects” in this process.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Consider a less-expensive CMS or multi-modal architecture&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Choosing Gatsby frees your CMS from doing a lot of the heavy lifting, such as scaling to meet peak load and having a rich, modern web development experience. If you’re using an expensive enterprise CMS, Gatsby can help your project stay within budget by allowing you to choose a simpler, cheaper option, such as a hosted Drupal instance, or a content management SaaS like Contentful.&lt;/p&gt;
&lt;p&gt;Another consideration is that not all of your content &lt;em&gt;has&lt;/em&gt; to live in one system. Often, you can save time and money by create a multi-modal content architecture with best-in-class solutions for each of the different workflows &amp;#x26; capabilities you require. You might choose to manage your e-commerce product catalog in Shopify, company-specific marketing pages in Contentful, and form-based event data in Google Sheets &amp;#x26; Forms. Gatsby offers plugins to pull data from multiple sources, while building with one stack.&lt;/p&gt;
&lt;h3 id=&quot;user-research&quot;&gt;&lt;a href=&quot;#user-research&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Research&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Utilize developers to prototype faster&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In order to do user testing, usually user researchers work with designers to construct pixel perfect prototypes of various options, either static or clickable. Constructing and iterating on these artifacts can take days or weeks.&lt;/p&gt;
&lt;p&gt;Gatsby makes another option possible. Some Gatsby users report &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-01-18-how-boston-gov-used-gatsby-to-be-selected-as-an-amazon-hq2-candidate-city/&quot;&gt;setting up a production site&lt;/a&gt; with live UI that is building and deploying in under an hour.&lt;/p&gt;
&lt;p&gt;Especially if your organization already uses a React or HTML-based component library, your team may consider bringing in a developer to construct live wireframe-level prototypes. This may enable you to accelerate the user research process, start the development process with a working prototype rather than from scratch, and ultimately let you arrive at a better version of your site.&lt;/p&gt;
&lt;h3 id=&quot;development&quot;&gt;&lt;a href=&quot;#development&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Make progress without access to the client CMS&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sometimes website development teams don’t gain access to the client’s CMS until development has already started. This can happen for a variety of reasons — internal client policies, the need to onboard content editors, and so forth. Typically this is a difficult situation where development can be blocked or delayed, and can lead to timeline slippage, crunch time at the end of the project, and so on.&lt;/p&gt;
&lt;p&gt;With Gatsby, the CMS-agnostic development workflow gives teams tools to continue to make progress even without access to client content. One common approach is to develop and prototype UIs pulling placeholder content from markdown files stored in the repo. When the team gains access, it only takes a few lines of code to reconfigure the site to pull content from the CMS.&lt;/p&gt;
&lt;h2 id=&quot;qa-and-testing&quot;&gt;&lt;a href=&quot;#qa-and-testing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;QA and Testing&lt;/h2&gt;
&lt;p&gt;Gatsby’s extensible system of API hooks, tight integration with static hosts like Netlify, and use of React’s modular component architecture, allow website teams to enable more effective QA &amp;#x3C;-&gt; Development workflows.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Use development pages to communicate project status &amp;#x26; collaborate with designers&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;One option some teams have found powerful is to create static page components within Gatsby to &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-04-11-trying-out-gatsby-at-work-and-co/#1-pre-integration-qa&quot;&gt;handle necessary parts of the development/QA workflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This could include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checking UI implementation of various components to ensure behavior is intended&lt;/li&gt;
&lt;li&gt;Enabling QA visibility into desired site-specific page-level validations, such as “don’t end a page in a carousel”&lt;/li&gt;
&lt;li&gt;Communicating build history and last build status&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Use branch and pull request-based artifacts to collaborate on specific pieces of work&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Using the &lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-04-11-trying-out-gatsby-at-work-and-co/#building-staging-urls&quot;&gt;branch and pull request-based artifacts&lt;/a&gt; automatically created by a service like Netlify for collaboration between developers, designers, and QA. Because generated artifacts are static, pull request collaboration workflows are resilient to underlying content schema changes, such as field deletion, that might break a typical CMS development environment.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Trying out Gatsby at Work & Co]]></title><description><![CDATA[Thoughts on setup, workflow, and giving back to Gatsby]]></description><link>https://www.gatsbyjs.org/blog/2018-04-11-trying-out-gatsby-at-work-and-co/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-11-trying-out-gatsby-at-work-and-co/</guid><dc:creator><![CDATA[Sarah Mogin]]></dc:creator><content:encoded>&lt;p&gt;As a developer, it’s always exciting to try something new. When working with a technology for the first time, I usually ask myself two questions: What can this do for me now, and what will it bring to my future projects?&lt;/p&gt;
&lt;p&gt;Most recently, I had the opportunity to lead the first Gatsby project at Work &amp;#x26; Co. &lt;a href=&quot;https://work.co&quot;&gt;Work &amp;#x26; Co&lt;/a&gt; is a digital product agency. Our goal is to design and develop engaging user experiences, ranging from websites to mobile applications to e-commerce platforms to chatbots.&lt;/p&gt;
&lt;p&gt;Our project was to build a new website for &lt;a href=&quot;https://www.whittleschool.org/en&quot;&gt;Whittle School &amp;#x26; Studios&lt;/a&gt;. Whittle is an innovative educator that will soon open campuses in the United States and China.&lt;/p&gt;
&lt;video controls=&quot;controls&quot; autoplay=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source type=&quot;video/mp4&quot; src=&quot;./whittle.mp4&quot;&gt;&lt;/source&gt;
  &lt;p&gt;Your browser does not support the video element.&lt;/p&gt;
&lt;/video&gt;
&lt;p&gt;We had a blast building the site, and learned a lot about Gatsby in the process. This post will take you through the different parts of our journey:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#choosing-a-stack&quot;&gt;Choosing a stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#creating-a-gatsby-workflow&quot;&gt;Creating a Gatsby workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#contributing-to-gatsby&quot;&gt;Contributing to Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;choosing-a-stack&quot;&gt;&lt;a href=&quot;#choosing-a-stack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing a stack&lt;/h2&gt;
&lt;h3 id=&quot;requirements&quot;&gt;&lt;a href=&quot;#requirements&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;p&gt;We started the project with two key requirements:&lt;/p&gt;
&lt;h4 id=&quot;1-cms-powered-content&quot;&gt;&lt;a href=&quot;#1-cms-powered-content&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. CMS-powered content&lt;/h4&gt;
&lt;p&gt;As a content-heavy site, the project would need a CMS. Our choice here was &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt;, a tool we’d used successfully on a few other products. We set up three Contentful spaces — for development, QA, and production/staging — with scripts to copy models and content between spaces as needed.&lt;/p&gt;
&lt;h4 id=&quot;2-static-site-generation&quot;&gt;&lt;a href=&quot;#2-static-site-generation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Static site generation&lt;/h4&gt;
&lt;p&gt;We also knew that the site would eventually need to launch in both the US and China. This came with a bunch of unknowns on the China side of things: Could we rely on the same build system and CDN for all locales, or would China require a unique setup to account for server performance discrepancies and possible API restrictions?&lt;/p&gt;
&lt;p&gt;We didn’t know, and we weren’t going to know for some time, because most of these decisions were going to be made by an external vendor. Not wanting to back ourselves into a corner, we decided to use a static site generator. No matter what devops we wound up with, we could bank on compiling static files and putting them &lt;em&gt;somewhere&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;All of this begged the question: “What’s a good static site generator that works with Contentful?”&lt;/p&gt;
&lt;h3 id=&quot;enter-gatsby&quot;&gt;&lt;a href=&quot;#enter-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enter Gatsby&lt;/h3&gt;
&lt;p&gt;I’d already heard a bit about Gatsby, and as I looked into it further, I noticed a few things that got me really excited:&lt;/p&gt;
&lt;h4 id=&quot;old-friends&quot;&gt;&lt;a href=&quot;#old-friends&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Old friends&lt;/h4&gt;
&lt;p&gt;Gatsby is built on React, something our team already knows and likes. We use React (or React Native) for most of our projects at Work &amp;#x26; Co because we love the declarative syntax, lifecycle hooks, and modular architecture. In addition to React, Gatsby is compatible with several modern CSS strategies, including our favorite: CSS Modules.&lt;/p&gt;
&lt;h4 id=&quot;prefetched-pages-️&quot;&gt;&lt;a href=&quot;#prefetched-pages-%EF%B8%8F&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prefetched pages ⚡️&lt;/h4&gt;
&lt;p&gt;When we decided to use a static site generator, we assumed we’d be building a classic &lt;em&gt;static site&lt;/em&gt;, with each route change requesting brand new HTML from the server. For a small, simple site, we thought this was good enough, but Gatsby gave us one better: pre-fetching, out of the box. This meant that our site would feel like a single page app while still benefiting from the flexibility and improved performance of a static site.&lt;/p&gt;
&lt;h4 id=&quot;contentful-support&quot;&gt;&lt;a href=&quot;#contentful-support&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contentful support&lt;/h4&gt;
&lt;p&gt;Gatsby’s &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-contentful&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;using-contentful&lt;/code&gt;&lt;/a&gt; sample project made it very easy to get started with the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-contentful&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-contentful&lt;/code&gt;&lt;/a&gt; plugin. The code demonstrated how to generate dynamic URLs and support multiple Contentful locales, which was exactly what we wanted to do!&lt;/p&gt;
&lt;h4 id=&quot;graphql&quot;&gt;&lt;a href=&quot;#graphql&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphQL&lt;/h4&gt;
&lt;p&gt;Getting to play with GraphQL was a definite plus (I’d been jealous of coworkers using it on other projects!), and the built-in GraphiQL query constructor helped us all get used to the syntax. GraphQL was a natural fit for traversing Contentful relationships, and Gatsby’s implementation allowed us take advantage of the Contentful image API to automatically crop our assets.&lt;/p&gt;
&lt;h3 id=&quot;putting-it-all-together&quot;&gt;&lt;a href=&quot;#putting-it-all-together&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Putting it all together&lt;/h3&gt;
&lt;p&gt;As I mentioned, Gatsby’s &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-contentful&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;using-contentful&lt;/code&gt;&lt;/a&gt; sample project already took us several steps in the right direction; the only outstanding question was how to support a more complex data structure.&lt;/p&gt;
&lt;p&gt;My last project involving CMS integration was &lt;a href=&quot;https://www.aldoshoes.com&quot;&gt;Aldo&lt;/a&gt;, a Work &amp;#x26; Co designed and developed e-commerce and content site that launched in 2017. Here, we used a modular CMS strategy, where CMS-driven pages were basically stacks of modules that editors could mix and match.&lt;/p&gt;
&lt;p&gt;I planned to use a similar technique for this project; we would have one core content model, a &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt;, and then other models like &lt;code class=&quot;language-text&quot;&gt;BodyText&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;SectionTitle&lt;/code&gt; that could be stacked as children. A &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt; would link to &lt;code class=&quot;language-text&quot;&gt;BodyText&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;SectionTitle&lt;/code&gt; via a &lt;code class=&quot;language-text&quot;&gt;modules&lt;/code&gt; field and have some other non-modular fields as well, like &lt;code class=&quot;language-text&quot;&gt;slug&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;headline&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here’s a &lt;code class=&quot;language-text&quot;&gt;modules&lt;/code&gt; field on a &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt; currently in use on production:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./modules.png&quot; alt=&quot;modules field&quot;&gt;&lt;/p&gt;
&lt;p&gt;Figuring out how to set this up in GraphQL took some trial and error, but we settled on using &lt;a href=&quot;http://graphql.org/learn/queries/#inline-fragments&quot;&gt;inline fragments&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The GraphQL looks like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ContentfulContentPage {
  headline
  slug
  modules {
    __typename
    ... on ContentfulBodyText {
      # fields specific to BodyText
    }
    ... on ContentfulSectionTitle {
      # fields specific to SectionTitle
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;After wiring up this new architecture, integrating new modules became a straightforward task.&lt;/p&gt;
&lt;h4 id=&quot;schema&quot;&gt;&lt;a href=&quot;#schema&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Schema&lt;/h4&gt;
&lt;p&gt;We ran into one schematic limitation working with Gatsby that’s helpful to be aware of at the onset of your project:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/graphql/graphql-js&quot;&gt;GraphQL&lt;/a&gt; requires all queried fields to be defined in a schema, and Gatsby generates this schema from your site’s existing data. This means, for example, that if you don’t have a &lt;code class=&quot;language-text&quot;&gt;Carousel&lt;/code&gt; content model on your site right now, but you have a GraphQL query checking for it, the site will fail to build.&lt;/p&gt;
&lt;p&gt;The are some really promising discussions on the topic on Github, including an &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4261&quot;&gt;RFC to refactor Gatsby’s schema generation&lt;/a&gt;, but in the meantime, most users are getting around this issue by creating placeholder content on Contentful (or whatever their data source is) to guarantee a fully built-up schema.&lt;/p&gt;
&lt;p&gt;This got the job done in our case, and we augmented the approach by creating a &lt;code class=&quot;language-text&quot;&gt;DummyContentIndex&lt;/code&gt; model on Contentful linking to all placeholder content. (In retrospect, I wish I had picked the a more PC name, like ‘PlaceholderContentIndex` 😉.) Using this approach, we could inform our Contentful scripts to make sure placeholder content was copied to the production environment during deploys, so that new models would not break the build.&lt;/p&gt;
&lt;h3 id=&quot;netlify&quot;&gt;&lt;a href=&quot;#netlify&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Netlify&lt;/h3&gt;
&lt;p&gt;While we were getting familiar with our Gatsby/Contentful setup, we also needed to figure out how to build and deploy our work. We found several articles advocating for a Gatsby-Contentful-&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; stack, and learned it could support a workflow like this one:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./netlify.png&quot; alt=&quot;our Netlify setup&quot;&gt;&lt;/p&gt;
&lt;p&gt;Unlike a single page app, which would fetch data from Contentful on the fly, our static site must rebuild anytime an editor publishes new or updated content. At the same time, we need to rebuild whenever code is updated on Github. With Netlify (and Contentful’s webhooks), I was able to set all of this up in about five minutes.&lt;/p&gt;
&lt;p&gt;Although our China setup was still a bit of a mystery, we moved forward with dev, QA, and staging environments on Netlify, and wound up using it for US production as well.&lt;/p&gt;
&lt;p&gt;Netlify exceeded our expectations; it solved our immediate workflow needs, and also automatically created builds for all remote branches and PRs. This is especially helpful at a company like ours where we often want to share WIP links with our design team to get feedback on our implementation.&lt;/p&gt;
&lt;p&gt;Gatsby’s &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-netlify&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-netlify&lt;/code&gt;&lt;/a&gt; also helped us out here with its &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-netlify#redirects&quot;&gt;redirect support&lt;/a&gt;; any redirects we wrote using Gatsby’s &lt;code class=&quot;language-text&quot;&gt;createRedirect&lt;/code&gt; action were automatically deployed to Netlify’s &lt;code class=&quot;language-text&quot;&gt;_redirects&lt;/code&gt; file so they would function the same way during local development as they did on Netlify.&lt;/p&gt;
&lt;h2 id=&quot;creating-a-gatsby-workflow&quot;&gt;&lt;a href=&quot;#creating-a-gatsby-workflow&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a Gatsby workflow&lt;/h2&gt;
&lt;h3 id=&quot;dev-pages&quot;&gt;&lt;a href=&quot;#dev-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dev pages&lt;/h3&gt;
&lt;p&gt;Building off of Gatsby’s Contentful example, we were able to easily support dynamic urls and one level of nesting, so a page with the slug &lt;code class=&quot;language-text&quot;&gt;my-page&lt;/code&gt; whose parent had the slug &lt;code class=&quot;language-text&quot;&gt;my-parent&lt;/code&gt; could have the path &lt;code class=&quot;language-text&quot;&gt;/my-parent/my-page&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This worked so well that at first I was sure we wouldn’t even need to create any pages with static urls, but these wound up coming in handy for development and testing. We settled on a structure like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;|-pages/
  |-dev/
    |-article-components.js
    |-home-components.js
    |-validator.js&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We used our static pages for three purposes:&lt;/p&gt;
&lt;h4 id=&quot;1-pre-integration-qa&quot;&gt;&lt;a href=&quot;#1-pre-integration-qa&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Pre-integration QA&lt;/h4&gt;
&lt;p&gt;We dropped our stateless components into paths like &lt;code class=&quot;language-text&quot;&gt;/dev/article-components&lt;/code&gt; so our QA team could make a first pass on our UI implementation. Later, other team members would integrate these components into Contentful, where they could be tested against real data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./validator.png&quot; alt=&quot;our content validator&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-contentful-validation&quot;&gt;&lt;a href=&quot;#2-contentful-validation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Contentful validation&lt;/h4&gt;
&lt;p&gt;Contentful’s built-in validations could only take us so far, and sometimes we needed to enforce rules (or give recommendations) outside the scope of what Contentful could do. For example, when stacking modules on a page, we consider it a minor validation error for the page to end in a carousel (they look kind of lonely).&lt;/p&gt;
&lt;p&gt;To enforce such validations, we set up a static validator page that runs a report on all of our Contentful articles.&lt;/p&gt;
&lt;h4 id=&quot;3-communicating-site-status&quot;&gt;&lt;a href=&quot;#3-communicating-site-status&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Communicating site status&lt;/h4&gt;
&lt;p&gt;That same validation page also served as a site status page, containing the time and Github hash of the last build. The build time was particularly important. Since builds happen quite frequently (whenever content is updated), it’s helpful for the team to be able to easily see the time of the last build for a given environment. (We also had Netlify integrated to Slack, but this contained notifications about every branch and was a bit noisy for a less tech-savvy audience.)&lt;/p&gt;
&lt;p&gt;Capturing this information was easy and only took a few additional lines in our &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; hook. Netlify exposes a lot of interesting &lt;a href=&quot;https://www.netlify.com/docs/continuous-deployment/#build-environment-variables&quot;&gt;environment variables&lt;/a&gt; (including some I hope to play with more on a future project, like &lt;code class=&quot;language-text&quot;&gt;WEBHOOK_TITLE&lt;/code&gt;, which can help you deduce the origin of the current build). In order to display these variables on the front end, we needed to rename them to begin with &lt;code class=&quot;language-text&quot;&gt;GATSBY_&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;exports.createPages = () =&amp;gt; {
  [&amp;#39;COMMIT_REF&amp;#39;, ‘BRANCH’]].forEach((variableName) =&amp;gt; {
    // only variables beginning with GATSBY_ are available client-side
    process.env[`GATSBY_${variableName}`] = process.env[variableName];
  });
};&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;After that, we just added one more variable to store the current time:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;process.env.GATSBY_BUILD_TIME = Date.now();&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;covering-our-tracks&quot;&gt;&lt;a href=&quot;#covering-our-tracks&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Covering our tracks&lt;/h4&gt;
&lt;p&gt;We filtered out our dev pages in production by adding a simple &lt;code class=&quot;language-text&quot;&gt;onCreatePage&lt;/code&gt; hook to our &lt;code class=&quot;language-text&quot;&gt;gatsby-node&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;exports.onCreatePage = ({ page, boundActionCreators }) =&amp;gt; {
  if (process.env.GATSBY_ENV === ENV.PRODUCTION) {
    const { deletePage } = boundActionCreators;
    if (/^\/dev\//.test(page.path)) deletePage(page);
  }
};&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;staging&quot;&gt;&lt;a href=&quot;#staging&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Staging&lt;/h3&gt;
&lt;p&gt;A lot of our modules include many different properties coming together to form an intricate design, so it’s important to offer editors a chance to preview their changes before they’re published on production.&lt;/p&gt;
&lt;h4 id=&quot;contentful-preview-api&quot;&gt;&lt;a href=&quot;#contentful-preview-api&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contentful Preview API&lt;/h4&gt;
&lt;p&gt;We use Contentful’s Preview API, which &lt;code class=&quot;language-text&quot;&gt;gatsby-source-contentful&lt;/code&gt; &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-contentful#using-preview-api&quot;&gt;supports&lt;/a&gt;, for this purpose. To set this up, we also needed to add a new webhook just for our &lt;code class=&quot;language-text&quot;&gt;staging&lt;/code&gt; branch on Netlify and wire this up on Contentful.&lt;/p&gt;
&lt;h4 id=&quot;generating-preview-links&quot;&gt;&lt;a href=&quot;#generating-preview-links&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating preview links&lt;/h4&gt;
&lt;p&gt;Contentful’s &lt;a href=&quot;https://www.contentful.com/r/knowledgebase/setup-content-preview/&quot;&gt;Content Preview&lt;/a&gt; feature allows developers to expose preview links in the sidebar, so editors can easily move between editing an entry and previewing its content on a staging environment.&lt;/p&gt;
&lt;p&gt;Here’s how preview links look in action:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./preview-links.png&quot; alt=&quot;preview links in the Contentful sidebar&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Content Preview dashboard lets developers create these links and determine where each of them will lead.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./content-preview-dashboard.png&quot; alt=&quot;Contentful&amp;#x27;s Content Preview dashboard&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here, we’re configuring Contentful to expose a preview link for every &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt; containing its Contentful ID in the path, so an entry with the ID &lt;code class=&quot;language-text&quot;&gt;123&lt;/code&gt; would have the URL &lt;code class=&quot;language-text&quot;&gt;mystagingurl.com/en/123&lt;/code&gt;. To support Chinese, we wired up an additional preview link in the format &lt;code class=&quot;language-text&quot;&gt;mystagingurl.com/cn/123&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Contentful lets you generate preview links for as many model types as you like, but in our case, we only needed to generate preview URLs for our &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt; model. Since all other models are displayed inside of &lt;code class=&quot;language-text&quot;&gt;ContentPage&lt;/code&gt;s, we determined that viewing a &lt;code class=&quot;language-text&quot;&gt;BodyText&lt;/code&gt; module all on its own would have no value.&lt;/p&gt;
&lt;h4 id=&quot;building-staging-urls&quot;&gt;&lt;a href=&quot;#building-staging-urls&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building staging URLs&lt;/h4&gt;
&lt;p&gt;Backing up a second, let’s review why we selected the preview URLs &lt;code class=&quot;language-text&quot;&gt;mystagingurl.com/en/123&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;mystagingurl.com/cn/123&lt;/code&gt;. Our staging environment — like all of our environments — already has all of the pages deployed at their actual paths (eg &lt;code class=&quot;language-text&quot;&gt;/en/my-parent/my-parent&lt;/code&gt;), so why can’t we just point editors there?&lt;/p&gt;
&lt;p&gt;Here’s why: Contentful’s Content Preview dashboard doesn’t give you that kind of flexibility. To get around this, we opted to build special paths just for the staging environment. Here’s how we set it up in &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// Always create a page at the regular path
createPage({
  component: contentPageTemplate,
  context,
  path: `${language}/${slugs.join(&amp;#39;/&amp;#39;)}/`,
});

// On staging, recreate the page with a path corresponding to its ID
if (process.env.GATSBY_ENV === ENV.STAGING) {
  createPage({
    component: contentPageTemplate,
    context,
    path: `${language}/${id}/`,
  });
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;build-times&quot;&gt;&lt;a href=&quot;#build-times&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build times&lt;/h4&gt;
&lt;p&gt;So now, we have Contentful’s preview links wired up to display the current entry in the staging environment, with data provided by the preview API. This is great, except that if an editor makes a change and immediately clicks on “Open preview” on Contentful, they’ll see old data — our static site is still building!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./staging-environment.png&quot; alt=&quot;Our staging environment&quot;&gt;&lt;/p&gt;
&lt;p&gt;To solve this, we added a small overlay to all staging environment pages including the time of the last build, plus some code to automatically refresh the page every 30 seconds. When the page refreshes to reveal an updated build time, editors can click “Stop polling” to disable this functionality, and “Hide” to minimize the overlay.&lt;/p&gt;
&lt;h4 id=&quot;final-thoughts&quot;&gt;&lt;a href=&quot;#final-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final thoughts&lt;/h4&gt;
&lt;p&gt;Our staging setup wasn’t perfect: Contentful’s Preview API felt a little clunky, and its “Discard Changes” button didn’t always work, with the “pending changes” status sometimes persisting… forever.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./contentful-pending-changes.gif&quot; alt=&quot;Contentful pending changes not disappearing&quot;&gt;&lt;/p&gt;
&lt;p&gt;For editors, it wasn’t always clear what was live and what wasn’t. On future projects, I hope to experiment with a similar approach using separate Contentful spaces, like we had for our dev and QA environments.&lt;/p&gt;
&lt;h2 id=&quot;contributing-to-gatsby&quot;&gt;&lt;a href=&quot;#contributing-to-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Gatsby&lt;/h2&gt;
&lt;p&gt;Going into this project, I had one open source contribution to my name: an update to &lt;a href=&quot;https://github.com/teampoltergeist/poltergeist&quot;&gt;poltergeist&lt;/a&gt;’s key modifiers circa 2015. Sure, I felt a little guilty for using so many open source libraries without giving back to the community, but I also worried I didn’t have the time or — more importantly — the confidence to get more involved.&lt;/p&gt;
&lt;p&gt;Something clicked with Gatsby, though; it was young enough that I could see concrete areas for improvement, but established enough to have the tools and structure in place to facilitate contributions. Kyle and the rest of the community were also great resources, providing quick feedback and helpful ideas for improvements.&lt;/p&gt;
&lt;h3 id=&quot;starting-small&quot;&gt;&lt;a href=&quot;#starting-small&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting small&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;./worlds-smallest-pr.png&quot; alt=&quot;A very small pull request&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you’re nervous about contributing to a library, do what I did: make a really small change, and write a really long explanation about it :). &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/2917&quot;&gt;My first Gatsby PR&lt;/a&gt; removed three lines of code that I determined were overriding Contentful’s default image cropping. It was a low-pressure change that nevertheless helped me feel like part of the community.&lt;/p&gt;
&lt;h3 id=&quot;reading-the-documentation&quot;&gt;&lt;a href=&quot;#reading-the-documentation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reading the documentation&lt;/h3&gt;
&lt;p&gt;We developers often take pride in how far we’re able to get &lt;em&gt;without&lt;/em&gt; reading the documentation — at least I know I do — but, as I came to make subsequent PRs to Gatsby, I found the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/CONTRIBUTING.md&quot;&gt;contributor guidelines&lt;/a&gt; to be incredibly helpful.&lt;/p&gt;
&lt;p&gt;In particular, the documentation will show you how to use your local Gatsby clone and &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-dev-cli&quot;&gt;gatsby-dev-cli&lt;/a&gt; to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Watch for your local changes to Gatsby packages&lt;/li&gt;
&lt;li&gt;Recompile packages on-the-fly&lt;/li&gt;
&lt;li&gt;Copy these packages into your project’s &lt;code class=&quot;language-text&quot;&gt;node_modules&lt;/code&gt; folder to test as you go&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you’ve ever used &lt;code class=&quot;language-text&quot;&gt;yarn link&lt;/code&gt; to modify a dependency locally, this provides a similar experience.&lt;/p&gt;
&lt;h3 id=&quot;branching-off&quot;&gt;&lt;a href=&quot;#branching-off&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branching off&lt;/h3&gt;
&lt;p&gt;As I said, I was impressed by the Gatsby team’s quick turnaround time with PR approvals, but even so, when doing client work on a tight deadline, it can be stressful waiting for your changes to be merged. For ultimate peace of mind, you should be able to move forward using your forked work even if — in the worst case scenario — your PR is never approved.&lt;/p&gt;
&lt;p&gt;Of course, this is something developers do all the time. They push their fork to git and link to it in their project’s &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;“dependencies”: {
  &amp;quot;some-library&amp;quot;: &amp;quot;git+ssh://git@github.com:workco/some-library.git#cool-feature&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Gatsby, however, uses a monorepo architecture, so pushing up a fork with a change to a specific package is not such a trivial manner; npm and yarn just don’t support it. (If you feel like being depressed, check out the npm thread about &lt;a href=&quot;https://github.com/npm/npm/issues/2974&quot;&gt;supporting github paths to monorepo packages&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Our workaround was to create a new repo for the package in question and push the build directly to Github. Here’s how it would work if you were making an update to, say, &lt;code class=&quot;language-text&quot;&gt;gatsby-source-contentful&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to your local fork of Gatsby, on the branch with your changes, and run &lt;code class=&quot;language-text&quot;&gt;yarn watch&lt;/code&gt; to compile a built version of your modified package.&lt;/li&gt;
&lt;li&gt;Copy that package to a new directory &lt;code class=&quot;language-text&quot;&gt;cp -a packages/gatsby-source-contentful path-to-my-repo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Push the contents of this directory to Github and link it in your &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; as usual.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;following-up&quot;&gt;&lt;a href=&quot;#following-up&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Following up&lt;/h2&gt;
&lt;p&gt;Overall, our work with Gatsby was an exciting venture into a young, promising library, and I look forward to using it again on future Work &amp;#x26; Co projects. I’m by no means an expert on Gatsby, Contentful, or Netlify — my goal is to share experiences others could draw insights from — so if you have any feedback or questions related to our approach, I’d love to hear from you &lt;a href=&quot;mailto:mogin@work.co&quot;&gt;by email&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to handle comments in Gatsby blogs]]></title><description><![CDATA[tl;dr Hosted services like disqus are the easiest. Staticman is the best option, but requires some setup. You have a static site. Or you…]]></description><link>https://www.gatsbyjs.org/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/</guid><dc:creator><![CDATA[Gatsby Central]]></dc:creator><content:encoded>&lt;blockquote&gt;
&lt;p&gt;tl;dr Hosted services like disqus are the easiest. Staticman is the best option, but requires some setup.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You have a static site. Or you will have. You understand how the content will work. But what about comments?&lt;/p&gt;
&lt;p&gt;You have three choices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep comments in git.&lt;/li&gt;
&lt;li&gt;Use client side comment service.&lt;/li&gt;
&lt;li&gt;Do something crazy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;client-side&quot;&gt;&lt;a href=&quot;#client-side&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client side&lt;/h2&gt;
&lt;p&gt;The second is the simplest choice. &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; is a popular client side comment service. They offer a free tier for non-commercial sites. Or plans start from $10/month.&lt;/p&gt;
&lt;p&gt;There are also open source alternatives like &lt;a href=&quot;https://github.com/adtac/commento&quot;&gt;commento&lt;/a&gt;. You need to install them. You need to manage and maintain a server. This is probably too much work to be worthwhile.&lt;/p&gt;
&lt;p&gt;How do they work? You insert a javascript tag. That loads the comment service. It inserts the comments &lt;strong&gt;client side&lt;/strong&gt;. This means your comments are not part of your Gatsby output. This means Google probably won’t see them.&lt;/p&gt;
&lt;h2 id=&quot;comments-in-git&quot;&gt;&lt;a href=&quot;#comments-in-git&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Comments in git&lt;/h2&gt;
&lt;p&gt;Putting the comments inside git is awesome. Your content, your site, no external dependencies. Fantastic.&lt;/p&gt;
&lt;h3 id=&quot;staticman&quot;&gt;&lt;a href=&quot;#staticman&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Staticman&lt;/h3&gt;
&lt;p&gt;But how do you get them there? Enter &lt;a href=&quot;https://staticman.net/&quot;&gt;staticman&lt;/a&gt;. You give staticman access to your GitHub repo. You create a form. Staticman creates a pull request. It also supports akismet spam filtering. Genius. Oh, and it’s free. Yes, doubly fantastic.&lt;/p&gt;
&lt;p&gt;Staticman is open source. You can run your own instance. If you really want to. It’s probably not worth it. Their service is free. They don’t “own” your data. If they disappear, your comments live on.&lt;/p&gt;
&lt;h3 id=&quot;roll-your-own&quot;&gt;&lt;a href=&quot;#roll-your-own&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Roll your own&lt;/h3&gt;
&lt;p&gt;You could create your own staticman alternative. You could use a framework like &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless&lt;/a&gt;. You can find free hosts for serverless. You can write your own custom anti spam logic. This will be hard. It will probably be fun. It’s not a very good idea!&lt;/p&gt;
&lt;h3 id=&quot;netlify&quot;&gt;&lt;a href=&quot;#netlify&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Netlify&lt;/h3&gt;
&lt;p&gt;Are you hosting on &lt;a href=&quot;https://serverless.com/&quot;&gt;netlify&lt;/a&gt;? Then you could use their forms service. If you pay for netlify, you can link forms to functions. Similar to serverless. You could use that to make PRs. Or push content to GitHub. Or other git hosts. Too complicated. Not worth it.&lt;/p&gt;
&lt;h3 id=&quot;email&quot;&gt;&lt;a href=&quot;#email&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Email&lt;/h3&gt;
&lt;p&gt;You could link your comment form to an email address. Then you could copy and paste comments into git. Manual comment moderation. Maybe with netlify’s form service? Or a serverless setup. Again, this could be fun to setup. Again, it’s probably not a very good idea!&lt;/p&gt;
&lt;h2 id=&quot;crazy&quot;&gt;&lt;a href=&quot;#crazy&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Crazy&lt;/h2&gt;
&lt;p&gt;There are many other options. Some crazier than others. You could push comments to WordPress. Then pull them from WordPress into Gatsby at build time. Or push them to a headless CMS. Via a serverless setup maybe.&lt;/p&gt;
&lt;p&gt;You could create a comment form. Then have it generate a mailto link. Then people email you the comment. Then you copy and paste it into git. Or the mailto link points to a service like mailgun. Then incoming emails turn into webhooks. Then forward to serverless. Then land as pull requests.&lt;/p&gt;
&lt;p&gt;The possibilities are limitless.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Use &lt;a href=&quot;https://staticman.net/&quot;&gt;staticman&lt;/a&gt;. It’s the best all round option. Keep control of your content. If their service goes down, you keep your comments. You can run your own instance later if necessary. It includes support for akismet spam filtering.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To see staticman in action, leave a comment at &lt;a href=&quot;https://www.gatsbycentral.com&quot;&gt;Gatsby Central&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Introducing the Gatsby RFC Process]]></title><description><![CDATA[We’re adopting an RFC (“request for comments”) process for contributing ideas to Gatsby. Inspired by  React ,  Yarn ,  Ember , and  Rust…]]></description><link>https://www.gatsbyjs.org/blog/2018-04-06-introducing-gatsby-rfc-process/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-06-introducing-gatsby-rfc-process/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;We’re adopting an RFC (“request for comments”) process for contributing ideas to Gatsby.&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&quot;https://github.com/reactjs/rfcs&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;https://github.com/yarnpkg/rfcs&quot;&gt;Yarn&lt;/a&gt;, &lt;a href=&quot;https://github.com/emberjs/rfcs&quot;&gt;Ember&lt;/a&gt;, and &lt;a href=&quot;https://github.com/rust-lang/rfcs&quot;&gt;Rust&lt;/a&gt;, the goal is to allow Gatsby core team members and community members to collaborate on the design of new features. It’s also intended to provide a clear path for ideas to enter the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an RFC document detailing your proposal.&lt;/li&gt;
&lt;li&gt;Submit a PR to the &lt;a href=&quot;https://github.com/gatsbyjs/rfcs&quot;&gt;RFC repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Incorporate feedback into the proposal.&lt;/li&gt;
&lt;li&gt;After discussion, the core team may or may not accept the RFC.&lt;/li&gt;
&lt;li&gt;If the RFC is accepted, the PR is merged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RFCs are accepted when they are approved for implementation in Gatsby. A more thorough description of the process is available in the repository’s &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/blob/master/README.md&quot;&gt;README&lt;/a&gt;. The exact details may be refined in the future.&lt;/p&gt;
&lt;h2 id=&quot;who-can-submit-rfcs&quot;&gt;&lt;a href=&quot;#who-can-submit-rfcs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who Can Submit RFCs?&lt;/h2&gt;
&lt;p&gt;Anyone! No knowledge of Gatsby’s internals is required, nor are you expected to implement the proposal yourself.&lt;/p&gt;
&lt;h2 id=&quot;what-types-of-changes-should-be-submitted-as-rfcs&quot;&gt;&lt;a href=&quot;#what-types-of-changes-should-be-submitted-as-rfcs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Types of Changes Should Be Submitted As RFCs?&lt;/h2&gt;
&lt;p&gt;Generally, any idea that would benefit from additional review or design before being implemented is a good candidate for an RFC. As a rule of thumb, this means any proposal that adds, changes, or removes a Gatsby API.&lt;/p&gt;
&lt;p&gt;Not every change must go through the RFC process. Bug fixes or performance improvements that don’t touch the API can be submitted directly to the main library.&lt;/p&gt;
&lt;h2 id=&quot;rfcs-for-a-new-github-labeling-system-and-to-remove-our-special-layout-component&quot;&gt;&lt;a href=&quot;#rfcs-for-a-new-github-labeling-system-and-to-remove-our-special-layout-component&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RFCs for a new GitHub labeling system and to remove our special layout component&lt;/h2&gt;
&lt;p&gt;Coinciding with the launch of our RFC process, we’ve submitted a &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/pull/1&quot;&gt;proposal for a new GitHub labeling system&lt;/a&gt; and a &lt;a href=&quot;https://github.com/gatsbyjs/rfcs/pull/2&quot;&gt;proposal to remove our special layout component&lt;/a&gt;. Both proposals have already received many valuable comments from the community that we’re incorporating into the design of the new process and API.&lt;/p&gt;
&lt;p&gt;Both PRs are good examples of how a typical RFC should be structured. We’re excited to start receiving your proposals!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby video tutorials a four part video series on Gatsby and Contentful by Khaled Garbaya]]></title><description><![CDATA[Video Tutorials for using Gatsby and Contentful]]></description><link>https://www.gatsbyjs.org/blog/2018-04-05-gatsby-video-tutorials/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-05-gatsby-video-tutorials/</guid><dc:creator><![CDATA[Carolyn Stransky]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This blog post was originally posted on the &lt;a href=&quot;https://www.contentful.com/blog/2018/02/28/contentful-gatsby-video-tutorials/&quot;&gt;Contentful Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Contentful developer and Gatsby contributor Khaled Garbaya has released a &lt;a href=&quot;https://www.youtube.com/watch?v=Ek4o40w1tH4&amp;#x26;list=PL8KiuH6vpACV-F7jXribe4YveGBhBeG9A&quot;&gt;4-part video series&lt;/a&gt; to help you build a “blazing fast” website with Gatsby and Contentful. The series begins by transforming the Gatsby’s getting started example to a Contentful-powered site. From there, each video walks you through a new aspect of production, from automating deployment with CircleCI to integrating the Contentful webhooks feature.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;-“I wanted these videos to act as documentation,”&lt;/em&gt; says Khaled. &lt;em&gt;-“There were a lot of people asking around about how to do this. And I think it’s important to show not only how to do this thing with Gatsby or how to do that with Contentful, but from start to finish how you can actually deploy, use webhooks, and so on. These are hidden gems that not everyone will look for.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Those hidden gems Khaled is talking about are part of what he believes makes Gatsby and Contentful a compelling combination. Additionally, there are structural aspects of both platforms that add to this: &lt;em&gt;-“Gatsby works with React and React is component-based. And you can also think of Contentful in this way, if you think of your content as components”&lt;/em&gt; he explains. &lt;em&gt;-“So that’s made a really perfect match because you can have this component that renders a specific content type and then this can be shared across your website.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Another unique distinction is the complementary ways Contentful and Gatsby process data. &lt;em&gt;-“Contentful has the sync endpoint, so this can actually improve the ability to process a lot,”&lt;/em&gt; Khaled says. &lt;em&gt;-“Because the first time, you get all of the data. The next time, you only get the entries that changed so it takes less time to parse the JSON and so on. Also Gatsby is good because all of the data you have from Contentful would be in a GraphQL schema, so you can query your data that way.”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ready to dive in? &lt;a href=&quot;https://www.youtube.com/watch?v=Ek4o40w1tH4&amp;#x26;list=PL8KiuH6vpACV-F7jXribe4YveGBhBeG9A&quot;&gt;All four parts of Khaled’s video series are now available on YouTube&lt;/a&gt;. You can also &lt;a href=&quot;https://github.com/Khaledgarbaya/gatsby-contentful-site&quot;&gt;find the source code on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;
          &lt;div
            class=&quot;gatsby-resp-iframe-wrapper&quot;
            style=&quot;padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.05rem&quot;
          &gt;
            &lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PL8KiuH6vpACV-F7jXribe4YveGBhBeG9A&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen style=&quot;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
          &quot;&gt;&lt;/iframe&gt;
          &lt;/div&gt;
          &lt;/div&gt;
&lt;p&gt;Additionally, for a great Contentful + Gatsby blog starter, you can clone the &lt;a href=&quot;https://github.com/contentful-userland/gatsby-contentful-starter&quot;&gt;gatsby-contentful-starter&lt;/a&gt; repo and be up and running in no time.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby + Contentful Starter to Get a Website Up and Running in 5 Minutes]]></title><description><![CDATA[A five minute starter for Gatsby and Contentful]]></description><link>https://www.gatsbyjs.org/blog/2018-04-04-gatsby-contentful-starter-tutorial/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-04-04-gatsby-contentful-starter-tutorial/</guid><dc:creator><![CDATA[Robert Svensson]]></dc:creator><content:encoded>&lt;p&gt;&lt;img src=&quot;gatsby_contentful.png&quot; alt=&quot;Gatsby+Contentful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This blog post was originally posted on the &lt;a href=&quot;https://www.contentful.com/r/knowledgebase/gatsbyjs-and-contentful-in-five-minutes/&quot;&gt;Contentful Docs&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Working with React and having an emphasis on speedy performance, GatsbyJS is a promising static site generator that allows you to connect your projects to a variety of APIs and data sources; including Contentful’s content infrastructure.&lt;/p&gt;
&lt;p&gt;This piece will walk you through getting your GatsbyJS website up and running with Contentful. Contentful makes it easy for you to focus on developing beautiful, well-performing websites while we deliver the content - this makes us a great companion to the full-fledged static content authoring experience offered by GatsbyJS.&lt;/p&gt;
&lt;p&gt;Here’s an overview of what’s involved:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a free Contentful account&lt;/li&gt;
&lt;li&gt;Clone a sample repo&lt;/li&gt;
&lt;li&gt;Create a space on Contentful to store content&lt;/li&gt;
&lt;li&gt;Generate your Content Management and Content Delivery API access tokens&lt;/li&gt;
&lt;li&gt;Import data into your space&lt;/li&gt;
&lt;li&gt;Tweak your configuration file&lt;/li&gt;
&lt;li&gt;Preview a production build&lt;/li&gt;
&lt;li&gt;Publish and go live&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;getting-started&quot;&gt;&lt;a href=&quot;#getting-started&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;This guide assumes that you have &lt;a href=&quot;/docs/&quot;&gt;GatsbyJS installed&lt;/a&gt; and, optionally, a &lt;a href=&quot;https://github.com/join&quot;&gt;Github account&lt;/a&gt;. You will also need a free Contentful account - &lt;a href=&quot;https://www.contentful.com/sign-up/&quot;&gt;creating one&lt;/a&gt; only takes a moment.&lt;/p&gt;
&lt;p&gt;Start by using this with the Gatsby CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gatsby new contentful-starter https://github.com/contentful-userland/gatsby-contentful-starter&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Alternatively, you can also clone a sample repo from Github:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone git@github.com:contentful-userland/gatsby-contentful-starter.git&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;And go into the directory and install the required dependencies with:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;create-a-new-space-to-store-content&quot;&gt;&lt;a href=&quot;#create-a-new-space-to-store-content&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create a new space to store content&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.contentful.com/r/knowledgebase/spaces-and-organizations/&quot;&gt;A Space within Contentful&lt;/a&gt; serves as a storage area for content that will be used in your website and can be configured to serve specific purposes. Content is described and stored using a data model which we call content types; these are entirely configurable.&lt;/p&gt;
&lt;p&gt;Create a new empty space by opening the sidebar menu and adding a Space. Give the space an apt name and click “Create” to go ahead with making it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;new_space.png&quot; alt=&quot;create a new space&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;generate-access-tokens&quot;&gt;&lt;a href=&quot;#generate-access-tokens&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate access tokens&lt;/h3&gt;
&lt;p&gt;Before getting to the exciting part of setting up your website, you first need to generate three access tokens to get your Contentful-powered website up and running by fetching data from the API.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/developers/docs/references/content-management-api/&quot;&gt;Content Management API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/developers/docs/references/content-delivery-api/&quot;&gt;Content Delivery API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/developers/docs/references/content-preview-api/&quot;&gt;Content Preview API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Head over to your Space Settings dropdown menu and navigate to the APIs section. From there, navigate to the tab for the API token you would like to generate.&lt;/p&gt;
&lt;p&gt;The Content Management API is used for write access to your space, so keep the generated token safe and private. Hit “Generate Personal Token”, give it a name and click “Generate”. Copy the token value and keep it safe and private - this is the only time you’ll be able to view it in your dashboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;access_token.png&quot; alt=&quot;Generating a personal access token&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Content Delivery API provides read-only access to your data and is one of the ways we deliver content to your website. Content is served via our Content Delivery Network (CDN). Click “Add API key” in the Content Delivery/Preview tab area. Grab the Space ID and personal Content Delivery API access token - you’ll need this in a bit.&lt;/p&gt;
&lt;p&gt;The Content Preview API works much like the Content Delivery API, except it shows content internally for you to preview and hence does not use the CDN to serve content; since viewing is only limited to you, the previewing user. Creating an API key is the same here as you did with Content Delivery.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;api_key.png&quot; alt=&quot;Creating a new API key&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;content-model-and-configuration&quot;&gt;&lt;a href=&quot;#content-model-and-configuration&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content model and configuration&lt;/h3&gt;
&lt;p&gt;Start setting things up with the npm run setup command, which first prompts you for the ID of the empty Space you just created along with the API access tokens for Content Management, Content Delivery, and Content Preview.&lt;/p&gt;
&lt;p&gt;After that, it writes the credentials you provided into a file named .contentful.json into lines of code that look like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;
      &lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;development&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;preview.contentful.com&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;spaceId&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;accessToken&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;...&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;production&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;spaceId&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;accessToken&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;...&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Using the credentials in the .contentful.json file, &lt;a href=&quot;https://www.contentful.com/developers/docs/tutorials/general/import-and-export/&quot;&gt;content can now be imported&lt;/a&gt; into your space to being displayed on your website via our API.&lt;/p&gt;
&lt;h3 id=&quot;its-ready-lets-publish&quot;&gt;&lt;a href=&quot;#its-ready-lets-publish&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It’s ready, let’s publish&lt;/h3&gt;
&lt;p&gt;Time to check out your new website - preview changes in a local environment by running your project using the npm run dev command. This uses the &lt;a href=&quot;https://www.contentful.com/developers/docs/references/content-preview-api/&quot;&gt;Contentful Preview API&lt;/a&gt; to show unpublished content as if they were already published - perfect for a development or staging environment.&lt;/p&gt;
&lt;p&gt;If you like what you see, use the npm run build command to start a static production build of your near-ready website and put it on a static host of your choice. After that, the npm run deploy command allows you to publish what you have on the production build onto GitHub pages.&lt;/p&gt;
&lt;h3 id=&quot;deployment&quot;&gt;&lt;a href=&quot;#deployment&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h3&gt;
&lt;p&gt;Your static files can then be deployed on a variety of platforms of your choice, like &lt;a href=&quot;https://www.bitballoon.com/&quot;&gt;BitBalloon&lt;/a&gt; and &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;. Take your pick. Contentful gives you infrastructure for the content in your stack, that matches your modular and agile way of working with platform independence and by serving as a layer in your stack.&lt;/p&gt;
&lt;p&gt;Contentful ensures your website and its users can access your content quickly and reliably. Your content is just an API call away.&lt;/p&gt;
&lt;h3 id=&quot;summary&quot;&gt;&lt;a href=&quot;#summary&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h3&gt;
&lt;h3 id=&quot;summary-1&quot;&gt;&lt;a href=&quot;#summary-1&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h3&gt;
&lt;p&gt;That’s a quick overview of how to get your website up and running from scratch using Contentful and GatsbyJS.&lt;/p&gt;
&lt;p&gt;Contentful’s platform offers speed, flexibility, and ease of integration with your code, supporting any stack you use with SDKs for common languages like &lt;a href=&quot;https://www.contentful.com/developers/docs/javascript/sdks/&quot;&gt;JavaScript&lt;/a&gt;, &lt;a href=&quot;https://www.contentful.com/developers/docs/python/sdks/&quot;&gt;Python&lt;/a&gt;, and &lt;a href=&quot;https://www.contentful.com/developers/docs/php/sdks/&quot;&gt;PHP&lt;/a&gt;. Unlike a CMS, Contentful provides you with separation between content and presentation, allowing you to focus on developing your website and leave content delivery to Contentful.&lt;/p&gt;
&lt;p&gt;If you’re curious to learn more about Contentful, you can check out the Contentful &lt;a href=&quot;https://www.contentful.com/developers/docs/&quot;&gt;Developer Center&lt;/a&gt; to learn more on how the technology works, or head over to the &lt;a href=&quot;https://www.contentful.com/guides/&quot;&gt;Guides and tutorials&lt;/a&gt; section.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Migration to GatsbyJS and JAM stack from WordPress]]></title><description><![CDATA[How and Why I migrated from WordPress to static JAM Stack site built with Gatsby JS.]]></description><link>https://www.gatsbyjs.org/blog/2018-03-29-migration-from-wordpress-to-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-03-29-migration-from-wordpress-to-gatsby/</guid><dc:creator><![CDATA[Vojtech Ruzicka]]></dc:creator><content:encoded>&lt;p&gt;&lt;img src=&quot;./jam.jpg&quot; alt=&quot;jam&quot;&gt;&lt;/p&gt;
&lt;p&gt;How and Why I migrated from WordPress to static JAM Stack site built with Gatsby JS.&lt;/p&gt;
&lt;h2 id=&quot;before&quot;&gt;&lt;a href=&quot;#before&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before&lt;/h2&gt;
&lt;p&gt;When I started my blog back in 2016, I wanted to focus as much as possible on creating content rather than
creating the blog infrastructure. Of course there the siren’s call to build everything from scratch or spend weeks
researching all the possible platforms — which would, no doubt, be a lot of fun — but I resisted as I wanted to start writing as soon as possible.
I had wanted to start my blog for a few years already so I wanted to reduce the barrier of entry as much as possible.
I knew the most critical part is to build a habit of writing regularly and then I can polish my blog tech stack later.&lt;/p&gt;
&lt;p&gt;So WordPress was the obvious choice for me because it is widespread, with a lot of resources and plugins available. And it worked well. More or less. There were issues though. Most notable one was performance. WordPress is sluggish. Especially once you add some plugins.
The results of a &lt;a href=&quot;https://www.vojtechruzicka.com/chrome-audit-lighthouse/&quot;&gt;Lighthouse audit&lt;/a&gt; were disappointing:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./chrome-audit-score-before.jpg&quot; alt=&quot;lighthouse audit before&quot;&gt;&lt;/p&gt;
&lt;p&gt;Especially the performance. With such long page load times, many users just leave before the page fully loads. Especially when on mobile and low-quality connections. Another issue is security. With a significant part of web powered by WordPress, it is a target of automated attacks all the time. That means constant fear of losing your precious blog. And it’s internal database storing all the content was pretty much a black box for me. And of course, there’s cost involved. As I didn’t want to manage my installation, keep it updated and in good shape, I paid for hosted solution. Last but not least, Wordpress is built with PHP, which I am not familiar with and it is something I am not eager to learn. That means that any customizations or tweaks are out of the question for me.&lt;/p&gt;
&lt;p&gt;Long story short, I decided to get rid of WordPress and replace it with a much more lightweight solution. There was a brief moment where I considered using Medium instead, but I decided I value control of my own content more. After listening to a very inspiring lightning talk by &lt;a href=&quot;https://twitter.com/abtris/&quot;&gt;Ladislav Prskavec&lt;/a&gt; about JAM Stack, I decided its time to give it a try.&lt;/p&gt;
&lt;h2 id=&quot;jam-stack&quot;&gt;&lt;a href=&quot;#jam-stack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JAM Stack&lt;/h2&gt;
&lt;p&gt;JAM is an acronym for &lt;strong&gt;J&lt;/strong&gt;avascript &lt;strong&gt;A&lt;/strong&gt;PI &lt;strong&gt;M&lt;/strong&gt;arkup. What does it mean though? It is not a framework or a specific technology. It is more of an architectural approach. A modern way web content is built, managed and distributed.&lt;/p&gt;
&lt;p&gt;Back in the day, the web was just static HTML pages, maybe with some CSS and JavaScript on the top. Perfect for static content. However, usually, you need your data to be more dynamic. Instead of static HTML sitting on the server served directly, HTML pages were built on-the-fly when a client requested them. The data dynamically provided from a database. While this is very flexible, it comes at a cost. It’s slow. Way slower than just a static site. The application server executes code on demand, needs to contact a database, usually on a different machine, build the page and send it back. The scalability is hard and expensive. When the traffic rises, its more complicated to scale the solution. We’re talking load balancing, session replication, distributed caching not to mention difficult RDS scalability. And it’s vulnerable. With so many moving parts, the attack surface is extensive. Ranging from Cross-Site-Scripting, SQL Injection to exploiting &lt;a href=&quot;https://www.vojtechruzicka.com/snyk-detecting-dependencies-with-known-vulnerabilities/&quot;&gt;security vulnerabilities in your libraries&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When you just have static HTML, CSS and JavaScript files, it’s much harder to compromise your site unless someone gains complete access to your server. Since the content does not change, it is easy to cache. Instead of having just one central server or just a few of them in an expensive and complicated solution, you can use Content Delivery Network to distribute your site. This way you’ll have your availability covered and CDN redistributing your files across the globe. Users from New York will be served as fast as users from Tokyo. And if your traffic skyrockets, it is still not a problem. Scalability is easy and cheap if you don’t have to manage synchronization of state.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./jamstack.png&quot; alt=&quot;jam stack&quot;&gt;&lt;/p&gt;
&lt;p&gt;One of the key parts of JAM Stack Architecture is switching to static. That means, using a Static Site Generator to build your site into plain old HTML, CSS, and JS, which does not change and can be served over CDN. If you need to make a change, you just rebuild the whole site. It is fast since most of the site remains the same. Moreover, the deploy takes very little time as it means only copying a bunch of files.&lt;/p&gt;
&lt;p&gt;The source content files are usually not HTML, but some templating or markup language (that’s M in JAM). For example, you can write all the content in Markdown or AsciiDoc and convert it to HTML at the build time. That’s simpler than writing directly in HTML and more secure because of XSS. And even a non-technical person can learn it quickly.&lt;/p&gt;
&lt;p&gt;One important part to realize is that static does not mean limited interactivity and static data. The key part is that HTML and JS files served by the server are static. They’re not changing. However, you still have JavaScript on the client. You can do everything you do in JS. That means you can fetch any data you need through an API call (usually REST or GraphQL) once your static page is loaded. The key difference is that the HTML with dynamic data is not constructed on the server, but rather on the client. Of course, in many cases, your site is really static and no API calls are necessary.&lt;/p&gt;
&lt;p&gt;Another key part is that everything is in Git, no database, no App server with configuration, just your code which is built by a static site generator. And everything builds and deploys quickly. That allows you to automate the build and deployment workflow easily. When you make changes in the master branch, it automatically builds the site with your Static Site Generator and just replaces the old static files. That’s it. That means easy continuous deployment. And there are services for this.&lt;/p&gt;
&lt;h2 id=&quot;gatsbyjs&quot;&gt;&lt;a href=&quot;#gatsbyjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GatsbyJS&lt;/h2&gt;
&lt;p&gt;Alright, JAM Stack is a way to go, no doubt about that. Which of the static site generator to use though? A good place to start is a site called &lt;a href=&quot;https://www.staticgen.com/&quot;&gt;StaticGen&lt;/a&gt;, which contains a nice list of many Static Site Generators. You can filter by language and templates used. And sort by popularity. That’s a good way to determine what generators are currently widely used, which is important because it determines community size, resources, and plugins available. Currently, there are 214 generators and the number is constantly growing. So which one should I choose?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./static-gen.png&quot; alt=&quot;static site generator list&quot;&gt;&lt;/p&gt;
&lt;p&gt;There are many factors to consider. Maturity is important as it means a big community, lot of resources, plugins and stable bug-free product. On the other hand, it is often a trade-off between maturity and new features and technologies. Then, of course, there is the language used. If you need to customize the generator and tinker with it, you’ll want to use one written in a language you’re familiar with. After briefly checking top 5 generators, I declined Jekyll and Hugo as Go and Ruby were not languages I am proficient with. From the remaining generators, Gatsby immediately caught my attention because of its features and modern technologies.&lt;/p&gt;
&lt;h3 id=&quot;modern-technologies&quot;&gt;&lt;a href=&quot;#modern-technologies&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modern technologies&lt;/h3&gt;
&lt;p&gt;Gatsby is built with a lot of interesting technologies. If you are a front-end developer, you’ll probably be familiar with most of these, so adoption should be quick. If not, it gives you chance to learn a lot of interesting stuff. Gatsby is powered by React. You’ll be able to nicely structure your project to components and use all the existing React components there not specifically developed for Gatsby. For styling, you can attach plain old CSS stylesheet, but Gatsby offers many more choices like SASS, Glamor, Styled Components, Stylus, LESS or Styled JSX. Gatsby is built on top of Webpack. And it can generate offline-ready Progressive Web App and uses GraphQL for querying data.&lt;/p&gt;
&lt;h3 id=&quot;data-sources-and-graphql&quot;&gt;&lt;a href=&quot;#data-sources-and-graphql&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data sources and GraphQL&lt;/h3&gt;
&lt;p&gt;One of the disadvantages of WordPress is that is tightly couples creation and management of content and serving of the content. While for many users WP may be a nice way to create and manage their content, it is far from efficient for serving it compared to static sites. In contrast, this is one of the areas where Gatsby really shines.&lt;/p&gt;
&lt;p&gt;From your React components and templates, you access data (such as blog posts, site title and other metadata) using GraphQL. Unlike other Static Site Generators, the data is not limited to Markdown or some templating language. Gatsby supports many sources. It can handle files in formats such as Markdown, YAML, CSV or XML. What’s awesome is that it can connect to sources like Medium or WordPress and load data from there! And because of Gatsby’s extensibility and plugin system, it is easy to add more sources. What’s great is that from the perspective of your templates it is just a GraphQL query. That means it is easy to switch data sources while your components and templates remain intact. For example, when migrating from WordPress, you can keep your articles in WP, keep creating and updating them there and just use Gatsby to transform your WP site to static one. Then, later you can convert to markdown if you feel like it.&lt;/p&gt;
&lt;p&gt;What’s really powerful is using GraphQL as the query language. Because when querying structured data, you define what fields are you interested in, you can define order or limit the number of the results. But everything is defined on the side of the client executing the query. You can change your queries and data obtained without modifying the data source. It also means you can query the same source in different ways depending on context.&lt;/p&gt;
&lt;h3 id=&quot;performance&quot;&gt;&lt;a href=&quot;#performance&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h3&gt;
&lt;p&gt;One of the Gatsby’s greatest advantages is performance. I mean - performance on top of what you get by switching to a static site generator. Since Gatsby uses Webpack, it allows code splitting by route. That means when accessing a page on your site, the client will download only code and resources necessary for the current sub-page and not the whole bundle. When navigating to another route, it will just fetch what’s new. Gatsby also sticks to the Progressive Web App standard. That means your site can behave as a native-like app on mobile and work with a poor connection or even offline. What’s more, Gatsby utilizes the &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/prpl-pattern/&quot;&gt;PRPL Pattern&lt;/a&gt;. That means first push critical resources over HTTP/2 to the client, which is faster than waiting for the browser to download HTML first, parse it and then request additional stylesheets, scripts and resources linked in the HTML. Gatsby first renders static HTML version of the initial route to minimize time-to-interactive. Then in the background, it loads the bundle and initializes a Single Page App. It then starts to pre-fetch resources for the routes linked to the initial page so additional navigation within your site is blazing fast and without reload.&lt;/p&gt;
&lt;p&gt;Gatsby also works great with images, which are usually a big hit to site’s performance. Based on the screen size and resolution of the client device, it will serve appropriate image size. It supports WebP and can convert your jpegs to progressive jpegs. While the images are loading, it will reserve the space required by the image, so the content of the page is not ‘hopping’ after image loads. It also replaces the image with a blurred version or monochromatic SVG until it loads - similar to what Medium uses.&lt;/p&gt;
&lt;h2 id=&quot;pitfalls&quot;&gt;&lt;a href=&quot;#pitfalls&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pitfalls&lt;/h2&gt;
&lt;p&gt;I think Gatsby is great. I had a lot of fun using it so far and I’ve learned much in the process. It offers you freedom and flexibility. However, it is not as mature as some of the competitors. This is improving quickly as it is under rapid development. Still, I did encounter some bugs complicating my development. On the other hand, the community was really helpful and supportive. Some of the features, which I would consider standard were not yet available or sufficient such as tags and categories support, pagination or Open Graph metadata. I would also like to see AsciiDoc support instead of just plain Markdown. One of the biggest problems was probably the lack of visual themes. For a long time, there was not any official themes directory. In Feb 2018 &lt;a href=&quot;/blog/2018-02-09-announcing-gatsby-manor-themes-for-gatsbyjs/&quot;&gt;Gatsby Manor was launched&lt;/a&gt; and now it contains just SIX themes, which are all only ports of &lt;a href=&quot;https://html5up.net/&quot;&gt;HTML5 UP themes&lt;/a&gt;. However, with the current development rate, I am sure more and more plugins will be available out of the box shortly.&lt;/p&gt;
&lt;h2 id=&quot;results&quot;&gt;&lt;a href=&quot;#results&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Results&lt;/h2&gt;
&lt;p&gt;Overall I am really happy with Gatsby and the migration from WordPress. I no longer fear my WordPress will get compromised. Everything is now on GitHub and under version control. It’s much more transparent. No longer need of database backups and rollbacks are now easy in case of something goes wrong. Not to mention the possibility of developing new features safely in branches and deploying and testing them separately from the ‘production’ environment. And no more fees for hosted WordPress. And writing in markdown is also more convenient for me as I don’t focus on HTML or visuals when writing but rather on the content.&lt;/p&gt;
&lt;p&gt;My blog is now deployed on Netlify CDN, which means the user will be served fast no matter what their geographic location is. The performance gain of switching to static is huge. That means not only fewer visitors leaving the blog because of the slow loading times, but also better page ranking on Google as it favors faster sites. It also favors sites served over HTTPS, which my site now supports thanks to Netlify’s &lt;a href=&quot;https://www.netlify.com/docs/ssl/&quot;&gt;one click setup&lt;/a&gt; and &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;. Now let’s go back to the Lighthouse audit score and compare new Gatsby site to my good old WordPress.&lt;/p&gt;
&lt;h3 id=&quot;before-1&quot;&gt;&lt;a href=&quot;#before-1&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;./chrome-audit-score-before.jpg&quot; alt=&quot;before&quot;&gt;
&lt;img src=&quot;./chrome-audit-performance-metrics.jpg&quot; alt=&quot;before-details&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;after&quot;&gt;&lt;a href=&quot;#after&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;After&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;./results.png&quot; alt=&quot;after&quot;&gt;&lt;/p&gt;
&lt;p&gt;Quite a difference, right? Long story short - Gatsby is great. You should give it a try, especially if you are a front-end developer. And keep watching its development as I am sure we can look forward to even more awesomeness in the future. If Gatsby is not your cup of the, you should still consider switching to a static site generator as the advantages are too good to ignore. To learn more about Gatsby, check out &lt;a href=&quot;/docs/awesome-gatsby/&quot;&gt;this curated list&lt;/a&gt; of Gatsby-related resources.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href=&quot;https://www.vojtechruzicka.com/&quot;&gt;Vojtech Ruzicka’s Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why we created the Gatsby plugin library]]></title><description><![CDATA[Earlier this week, we launched a  Plugin Library  on Gatsbyjs.org and are excited for you to use it! This article explains how UX research…]]></description><link>https://www.gatsbyjs.org/blog/2018-03-07-why-we-created-the-plugin-library/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-03-07-why-we-created-the-plugin-library/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;p&gt;Earlier this week, we launched a &lt;a href=&quot;/packages/&quot;&gt;Plugin Library&lt;/a&gt; on Gatsbyjs.org and are excited for you to use it! This article explains how UX research drove the design of this library and the accompanying &lt;a href=&quot;/docs/plugin-authoring/&quot;&gt;Plugin Authoring&lt;/a&gt; doc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;plugin-tweet.png&quot; alt=&quot;Plugin tweet&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;why-build-a-plugin--package-library&quot;&gt;&lt;a href=&quot;#why-build-a-plugin--package-library&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why build a plugin / package library&lt;/h2&gt;
&lt;p&gt;From October 2017 to February 2018, I conducted over 60 interviews with Gatsby users, and plugin discoverability and plugin authoring appeared as top pain points (see &lt;a href=&quot;/blog/2017-12-20-introducing-the-gatsby-ux-research-program/&quot;&gt;blog post on the Gatsby UX research program&lt;/a&gt; for a full list of pain points).&lt;/p&gt;
&lt;h2 id=&quot;jobs-to-be-done&quot;&gt;&lt;a href=&quot;#jobs-to-be-done&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jobs to be done&lt;/h2&gt;
&lt;p&gt;After compiling data from the interviews, I drew what’s called an “empathy map” to put myself in the shoes of Gatsby users. This map describes what Gatsby users usually experienced when searching for plugins.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;empathy-map.png&quot; alt=&quot;Empathy map&quot;&gt;&lt;/p&gt;
&lt;p&gt;This map reflects how it took most people a lot of time browsing through the plugin list and searching example sites to figure out what plugins they need and want. They also frequently mentioned how difficult it was to build their own plugin with no tutorials available.&lt;/p&gt;
&lt;p&gt;With the empathy map and the interviews as our guide, we learned that most people want to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find the best, most recent, and relevant plugin, library, or component for their site.&lt;/li&gt;
&lt;li&gt;Learn how to build a plugin.&lt;/li&gt;
&lt;li&gt;Preview plugin functionality before installation.&lt;/li&gt;
&lt;li&gt;Share plugins with others.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;learning-from-other-plugin-libraries&quot;&gt;&lt;a href=&quot;#learning-from-other-plugin-libraries&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learning from other plugin libraries&lt;/h2&gt;
&lt;p&gt;Next, we analyzed over 10 admirable and/or popular plugin libraries to draw from their strengths and learn from their weaknesses. Examples, in no particular order, include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://js.coach/&quot;&gt;JS.coach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vimawesome.com/&quot;&gt;VIM Awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://bestof.js.org/&quot;&gt;Best of JS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sketchapp.com/extensions/&quot;&gt;Sketch extension library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/plugins/mmcblfncjaclajmegihojiekebofjcen?hl=en&quot;&gt;Chrome plugin library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://marketplace.visualstudio.com/VSCode&quot;&gt;Microsoft Visual Studio Code Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wordpress.org/plugins/&quot;&gt;Wordpress Plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://npms.io/&quot;&gt;Npms.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/en/packages&quot;&gt;Yarnpkg.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.apple.com/ios/app-store/&quot;&gt;Apple App store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/top&quot;&gt;Google Play store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;the-goods-&quot;&gt;&lt;a href=&quot;#the-goods-&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The goods 👍&lt;/h3&gt;
&lt;p&gt;We liked when these libraries let users:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;browse plugins without much clicking&lt;/li&gt;
&lt;li&gt;refine searches using categories and tags&lt;/li&gt;
&lt;li&gt;rank plugins based on metrics&lt;/li&gt;
&lt;li&gt;learn how to create their own plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;the-bads-&quot;&gt;&lt;a href=&quot;#the-bads-&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The bads 👎&lt;/h3&gt;
&lt;p&gt;We &lt;em&gt;didn’t&lt;/em&gt; like these things in some of the above libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;poor contrast and poor information heirarchy&lt;/li&gt;
&lt;li&gt;limited filters&lt;/li&gt;
&lt;li&gt;too many filters&lt;/li&gt;
&lt;li&gt;low information density&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;prototypes-and-their-evolutions&quot;&gt;&lt;a href=&quot;#prototypes-and-their-evolutions&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prototypes and their evolutions&lt;/h2&gt;
&lt;p&gt;Here’s a sampling of screenshots that many community members contributed to and gave feedback about. It’s rewarding to see how much the design has progressed (and will keep progressing).&lt;/p&gt;
&lt;video controls=&quot;controls&quot; autoplay=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source type=&quot;video/mp4&quot; src=&quot;/images/gatsby-plugin-library-compressed.mp4&quot;&gt;&lt;/source&gt;
  &lt;p&gt;Your browser does not support the video element.&lt;/p&gt;
&lt;/video&gt;
&lt;h2 id=&quot;next-steps-for-the-plugin-library&quot;&gt;&lt;a href=&quot;#next-steps-for-the-plugin-library&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps for the plugin library&lt;/h2&gt;
&lt;p&gt;The plugin ecosystem is a huge part of what makes Gatsby awesome because plugins and packages make Gatsby extensible. There’s a virtuous cycle where people find plugins, use them, contribute to them, and create new ones. We hope to accelerate this cycle, so the Gatsby ecosystem can develop faster and more people can build awesome sites!&lt;/p&gt;
&lt;p&gt;Here are some ways you can help make the Gatsby plugin ecoystem great:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Share feedback on the plugin library on &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4394&quot;&gt;Github Issue #4394&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you created a plugin and it’s not showing up in the library, double check that the package has “gatsby-plugin” in its keywords.&lt;/li&gt;
&lt;li&gt;Create plugins (or publish ones you’ve already built)! If you’re interested, the &lt;a href=&quot;/docs/plugin-authoring/&quot;&gt;Plugin Authoring&lt;/a&gt; page can help.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/shannonb_ux/status/938551014956732418&quot;&gt;Contact me&lt;/a&gt; here if you have feedback that differs from or provides deeper insight into one of the pain points this article mentions.&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;sneak-peak-into-the-next-ux-project&quot;&gt;&lt;a href=&quot;#sneak-peak-into-the-next-ux-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sneak peak into the next UX project&lt;/h2&gt;
&lt;p&gt;Our next UX project is designing and building a &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4392&quot;&gt;Gatsby site showcase&lt;/a&gt;. Please contribute to and subscribe to the issue to help out!&lt;/p&gt;
&lt;p&gt;Again, many thanks to all the community members who have contributed to this research and to making Gatsby awesome. Stay tuned for updates on the plugin library and future Gatsby UX research projects!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Case Study: Mike Johnston for Colorado]]></title><description><![CDATA[How we used React, Headless WordPress, GraphQL & Gatsby to build Mike’s new online platform Ecliptic  is a small development team out of…]]></description><link>https://www.gatsbyjs.org/blog/2018-3-03-case-study-mike-johnston/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-3-03-case-study-mike-johnston/</guid><dc:creator><![CDATA[Brandon Konkle]]></dc:creator><content:encoded>&lt;h3 id=&quot;how-we-used-react-headless-wordpress-graphql--gatsby-to-build-mikes-new-online-platform&quot;&gt;&lt;a href=&quot;#how-we-used-react-headless-wordpress-graphql--gatsby-to-build-mikes-new-online-platform&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How we used React, Headless WordPress, GraphQL &amp;#x26; Gatsby to build Mike’s new online platform&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ecliptic.io&quot;&gt;Ecliptic&lt;/a&gt; is a small development team out of Broomfield, Colorado. We build everything from high-performance content-driven sites to richly interactive web and mobile applications using React, GraphQL, and functional programming. &lt;a href=&quot;https://www.mikejohnstonforcolorado.com&quot;&gt;Mike Johnston&lt;/a&gt; is a Colorado gubernatorial candidate with an ambitious vision. When we heard about his ideas for an online platform to truly engage with his constituents and give them a real voice, we were excited about the opportunity to make his ideas into reality!&lt;/p&gt;
&lt;p&gt;While we’re still a few phases away from seeing Mike’s ultimate vision come to fruition, we’ve got the foundations in place and we’re putting the finishing touches on a gorgeous new interface for Mike’s homepage. Check it out at &lt;a href=&quot;https://www.mikejohnstonforcolorado.com&quot;&gt;https://www.mikejohnstonforcolorado.com&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;laying-the-foundation-for-an-extensible-future&quot;&gt;&lt;a href=&quot;#laying-the-foundation-for-an-extensible-future&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Laying the Foundation for an Extensible Future&lt;/h2&gt;
&lt;p&gt;Our goal was to provide a solid architecture to build a long-term future on top of. In later phases the site will become a full-fledged web application with an organizing and fundraising platform built-in, and the goal beyond that is to create an innovative “open source policy” platform to involve citizens in the policy-making process like never before!&lt;/p&gt;
&lt;p&gt;To execute on this effectively, we prioritized a few architectural goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;System Resources&lt;/strong&gt; — Sadly, public sector software budgets often don’t match those of their private sector counterparts. We wanted to pursue a system that would not require a large deployment, a lot of performance tuning, and constant monitoring and maintenance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; — It’s no secret that there are bad actors across the world that would love to influence campaigns and governance wherever they can. We wanted to provide strong protections to prevent hackers from gaining access and interfering.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintainability&lt;/strong&gt; — If this stack is going to support a growing engagement and policy platform on a lean budget, it needs to be easy to work on. We wanted to maintain best practices wherever possible and use techniques that would be easy for someone to come in behind me and build on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;content-management-with-wordpress&quot;&gt;&lt;a href=&quot;#content-management-with-wordpress&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content Management with WordPress&lt;/h2&gt;
&lt;p&gt;The first decision we made was to use the ubiquitous &lt;a href=&quot;http://wordpress.org&quot;&gt;WordPress&lt;/a&gt; CMS to manage dynamic homepage content. WordPress has a lot of rough edges, but if you can work around them it provides an excellent admin with rich content editing. It’s also very widely used, so there’s a good chance that team members have had experience with it previously.&lt;/p&gt;
&lt;p&gt;The downside is that WordPress is implemented with &lt;a href=&quot;http://www.php.net/&quot;&gt;PHP&lt;/a&gt;, and it takes some effort to host and maintain it in an efficient way. As traffic grows, so does system load. When a site achieves great success, it also is introduced to a host of new performance problems caused by heavy traffic. Caching and query optimization can mitigate this greatly, but it takes a lot of time and effort to configure and maintain. In addition, it can be challenging to use modern front-end tools like React to their full potential.&lt;/p&gt;
&lt;p&gt;In addition, because WordPress is so broadly adopted it is often the subject of a lot of hacking effort. As exploits are discovered, they can be widely utilized because of the number of targets available.&lt;/p&gt;
&lt;p&gt;To work around these issues, we decided to go with a “headless” WordPress instance that only functions as an admin interface. Using tools like &lt;a href=&quot;https://www.advancedcustomfields.com/&quot;&gt;Advanced Custom Fields&lt;/a&gt; and the &lt;a href=&quot;https://wordpress.org/plugins/custom-post-type-ui/&quot;&gt;Custom Post Type UI&lt;/a&gt;, we created a very flexible repository for homepage content that is then available via the &lt;a href=&quot;https://developer.wordpress.org/rest-api/&quot;&gt;REST API&lt;/a&gt;. This frees us up to use whatever frontend tools are the best for the job, and adds a layer of separation from WordPress’s performance and security challenges.&lt;/p&gt;
&lt;h2 id=&quot;static-site-generation-with-gatsby&quot;&gt;&lt;a href=&quot;#static-site-generation-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static Site Generation with Gatsby&lt;/h2&gt;
&lt;p&gt;Since we had complete freedom on the front end, we wanted to pursue a solution based on &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt;, our framework of choice in the browser. We’ve used &lt;a href=&quot;https://reactjs.org/docs/react-dom-server.html&quot;&gt;Server Side Rendering&lt;/a&gt; solutions in the past based on &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node&lt;/a&gt; and &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express&lt;/a&gt;, but over time they run into some of the same performance issues that PHP does. Server load is always a significant issue on dynamically rendered high-traffic applications, because they typically need to interact with a variety of other systems to construct each page. As concurrent requests grow, so does response time.&lt;/p&gt;
&lt;p&gt;One way to sidestep a great deal of these concerns is to make use of as much static content as possible. Static content is astonishingly light on system resources to serve up even at higher traffic levels, and it can be propagated to worldwide &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_delivery_network&quot;&gt;Content Delivery Networks&lt;/a&gt; and served up to local users at lightning speeds. Static content traditionally has two big problems, however. It’s not trivial for non-technical users to update with frequently changing content, and it’s typically not very interactive or responsive.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; is a project that has grown quickly into a best-of-both-worlds solution that is able to weave static file generation into a cohesive browser-based application complete with preloaded client-side routing to each static page. After the initial page load, Gatsby ensures that the browser begins fetching each additional page that is linked to ahead of time. When the user clicks a link, the browser doesn’t need to make an additional round-trip request to the server to get the next page. The experience of navigating around the site is noticeably faster than traditional page loads, and Gatsby provides a plugin to ensure that Google Analytics actions are still triggered for each routing event.&lt;/p&gt;
&lt;h2 id=&quot;wordpress-integration-with-triggered-builds&quot;&gt;&lt;a href=&quot;#wordpress-integration-with-triggered-builds&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WordPress Integration with Triggered Builds&lt;/h2&gt;
&lt;p&gt;To connect with the content, we used Gatsby’s supported WordPress REST API plugin. This uses WordPress’s API discovery to identify all available endpoints, and then retrieves all content available from each one. It then makes the data available in its own &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; schema, which it uses to power the build system API. This ends up being a novel and quite effective way to make it easy for front end developers to integrate with the data generated by the build system. Using a guided graphical query system, developers can discover the data available to them and test out different ways of querying and mutating it before they ever use it in their React components.&lt;/p&gt;
&lt;p&gt;Using the custom fields and post types, we built out a structure for managing content in a variety of different places on the site using the WordPress admin. Media is made available via the REST API, and Gatsby downloads each file used in the build locally so that it can apply image processing and responsive sizing. Using small custom scripts in the Gatsby project root, developers can turn WordPress content into GraphQL data that they can use anywhere on a page.&lt;/p&gt;
&lt;p&gt;The gotcha to all of this outstanding developer experience and astonishing client-side performance is that it is still not as easy as I’d like to update content. Each time content is updated on the headless WordPress instance, a custom PHP script triggers a build on our hosting platform. The build and deploy process currently takes about 5 minutes each time to run, so new content doesn’t show up right away. We have plans to optimize this in a variety of ways, but this is the current state.&lt;/p&gt;
&lt;p&gt;Our build process has been relatively fragile as we’ve worked around inconsistencies in the WordPress API and minor issues with the Gatsby plugin to interact with it. We expect this to stabilize over time as we identify issues and workarounds with real production use, however. The static site structure has been very helpful for resilience. The build may break and prevent new content from showing up, but it’s much less likely that an issue would actually bring the site down like it would in a dynamic application environment.&lt;/p&gt;
&lt;h2 id=&quot;obscurity-isnt-security-but-it-helps&quot;&gt;&lt;a href=&quot;#obscurity-isnt-security-but-it-helps&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obscurity isn’t Security, but it Helps&lt;/h2&gt;
&lt;p&gt;The static site structure provides a layer of separation that makes potential attacks less damaging. If an attacker gains access to the machine containing the static content, they won’t discover anything that isn’t already publicly available. They can alter the content shown temporarily, but this can be solved in minutes with a new build and a new static server with fresh credentials. With some care, there should be little evidence leading back to the headless WordPress server managing content and administrator accounts.&lt;/p&gt;
&lt;p&gt;This is not an excuse for half-hearted security precautions or maintenance, however. It is still essential to keep your WordPress installation up to date and regularly audit server security. A skilled hacker often has a variety of different attack vectors they can use to gain pieces of information about your architecture — not all of them based on technology. Assume that your admin will be discovered, and take appropriate measures to keep data safe.&lt;/p&gt;
&lt;p&gt;Using tools like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; headers, encrypted auth tokens, and secure connections you can still connect to remote APIs with strong protections for your users, systems, and data.&lt;/p&gt;
&lt;h2 id=&quot;the-trail-ahead&quot;&gt;&lt;a href=&quot;#the-trail-ahead&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Trail Ahead&lt;/h2&gt;
&lt;p&gt;The WordPress solution is excellent for managing dynamic editorial content, but as we build out more interactive features we need to begin interacting with an API to show content that changes depending on the logged in user, or user-generated content. We could interact with the WordPress API directly, but that works against the aforementioned security and performance benefits of using a headless instance and a static build.&lt;/p&gt;
&lt;p&gt;Instead, we decided to go with an &lt;a href=&quot;https://www.apollographql.com/&quot;&gt;Apollo&lt;/a&gt; GraphQL server so that we could interact with the API server the same way we were interacting with the Gatsby content system. Using standard Express middleware and Apollo tools, we were able to quickly define a schema that both my server and client code can programmatically understand and help type-check during development. It’s working quite well to help us quickly build out interfaces with minimal data issues.&lt;/p&gt;
&lt;p&gt;Security and performance will obviously become greater concerns as the interactive application is built out, but we have more time to deal with that while the homepage is already up and running and serving up dynamic content with the performance of static files.&lt;/p&gt;
&lt;h2 id=&quot;lets-chat&quot;&gt;&lt;a href=&quot;#lets-chat&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s Chat!&lt;/h2&gt;
&lt;p&gt;Have questions about the setup and future plans, or comments about our approach? We’re launching a branch new &lt;a href=&quot;http://www.ecliptic.io&quot;&gt;homepage&lt;/a&gt; this weekend with a new design and integrated chat that connects directly to our team’s Slack account. In the meantime, &lt;a href=&quot;mailto:brandon@ecliptic.io&quot;&gt;send me an email&lt;/a&gt; and let’s talk!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Introducing the Gatsby Documentation Project]]></title><description><![CDATA[People really like Gatsby docs and Gatsby. In fact, we’ve talked about tracking the number of curse words and endearingly pejorative terms…]]></description><link>https://www.gatsbyjs.org/blog/2018-02-28-documentation-project/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-02-28-documentation-project/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;p&gt;People really like Gatsby docs and Gatsby. In fact, we’ve talked about tracking the number of curse words and endearingly pejorative terms that people use when tweeting about Gatsby. Here’s a sampling:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;holy-shit-tweet.png&quot; alt=&quot;Holy shit tweet&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;disgustingly-fast-tweet.png&quot; alt=&quot;Disgustingly fast tweet&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;stupid-fast-tweet.png&quot; alt=&quot;Stupid fast tweet&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-much-do-people-like-the-docs-d&quot;&gt;&lt;a href=&quot;#how-much-do-people-like-the-docs-d&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How much do people like the docs? :D&lt;/h2&gt;
&lt;p&gt;In my interviews with over 60 Gatsby users, I asked “What do you like about Gatsby?”. Documentation comes out as one of the clear winners, as you can see in this list of the top ten things interviewees like, courtesy of &lt;a href=&quot;https://unbird.com/#/&quot;&gt;Unbird.com&lt;/a&gt; analytics:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;unbird-gatsby-likes.png&quot; alt=&quot;Unbird.com analytics screenshot&quot;&gt;&lt;/p&gt;
&lt;p&gt;To dive a little deeper, here are some interview quotes about how much people like the docs and tutorials:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Very advanced docs &amp;#x26; tutorials for this stage in a project.”&lt;/p&gt;
&lt;p&gt;“Tutorials are very beginner friendly and great for someone who wants to become a better developer.”&lt;/p&gt;
&lt;p&gt;“The tutorials are very easy to understand and go through great lengths to explain every line of code necessary.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And some tweets:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsby-100-docs.png&quot; alt=&quot;Gatsby 100 docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;usability-docs.png&quot; alt=&quot;Usability docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;So here’s the bottom line: nearly everyone we’ve interviewed loves the Gatsby development experience and what the community has produced with the docs, guides, and tutorials.&lt;/p&gt;
&lt;p&gt;So why fix what isn’t broken?&lt;/p&gt;
&lt;h2 id=&quot;enhancing-the-tutorials&quot;&gt;&lt;a href=&quot;#enhancing-the-tutorials&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enhancing the Tutorials&lt;/h2&gt;
&lt;p&gt;Many people have contributed to the docs and tutorials already and have done an excellent job. With that being said, there is still room to grow.&lt;/p&gt;
&lt;p&gt;Here is a brief overview of issues that have come up again and again as I’ve interviewed people and observed them going through the tutorials and docs (see &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4175&quot;&gt;Issue #4175&lt;/a&gt; on Github to follow this and contribute):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gatsby is beginner-friendly; however, &lt;em&gt;true&lt;/em&gt; beginners to programming need an intro to basic tools like the command line, code editors, and browser consoles.&lt;/li&gt;
&lt;li&gt;Upon first visit to Gatsbyjs.org, most visitors click “Get Started.” This is the perfect solution for them if they prefer to jump into coding without reading much. If they prefer step-by-step instructions, it takes some looking around before they see the tutorial tab across the top.&lt;/li&gt;
&lt;li&gt;Installing new starters for every part of tutorial feels like a distraction to some beginners.
“Part 1” is not a descriptive title for a tutorial if someone wants to preview or remember what was covered.&lt;/li&gt;
&lt;li&gt;Almost everyone is new to GraphQL and gets overwhelmed when we introduce it in Part 4.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;documentation-project-beginnings&quot;&gt;&lt;a href=&quot;#documentation-project-beginnings&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation project beginnings&lt;/h2&gt;
&lt;p&gt;After outlining the issues above and attempting to solve them myself, I realized the pooled efforts of the community would be incredibly valuable in creating solutions to these issues. So, I created the Documentation Project in Github to plan and track documentation issues.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/projects/3&quot;&gt;Documentation Project’s&lt;/a&gt; goal is to make Gatsby documentation clear, organized, and useful. Issues in the project come from the community and/or interviews with community members. This project also provides a centralized way to plan, manage, and track our progress so that we maintain and enhance the docs and tutorials.&lt;/p&gt;
&lt;p&gt;We know how easy the Gatsby development experience is for the majority of programmers, and some of that ease stems from clear docs and tutorials. Let’s keep up the good work.&lt;/p&gt;
&lt;h2 id=&quot;what-you-can-do-to-help&quot;&gt;&lt;a href=&quot;#what-you-can-do-to-help&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What you can do to help&lt;/h2&gt;
&lt;p&gt;If you’d like to contribute, look through this list of options and pick one that you’d like to help with!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/4175&quot;&gt;Issue #4175&lt;/a&gt; to help enhance the tutorials.&lt;/li&gt;
&lt;li&gt;If you’d like to contribute to and/or follow other documentation projects, go here to find the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/projects/3&quot;&gt;Documentation Project&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;And, as always, if you have time to give us feedback on what you like about Gatsby and what can be improved in the docs/tutorials, schedule a time to chat with me here! &lt;a href=&quot;https://calendly.com/shannon-soper&quot;&gt;https://calendly.com/shannon-soper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Why I Upgraded My Website to GatsbyJS from Jekyll]]></title><description><![CDATA[My thought process during the long overdue rewrite of this website]]></description><link>https://www.gatsbyjs.org/blog/2018-2-27-why-i-upgraded-my-website-to-gatsbyjs-from-jekyll/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-2-27-why-i-upgraded-my-website-to-gatsbyjs-from-jekyll/</guid><dc:creator><![CDATA[Jia Hao Goh]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This article is the first of a two part series, on the engineering behind my &lt;a href=&quot;https://jiahao.codes&quot;&gt;website&lt;/a&gt;. Originally published &lt;a href=&quot;https://jiahao.codes/blog/why-i-upgraded-my-website/&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For the past couple of weeks, I’ve been rebuilding my personal website from scratch, live at &lt;a href=&quot;https://jiahao.codes&quot;&gt;https://jiahao.codes&lt;/a&gt; with the source code on &lt;a href=&quot;https://github.com/jiahaog/jiahao.codes&quot;&gt;GitHub&lt;/a&gt;. In this article, I’ll tell the story of this long overdue rewrite and talk about the new static site framework I eventually settled on, Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;background&quot;&gt;&lt;a href=&quot;#background&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h2&gt;
&lt;p&gt;For a bit of background, I originally built my website while I was an undergraduate back in 2016. It was a single page &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; application, with the design based around an interactive search box where visitors could type in things. The application would then change based on what was typed in, to show projects I’ve done, like a website resume or portfolio. I tagged it on Git for posterity &lt;a href=&quot;https://github.com/jiahaog/jiahao.codes/releases/tag/1.0.0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some drawbacks were that the content was very coupled with the code to to style the page, and it was difficult to change the theme without having to rewrite a lot of code. It uses a customized version of &lt;a href=&quot;https://jsonresume.org/&quot;&gt;JSON Resume&lt;/a&gt; to display data, but ultimately I didn’t do a good job and it was a bit of a mess.&lt;/p&gt;
&lt;p&gt;Furthermore, being a single page application, it takes a little too long to load just to display some static content. I wanted to add routing and different pages to add blogging functionality, which it wasn’t really suitable for without major refactoring.&lt;/p&gt;
&lt;h2 id=&quot;first-iteration--jekyll&quot;&gt;&lt;a href=&quot;#first-iteration--jekyll&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First Iteration — Jekyll&lt;/h2&gt;
&lt;p&gt;This led me to pick something very minimal and lightweight to rebuild it. In my time at &lt;a href=&quot;https://www.grab.com&quot;&gt;Grab&lt;/a&gt;, I worked a little on maintaining our &lt;a href=&quot;https://github.com/grab/engineering-blog&quot;&gt;engineering blog&lt;/a&gt; which was built on top of &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. I liked how minimal it was, you just had to pick a theme and drop in your posts in the &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;markdown&lt;/a&gt; format. There is clear separation of concerns between the content and the site design.&lt;/p&gt;
&lt;p&gt;It’s nice that pages, layouts, and categories in Jekyll are just small building blocks that are composed together to build a website, making it easy to reason about how everything fits together. I picked the &lt;a href=&quot;https://github.com/poole/hyde&quot;&gt;Hyde&lt;/a&gt; theme to start off, and played around a little with the CSS to touch up a few areas.&lt;/p&gt;
&lt;p&gt;When delivering content to users on mobile devices, it is important to optimize delivery of images to the users. Users on smaller mobile devices should not need to load large image resources, but instead should load the appropriate image for their viewport. HTML5 specifies the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;srcset&lt;/code&gt;&lt;/a&gt; attribute for &lt;code class=&quot;language-text&quot;&gt;&amp;lt;img/&amp;gt;&lt;/code&gt; tags which is ideal for this.&lt;/p&gt;
&lt;p&gt;However, it would be a pain to have to manually convert images into different sized thumbnails for a post. I wanted an automated image processing pipeline to automatically resize the images extracted from the markdown documents, and then automatically populate the &lt;code class=&quot;language-text&quot;&gt;srcset&lt;/code&gt; attribute on the images in the output HTML document. I found the &lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll Responsive Image Plugin&lt;/a&gt; great for this. It allows me to create templates which will be used by Jekyll when rendering the markdown and automatically does the image resizing.&lt;/p&gt;
&lt;p&gt;Even so, when I tried to do more complicated workflows like adding CSS preprocessing with dependence on the JavaScript ecosystem with the &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;Node Package Manager (npm)&lt;/a&gt;, it became a lot more convoluted. Looking at a few recipes I’ve found, I would have to dive down the road of writing &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; workflows and somehow connect them to Jekyll commands. I also chanced upon the &lt;a href=&quot;https://github.com/matthodan/jekyll-asset-pipeline&quot;&gt;Jekyll Asset Pipeline&lt;/a&gt; which seems what I could use. I didn’t dive too deep into it, but from brief glances it seems like I would have to come up with a lot of custom scripting to interface with JavaScript libraries on my own.&lt;/p&gt;
&lt;p&gt;I guess having used &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; at work, I was pampered by this open source community where there are loaders and documented recipes for doing almost anything, granted that someone was willing to wade into the world of “JavaScript fatigue”. Around the same time, &lt;a href=&quot;https://github.com/yangshun&quot;&gt;@yangshun&lt;/a&gt; introduced me to &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt;, a React static site generator which seemed really fascinating. It also seemed a good opportunity for me to get my hands dirty with frontend development again.&lt;/p&gt;
&lt;p&gt;As I had some free time on my hands, why not rewrite everything again and keep myself updated with the ever-changing JavaScript ecosystem? Seems like a lot of fun!&lt;/p&gt;
&lt;h2 id=&quot;final-form--gatsby&quot;&gt;&lt;a href=&quot;#final-form--gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final Form — Gatsby&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt; is a static site generator that can render sites from markup documents using templates defined as React components. It functions similarly to Jekyll, where you can pick a &lt;a href=&quot;https://github.com/gatsbyjs/gatsby-starter-blog&quot;&gt;starter project&lt;/a&gt;, &lt;a href=&quot;https://github.com/gatsbyjs/gatsby-starter-blog/blob/master/src/pages/hello-world/index.md&quot;&gt;drop in&lt;/a&gt; some markdown documents for articles, and &lt;a href=&quot;https://gatsbyjs.github.io/gatsby-starter-blog/&quot;&gt;be rewarded&lt;/a&gt; with a website with minimal effort.&lt;/p&gt;
&lt;p&gt;It offers much much more, however. Gatsby lets me leverage all the modern tools for building web applications and to add interactive experiences for visitors like a fully fledged &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; application. Not only that, it is unlike traditional single page applications, and works &lt;em&gt;without&lt;/em&gt; JavaScript! Things would certainly be more complicated if I were to add a JavaScript compilation pipeline to a Jekyll site, and a JavaScript framework would be a better fit.&lt;/p&gt;
&lt;h3 id=&quot;how-it-works&quot;&gt;&lt;a href=&quot;#how-it-works&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How It Works&lt;/h3&gt;
&lt;p&gt;Let me briefly give a high level overview of how Gatsby works from my short experience using it.&lt;/p&gt;
&lt;p&gt;Developing the application is the same as developing a React application, with useful things like &lt;a href=&quot;https://webpack.js.org/guides/hot-module-replacement/&quot;&gt;hot module replacement&lt;/a&gt; to aid easy development already set up by Gatsby. What’s different is that there is a framework in place to use &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; queries to pull content into the client side browser environment. React components can define a query and the component will be hydrated with the result of the query as props when it is rendered.&lt;/p&gt;
&lt;p&gt;For example, I defined a &lt;code class=&quot;language-text&quot;&gt;PostTemplate&lt;/code&gt; which will be used to render pages for articles.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/templates/Post.jsx&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;PostTemplate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  data&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      frontmatter&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; html &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query PostByPath($path: String!) {
    markdownRemark(frontmatter: { path: { eq: $path } }) {
      html
      frontmatter {
        title
        date
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;When the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;PostTemplate /&amp;gt;&lt;/code&gt; component needs to be rendered into a page, the accompanying exported &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;, a GraphQL query is made, and the results are passed in as props into the component.&lt;/p&gt;
&lt;p&gt;The real magic happens when the website is compiled into a production bundle. Running &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; will tell Gatsby to perform all the GraphQL queries defined and render all the React components into a HTML document, using a technique known as server-side rendering. This means that everything “React” is serialized and compiled to static HTML, ready to be viewed without JavaScript. Visitors to the site will then be able to quickly load and interact with the static version of the page.&lt;/p&gt;
&lt;p&gt;Not only that, within the HTML document, there are instructions to load the JavaScript bundle of your application asynchronously. When it has been loaded, the content displayed in the browser will be dynamically replaced by the React application, gaining interactivity. This also happens with the other pages of your site — Gatsby will ensure that they are asynchronously loaded so that when you click on a link, the data is already cached on the browser for React to swap out the DOM elements that need to be changed. Everything is done to give the illusion of speed to the viewer while asynchronously loading everything in the background.&lt;/p&gt;
&lt;h3 id=&quot;plugins&quot;&gt;&lt;a href=&quot;#plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h3&gt;
&lt;p&gt;Because of the APIs exposed by Gatsby for interfacing with its internals, powerful plugins can be built to extend the core functionality of Gatsby and reducing work by developers.&lt;/p&gt;
&lt;h4 id=&quot;nodejs-apis&quot;&gt;&lt;a href=&quot;#nodejs-apis&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node.js APIs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be extended with a &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file in the root of the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.gatsbyjs.org/docs/node-apis/&quot;&gt;Node.js APIs&lt;/a&gt; let plugins extend or modify the heavy lifting performed by the Node.js process when compiling the application. Your gatsby-node.js file can export functions which modify the GraphQL data that is provided to React components when they are rendered. The APIs are also used by plugins to extend the internals of Gatsby e.g. the default webpack config can also be customized here.&lt;/p&gt;
&lt;p&gt;Take the example of what happens during the processing of markdown files into pages. The &lt;a href=&quot;/packages/gatsby-source-filesystem&quot;&gt;gatsby-source-filesystem&lt;/a&gt; plugin scans directories and from files it finds, creates File nodes. These File nodes are then processed by &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/a3fea82b4d4b4c644156e841401821933e8d694a/packages/gatsby-transformer-remark&quot;&gt;gatsby-transformer-remark&lt;/a&gt; , parsing the markup into HTML with the &lt;a href=&quot;https://remark.js.org/&quot;&gt;Remark&lt;/a&gt; markdown processor.&lt;/p&gt;
&lt;h4 id=&quot;server-side-rendering-apis&quot;&gt;&lt;a href=&quot;#server-side-rendering-apis&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server-side Rendering APIs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be extended with a &lt;code class=&quot;language-text&quot;&gt;gatsby-ssr.js&lt;/code&gt; file in the root of the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.gatsbyjs.org/docs/ssr-apis/&quot;&gt;server side rendering APIs&lt;/a&gt; allow hooks to be defined to modify the rendering process of the application. For example, the &lt;a href=&quot;/packages/gatsby-plugin-typography&quot;&gt;Typography.js Plugin&lt;/a&gt; uses this to &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/ab1d7f50adcff5b7085e6236973b8c30083aa523/packages/gatsby-plugin-typography/src/gatsby-ssr.js#L11-L14&quot;&gt;inline the styles&lt;/a&gt; required into the DOM head when rendering.&lt;/p&gt;
&lt;h4 id=&quot;browser-apis&quot;&gt;&lt;a href=&quot;#browser-apis&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browser APIs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Can be extended with a &lt;code class=&quot;language-text&quot;&gt;gatsby-browser.js&lt;/code&gt; file in the root of the project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, the &lt;a href=&quot;https://www.gatsbyjs.org/docs/browser-apis/&quot;&gt;browser APIs&lt;/a&gt; allows plugins to run code on lifecycle events while Gatsby is running in the browser. The &lt;a href=&quot;/packages/gatsby-plugin-google-analytics&quot;&gt;Google Analytics Plugin&lt;/a&gt; &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/a3fea82b4d4b4c644156e841401821933e8d694a/packages/gatsby-plugin-google-analytics/src/gatsby-browser.js#L4-L5&quot;&gt;uses these APIs&lt;/a&gt; to track the location of the user on route changes.&lt;/p&gt;
&lt;p&gt;The best part about using Gatsby is that there plenty of plugins available leveraging these APIs that give us new features almost for free. Want to add offline mode to your application? RSS feeds? Styled components? Just lookup the &lt;a href=&quot;https://www.gatsbyjs.org/docs/plugins/#official-plugins&quot;&gt;available plugins&lt;/a&gt; and drop them into the &lt;a href=&quot;https://github.com/jiahaog/jiahao.codes/blob/master/gatsby-config.js&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;next-steps&quot;&gt;&lt;a href=&quot;#next-steps&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;Jump over to my website to read the &lt;a href=&quot;https://jiahao.codes/blog/integrating-and-building-all-the-things/&quot;&gt;follow up post&lt;/a&gt; where I showcase the amazing integrations and features I have set up, to be on the cutting edge of web development!&lt;/p&gt;
&lt;p&gt;Check out the source code for my site on &lt;a href=&quot;https://github.com/jiahaog/jiahao.codes&quot;&gt;GitHub&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby And The JAMstack - A Bright Future For The Web]]></title><description><![CDATA[This article was originally published on
 Medium 
on January 31, 2018. Recently I relaunched my wife’s photography portfolio,  KNW…]]></description><link>https://www.gatsbyjs.org/blog/2018-02-16-bright-future-for-the-web/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-02-16-bright-future-for-the-web/</guid><dc:creator><![CDATA[Ryan Wiemer]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This article was originally published on
&lt;a href=&quot;https://medium.com/@ryanwiemer/gatsby-and-the-jam-stack-91e31508f364&quot;&gt;Medium&lt;/a&gt;
on January 31, 2018.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Recently I relaunched my wife’s photography portfolio, &lt;a href=&quot;https://www.knw.io/&quot;&gt;KNW Photography&lt;/a&gt;, using a combination of Gatsby, &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt; and &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;. This particular group of tools represents a new and exciting web development architecture known as the &lt;a href=&quot;https://jamstack.org/&quot;&gt;JAMstack&lt;/a&gt; (JavaScript, APIs and Markup). In this post I will be sharing my personal thoughts on each of these new tools and why together they represent the “holy grail” of the static website world.&lt;/p&gt;
&lt;h2 id=&quot;why-other-static-site-generators-didnt-work-for-me&quot;&gt;&lt;a href=&quot;#why-other-static-site-generators-didnt-work-for-me&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Other Static Site Generators Didn’t Work For Me&lt;/h2&gt;
&lt;p&gt;In case you hadn’t noticed the web moves at an insane speed. With new frameworks and tools being introduced almost daily it can be intimidating even for the most experienced developers. Perhaps you have jumped on the bandwagon too early only to regret it later. Or maybe you have given up on new tools and are happy to settle with outdated …err I mean… trusted solutions. 😉 Admittedly it’s a balancing act but I believe that in order to stay relevant we need to evolve with the web while ensuring that selected tools are robust enough to last.&lt;/p&gt;
&lt;p&gt;It was for those reasons that I was hesitant to pull the trigger on a static site generator. I feared that picking the wrong one would result in wasted time either immediately or later down the road. While static site generators have existed in some form for a while, see &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;, &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and &lt;a href=&quot;https://middlemanapp.com/&quot;&gt;Middleman&lt;/a&gt;, they have mostly been used by developers or code-savvy bloggers. Although these tools offer benefits such as greater speed, better security and simpler code what most of them lack in my opinion is a good solution for non technical users to update website content. Asking a non developer to edit a markdown file and commit it to GitHub is simply not realistic for most clients. Some businesses were even started to fill this niche such as &lt;a href=&quot;https://www.siteleaf.com/&quot;&gt;Siteleaf&lt;/a&gt; and &lt;a href=&quot;https://forestry.io/&quot;&gt;Forestry&lt;/a&gt; which provide a CMS for static sites built with Jekyll. Although those solutions solve part of the problem they felt too limiting for my taste and creating anything other than a simple blog is like fitting a square peg into a round hole.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-and-the-road-to-success&quot;&gt;&lt;a href=&quot;#gatsby-and-the-road-to-success&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby And The Road To Success&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;road-to-success.jpg&quot; alt=&quot;Road To Success&quot;&gt;&lt;/p&gt;
&lt;p&gt;One day after airing my grievances about the current state of static site generators on Slack a fellow developer recommend that I check out Gatsby. Gatsby is yet another static site generator but what really set it apart for me was how it was built with &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; and emphasized a rich plugin system. This was a big plus for me as I was itching to learn more about React and the plugin system alleviated some initial pain that I would have had dealing with mundane tasks. Out of the box you get a fantastic development environment with live reloading that required almost no configuration. With Gatsby specific plugins and React components it can handle pretty much anything you throw at it.&lt;/p&gt;
&lt;p&gt;Next came integrating the statically generated site with data stored in a CMS. Again Gatsby was well suited for this and I was able to easily integrate with Contentful via the &lt;a href=&quot;https://www.gatsbyjs.org/packages/gatsby-source-contentful/&quot;&gt;gatsby-source-contentful&lt;/a&gt; plugin. Contentful is an example of a headless CMS, meaning that is is not tied to any particular technology or language. Contentful allows you to store content using a pleasant user interface and it can then output the data via an API. Best of all Contentful puts you in the driver seat and lets you define your own content model however you see fit. Think &lt;a href=&quot;https://www.advancedcustomfields.com/&quot;&gt;WordPress Advanced Custom Fields&lt;/a&gt; on steroids. With the content stored in Contentful Gatsby then uses the Contenful API along with the awesome power of &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; to query data at build time. Cool stuff!&lt;/p&gt;
&lt;p&gt;The final piece of the puzzle was determining where to host the website. I had recently experimented with Netlify on a somewhat &lt;a href=&quot;https://www.doggoforhire.com/&quot;&gt;pointless website for my dog&lt;/a&gt; and I was impressed by its ease of use and how they offered a fully featured developer tier for free. In no time I was able to get my Gatsby powered website up and running on Netlify. Then with the help of webhooks I was able to have Contentful tell Netlify to “rebuild” the website whenever a new post was published. Finally with Netlify’s form handling functionality I hooked up a contact form all without a single line of backend code or even a database.&lt;/p&gt;
&lt;h2 id=&quot;the-final-product&quot;&gt;&lt;a href=&quot;#the-final-product&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Final Product&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;final-product.jpg&quot; alt=&quot;Final Product&quot;&gt;&lt;/p&gt;
&lt;p&gt;After a little over a month of tinkering on the design during nights and weekends I had a fully functional website ready to be launched. During this process I learned a fair bit of how to code with React and the Gatsby community seemed genuinely nice and happy to help me to learn. The final product was a website that felt like it belonged in 2018 while still allowing my wife to easily update content with no assistance. Not only that the website was immensely faster than the previous WordPress version, served over HTTPS, utilized a CDN and cost me $0 dollars a month thanks to the extremely generous free tiers offered by Netlify and Contentful. 😍&lt;/p&gt;
&lt;p&gt;If you are currently on the fence about static site generators or the JAMstack in general there has never been a better time to jump in. In my humble opinion with these tools it has finally reached the level of maturity to not just be feasible for client work but actually pretty darn amazing.&lt;/p&gt;
&lt;p&gt;For those interested the source code for the website I built is available on GitHub: &lt;a href=&quot;https://github.com/ryanwiemer/knw&quot;&gt;https://github.com/ryanwiemer/knw&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to Build a Website with React]]></title><description><![CDATA[What is React? React is a fantastic and wildly popular tool for building websites and apps, and it creates a world where JavaScript and HTML…]]></description><link>https://www.gatsbyjs.org/blog/2018-2-16-how-to-build-a-website-with-react/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-2-16-how-to-build-a-website-with-react/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;h1 id=&quot;what-is-react&quot;&gt;&lt;a href=&quot;#what-is-react&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is React?&lt;/h1&gt;
&lt;p&gt;React is a fantastic and wildly popular tool for building websites and apps, and it creates a world where JavaScript and HTML live in happy harmony in the same files and efficiently renders your ever-changing data to the browser.&lt;/p&gt;
&lt;h2 id=&quot;declarative&quot;&gt;&lt;a href=&quot;#declarative&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declarative&lt;/h2&gt;
&lt;p&gt;With React, you can create reusable components that will always render the same data in the same way, which wasn’t always the case pre-React. Let’s say you’re a huge Olympics fan and you build a React website for tracking scores. Users who visit your site won’t need to wait for the entire tree to deconstruct and reconstruct when they click a button on your site or when the newest data on the half-pipe is available. React components will efficiently update to accommodate the changing data.&lt;/p&gt;
&lt;h2 id=&quot;reactive&quot;&gt;&lt;a href=&quot;#reactive&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactive&lt;/h2&gt;
&lt;p&gt;React uses a virtual tree reconciliation method to &lt;em&gt;react&lt;/em&gt; to changes in input data. Whenever any data changes, instead of rebuilding the whole DOM tree (which would be slow) — it decides what changed in its virtual DOM and then makes the smallest number of DOM changes necessary.&lt;/p&gt;
&lt;p&gt;Almost all frameworks nowadays (e.g. Angular, Vue, etc.) are approaching similar mechanisms. The virtual tree is in contrast to something like vanilla JS or jQuery where you are setting/updating DOM nodes directly.&lt;/p&gt;
&lt;h2 id=&quot;easy-to-add-to-the-rest-of-your-stack&quot;&gt;&lt;a href=&quot;#easy-to-add-to-the-rest-of-your-stack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Easy to add to the rest of your stack&lt;/h2&gt;
&lt;p&gt;Switching your site(s) to new technologies optimally involves incrementally transferring your site over, page by page, to the new technology. This is difficult to do with some new frontend technologies which want to control the entire page. These technologies are like your friend who wants to take over every social event they get invited to.&lt;/p&gt;
&lt;p&gt;React is not picky; it is happy to be used in only parts of your site, so you can incrementally refactor your code in React. It’s more like an easy-going friend who is happy to help with just part of the party you’re throwing. It plays nicely with others!&lt;/p&gt;
&lt;h2 id=&quot;component-based&quot;&gt;&lt;a href=&quot;#component-based&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component-Based&lt;/h2&gt;
&lt;p&gt;React components and subcomponents tend to come from breaking your website down into the smallest bits possible, using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;single responsibility principle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example, in a To-Do list, the hierarchy of components would include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Whole list&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;add a to-do line&lt;/li&gt;
&lt;li&gt;to-do line&lt;/li&gt;
&lt;li&gt;subtasks within to-dos&lt;/li&gt;
&lt;li&gt;show completed to-dos button&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;to-do-list.png&quot; alt=&quot;To-Do List&quot;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://reactjs.org/docs/thinking-in-react.html&quot;&gt;Reactjs.org website recommends&lt;/a&gt; that you work with your designer(s) when creating a hierarchy of React components and subcomponents, because the designers probably already have names for each small piece of the design, and you can make sure your components have the same names.&lt;/p&gt;
&lt;p&gt;React components work just like other functions in any programming language because we call components with some input (called “property” in React) and spit out an output (a chunk of UI in React). Also, components are reusable and can contain other components. All these things are the same as other functions in other programming languages.&lt;/p&gt;
&lt;h2 id=&quot;using-react-with-gatsby&quot;&gt;&lt;a href=&quot;#using-react-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using React with Gatsby&lt;/h2&gt;
&lt;p&gt;GatsbyJS is a great way to build websites with React and actually solves some unique problems by making the following things more straightforward:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Pulling in data:&lt;/em&gt; In Gatsby, GraphQL and plugins help you use data from nearly any source (including both traditional CMSs and headless CMSs. Some people I’ve talked to recently even built their Gatsby sites with Google sheets as the data source.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Creating pages and routes:&lt;/em&gt; Gatsby also gives you an intuitive interface for creating pages and routes. So intuitive, in fact, that when I talked to a coworker, I said, “I remember creating pages and links to those pages from other pages, but I don’t remember creating any routes in Gatsby.” They responded, “Yeah, Gatsby took care of that for you.”&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Solving performance problems:&lt;/em&gt; Gatsby sites rarely have performance problems due to Gatsby’s way of loading static files.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gatsby combines the awesomeness of React with all the friendly helpfulness you’d hope for in a modern PWA framework. Happy coding, and let us know how it goes by joining us on &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;Github&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Announcing Gatsby Manor, themes for Gatsby 🎉🎊]]></title><description><![CDATA[I am proud to announce  Gatsby Manor , a gallery
of themes for Gatsby. After 5 months of
development, Gatsby Manor is now in public alpha…]]></description><link>https://www.gatsbyjs.org/blog/2018-02-09-announcing-gatsby-manor-themes-for-gatsbyjs/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-02-09-announcing-gatsby-manor-themes-for-gatsbyjs/</guid><dc:creator><![CDATA[Steven Natera]]></dc:creator><content:encoded>&lt;p&gt;I am proud to announce &lt;a href=&quot;https://www.gatsbymanor.com/&quot;&gt;Gatsby Manor&lt;/a&gt;, a gallery
of themes for Gatsby. After 5 months of
development, Gatsby Manor is now in public alpha. Check out our
&lt;a href=&quot;https://www.gatsbymanor.com/themes&quot;&gt;themes&lt;/a&gt; then use our &lt;a href=&quot;https://www.gatsbymanor.com/docs/quick-start/getting-started&quot;&gt;getting started&lt;/a&gt; guide to
kickstart your Gatsby project.&lt;/p&gt;
&lt;h2 id=&quot;overview&quot;&gt;&lt;a href=&quot;#overview&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Gatsby Manor is built on top of Gatsby to provide a painless way of building
websites with reusable React components we call themes. We even have a
cleverly named npm module for theme management called
&lt;a href=&quot;https://github.com/gatsbymanor/gatsby-jay&quot;&gt;Jay&lt;/a&gt; 😄.&lt;/p&gt;
&lt;p&gt;With Jay you can download a theme from our collection, and mount it as a default
theme. Styles are applied instantly without server restarts or additional lines
of code. Because of React, interactivity is supported out of the box.&lt;/p&gt;
&lt;p&gt;Want to switch themes? No problem. Jay can archive themes for later use in a
themes folder in your local directory. Edit and swap themes as often as you want
and Jay will manage the process. Want to learn more? Read our
&lt;a href=&quot;https://www.gatsbymanor.com/docs/cli/&quot;&gt;docs&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;how-it-all-started&quot;&gt;&lt;a href=&quot;#how-it-all-started&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it all started&lt;/h2&gt;
&lt;p&gt;The idea began when I decided to update my personal website. I wanted a way to
rebuild my website with ease however the approaches were less than exciting.&lt;/p&gt;
&lt;p&gt;Building a new site myself would require a lot of time. My imagination often
runs wild when it comes to web design and what is supposed take a day of work
turns into weeks of site iterations. The joys of web development often causes me
to over-engineer simple websites. Not to mention that building a development
environment alone is the biggest requirement when starting from scratch.
Therefore another option needed to be explored.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://wordpress.org/&quot;&gt;Wordpress&lt;/a&gt; would be the fastest solution to build a
website but I wanted to be able to rapidly prototype on customs themes.
Unfortunately, understanding the architecture to develop themes on this stack
would require additional time. Not to mention I dislike PHP (#sorryNotSorry 😅)
therefore this option was a clear loser. I tried &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; and
&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. They gave me the right mix of speed and
control. But their templating languages were unappealing as long term options.&lt;/p&gt;
&lt;p&gt;When I stumbled onto Gatsby, I found the golden goose. I already worked with
React before, therefore I could prototype rapidly. The development environment
gave me a tight feedback loop out of the box. And I had all the control in the
world for enhanced interactive features.&lt;/p&gt;
&lt;h2 id=&quot;the-development-process&quot;&gt;&lt;a href=&quot;#the-development-process&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The development process&lt;/h2&gt;
&lt;p&gt;Once settled on Gatsby, I started working on my personal website. Within 2
hours I wanted to prototype with different design elements because I found
inspiration from &lt;a href=&quot;https://html5up.net/&quot;&gt;html5up&lt;/a&gt; templates. However I did not
want to discard my work so far.&lt;/p&gt;
&lt;p&gt;I decided to make a new directory to store my outdated work, like a true digital
hoarder. A few more hours passed and I found myself yarning for
my original design choice because the new design was too complex. I knew this
situation would occur again (sometimes I can be indecisive 😅) so I decided to build
a small cli tool to switch between themes easily. But first I needed a name, and
Jay seemed the most clever since I was working with Gatsby.&lt;/p&gt;
&lt;p&gt;As I was debugging code one day, I stumbled onto a feature request for a
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/2662&quot;&gt;theme system&lt;/a&gt;. At that moment,
I decided I was going to build a theme solution for the community. Five
months later, Gatsby Manor was born.&lt;/p&gt;
&lt;h2 id=&quot;final-notes&quot;&gt;&lt;a href=&quot;#final-notes&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final notes&lt;/h2&gt;
&lt;p&gt;Gatsby Manor is in public alpha stage. There are plenty of
&lt;a href=&quot;https://github.com/gatsbymanor&quot;&gt;Github&lt;/a&gt; contributions to go around. To get
started, try out a Gatsby Manor theme using our tutorial on &lt;a href=&quot;https://www.gatsbymanor.com/docs/quick-start/getting-started&quot;&gt;getting started&lt;/a&gt;. Open an
issue if you see an area of improvement. Follow and send us positive vibes on
Twitter using &lt;a href=&quot;https://twitter.com/TheGatsbyManor&quot;&gt;@TheGatsbyManor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;TL;DR &lt;a href=&quot;https://www.gatsbymanor.com/&quot;&gt;Gatsby Manor&lt;/a&gt; is a place to get themes for
your Gatsby project. Use our &lt;a href=&quot;https://www.gatsbymanor.com/docs/quick-start/getting-started&quot;&gt;getting started&lt;/a&gt; tutorial to use
a &lt;a href=&quot;https://www.gatsbymanor.com/themes&quot;&gt;theme&lt;/a&gt; in your Gatsby project today.&lt;/p&gt;
&lt;p&gt;Cheers! 🎉🎊&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/stevennatera&quot;&gt;@StevenNatera&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[JAM Out Your Blog - Gatsby + Prose + Netlify]]></title><description><![CDATA[If you’re reading this, chances are you’ve heard a thing or two about Gatsby. Let me take you through a  jamstacked  workflow that is…]]></description><link>https://www.gatsbyjs.org/blog/2018-2-7-jam-out-your-blog/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-2-7-jam-out-your-blog/</guid><dc:creator><![CDATA[Vlad Pasculescu]]></dc:creator><content:encoded>&lt;p&gt;If you’re reading this, chances are you’ve heard a thing or two about Gatsby. Let me take you through a &lt;em&gt;jamstacked&lt;/em&gt; workflow that is friendly to both developers, as well as content-creators.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;jam-header.jpg&quot; alt=&quot;JAM Out Your Blog Header Image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;intro&quot;&gt;&lt;a href=&quot;#intro&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Intro&lt;/h2&gt;
&lt;p&gt;As a freelance developer, the business person inside of me is constantly looking for ways to streamline the development process. At the same time, the inner developer is looking for the most modern development experience. If you add this working with non-technical content-creators, it becomes quite the balancing act.&lt;/p&gt;
&lt;p&gt;I’m willing to assume that many readers have been here before and are currently cringing in unison. Luckily, I found a solution.&lt;/p&gt;
&lt;p&gt;My goal here is to share a tool set helps bring order to my freelance chaos. I’ll be walking through a workflow that’s ideal for personal blogs and hand-off projects where some sort of a CMS is in scope.&lt;/p&gt;
&lt;p&gt;I’ll also be referencing a wonderful article written by Josh Weaver, &lt;a href=&quot;https://www.gatsbyjs.org/blog/2017-12-06-gatsby-plus-contentful-plus-netlify/&quot;&gt;Gatsby + Contentful + Netlify (and Algolia)&lt;/a&gt;. Josh’s article spoke to my goals and frustrations perfectly and inspired me to share this alternative approach.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Let’s get into it.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/WDtCGLCXBAgow&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/tom-cruise-top-gun-WDtCGLCXBAgow&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;my-requirements&quot;&gt;&lt;a href=&quot;#my-requirements&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;My Requirements&lt;/h2&gt;
&lt;h3 id=&quot;like-joshs-requirements-my-list-includes&quot;&gt;&lt;a href=&quot;#like-joshs-requirements-my-list-includes&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Like Josh’s requirements, my list includes:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Speed&lt;/strong&gt; - this includes development, website performance, and deployment&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Development Experience&lt;/strong&gt; - I want to use React and Webpack&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maintainability&lt;/strong&gt; - ease with which anyone can create, update and delete posts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt; - need to make sure that performance is not hindered by a growing needs&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lean&lt;/strong&gt; - simplify the tools and services use to a bare minimum&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Revision History&lt;/strong&gt; - for accountability and allowing for versioning&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inexpensive Hosting&lt;/strong&gt; - again, to maximize value and keep personal costs down&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NO WordPress&lt;/strong&gt; - similarly, I don’t want to deal with updates, themes, hacks…etc&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous Deployment&lt;/strong&gt; - the site needs to always be up and running and current&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the sake of brevity, let’s infer that speed, development experience, scalability and lack of WordPress will be handled by Gatsby and the JAMstack. If you’re unfamiliar, take a look at &lt;a href=&quot;http://jamstack.org/&quot;&gt;http://jamstack.org/. &lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;cms-induced-headaches&quot;&gt;&lt;a href=&quot;#cms-induced-headaches&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CMS-Induced Headaches&lt;/h2&gt;
&lt;p&gt;From a non-technical content-creator perspective, more UI and less code is ideal. So if we want to avoid WordPress, how can we provide the experience of a simple login where a user can create, edit and publish posts?&lt;/p&gt;
&lt;p&gt;Josh’s article provides a solution by way of using Contentful to manage content on his company’s documentation website.&lt;/p&gt;
&lt;h3 id=&quot;here-are-some-pros-at-the-time-of-writing&quot;&gt;&lt;a href=&quot;#here-are-some-pros-at-the-time-of-writing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Here are some Pros (at the time of writing):&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clean UI&lt;/li&gt;
&lt;li&gt;Free Tier&lt;/li&gt;
&lt;li&gt;User Roles (admins, editors, content authors)&lt;/li&gt;
&lt;li&gt;Comprehensive tutorials&lt;/li&gt;
&lt;li&gt;Fully-customizable front end&lt;/li&gt;
&lt;li&gt;Article search and filters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With such a robust set of features, it is easy to see why Contentful is a popular service. However, between a combination of having no prior experience with the platorm, and wanting to keep things simple, I ran into issues, and felt that it was &lt;em&gt;too&lt;/em&gt; robust for my project goals.&lt;/p&gt;
&lt;p&gt;While, a fully-customizable front end may seem really flexible, &lt;em&gt;&lt;strong&gt;there is NOTHING set up when you create a new project.&lt;/strong&gt;&lt;/em&gt; You will have to create your own content models for blog posts and use GraphQL to query for each blog post type you set up.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/16e1J9ztaZ3na&quot;  width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/bored-kanye-west-16e1J9ztaZ3na&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you’re like me and have no previous experience with Contentful, expect a few headaches. Your first time working with the service will involve a great deal of trial and error to get content/posts into your Gatsby website. Couple this with being a GraphQL newbie (like me), and you will get frustrated…&lt;em&gt;&lt;strong&gt;very quickly&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;All I wanted to do was streamline my process and here I was adding another service into the mix and creating more work for myself. No bueno.&lt;/p&gt;
&lt;p&gt;To spare you the details, I spent a few hours comparing my GraphQL queries to those used in the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-contentful&quot;&gt;Gatsby + Contentful example&lt;/a&gt; to find errors in my code. I eventually gave up and I thought that there had to be an easier way to manage content online. Luckily there is. It’s called Prose.&lt;/p&gt;
&lt;h2 id=&quot;managing-content-via-github-enter-proseio&quot;&gt;&lt;a href=&quot;#managing-content-via-github-enter-proseio&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing Content Via Github: Enter Prose.io&lt;/h2&gt;
&lt;p&gt;Prose was originally created for editing markdown files on GitHub by the people at &lt;a href=&quot;https://developmentseed.org/&quot;&gt;Development Seed&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;here-is-a-summary&quot;&gt;&lt;a href=&quot;#here-is-a-summary&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Here is a summary:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Simple Content Authoring Environment&lt;/li&gt;
&lt;li&gt;Designed for CMS-Free Websites&lt;/li&gt;
&lt;li&gt;Web-based Interface for Managing Content Directly on Github&lt;/li&gt;
&lt;li&gt;Advanced Support for Markdown Content - Including Syntax Highlighting &amp;#x26; Formatting Toolbar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a href=&quot;http://prose.io/#about&quot;&gt;Prose&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, a service that works on top of Github where I, or anyone with a Github account can quickly create and manage posts. Sick!&lt;/p&gt;
&lt;h4 id=&quot;follow-these-steps&quot;&gt;&lt;a href=&quot;#follow-these-steps&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Follow these steps:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Set up a repository for the website.&lt;/li&gt;
&lt;li&gt;Share access to the repo with anyone on your team.&lt;/li&gt;
&lt;li&gt;Log in via &lt;a href=&quot;http://prose.io/&quot;&gt;Prose.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Select your website’s repo from the Prose interface.&lt;/li&gt;
&lt;li&gt;Done. You can edit existing posts, preview posts, and commit any changes directly within the interface.
set up a repository for the website&lt;/li&gt;
&lt;/ol&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/l0HlDtKDqfGGQtwic&quot;  width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot;  allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/emmys-emmy-awards-emmys-2016-l0HlDtKDqfGGQtwic&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Yes, there’s more.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Because Prose was built for Jekyll, it recognizes any headmatter you add to your .md files. This will give developers the ability to build queries and replicate familiar features from other CMS platforms. Say hello to publish states, publish date, article author and more.&lt;/p&gt;
&lt;p&gt;I should also mention that Prose is an open source project that is available for download if you wish to self-host. Check out the &lt;a href=&quot;https://github.com/prose/prose&quot;&gt;documentation on Github.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;get-lean-and-get-on-netlify&quot;&gt;&lt;a href=&quot;#get-lean-and-get-on-netlify&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Lean and Get on Netlify&lt;/h2&gt;
&lt;p&gt;Let’s summarize where we are and why &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; will take care of the rest.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;[ ] lean - simplify the tools and services use to a bare minimum&quot;&gt;
      &lt;pre class=&quot;language-[ ] lean - simplify the tools and services use to a bare minimum&quot;&gt;&lt;code class=&quot;language-[ ] lean - simplify the tools and services use to a bare minimum&quot;&gt;[ ] Inexpensive Hosting - again, to maximize value and keep personal costs down

[ ] Continuous Deployment - the site needs to always be up and running and current

[x] Speed - this includes development, website performance, and deployment

[x] Development Experience - I want to use React and Webpack

[x] Maintainability - ease with which anyone can create, update and delete posts

[x] Scalability - need to make sure that performance is not hindered by a growing needs

[x] Revision History - for accountability and allowing for versioning

[x] NO WordPress - similarly, I don’t want to deal with updates, themes, hacks...etc&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;When it comes to continuous deployment and inexpensive hosting, using Netlify is, as Josh mentions “ a no brainer.”  Check out &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;Netlify’s features here&lt;/a&gt; for a more in-depth look.&lt;/p&gt;
&lt;p&gt;With streamlining in mind, a workflow doesn’t get any leaner than working within the confines of Github and Netlify. Think about the magic:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use Gatsby to create your website.&lt;/li&gt;
&lt;li&gt;Set up a GitHub repository to track changes and version history.&lt;/li&gt;
&lt;li&gt;Once ready, deploy your repository to Netlify.&lt;/li&gt;
&lt;li&gt;Use Prose (which accesses your GitHub), to create, edit and commit posts.&lt;/li&gt;
&lt;li&gt;Netlify sees the update to the repository and re-renders the website.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With this process in place, content creators do not need to understand Markdown, React, Git or Netlify. They can simply log into Prose and start writing. All the developer has to do is share the repository.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;It just works.&lt;/strong&gt;&lt;/em&gt; 🤙🏼&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/3oFzmqDNycyhUcrjTW&quot;  width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot;  allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/nba-celebrity-3oFzmqDNycyhUcrjTW&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;concluding-thoughts&quot;&gt;&lt;a href=&quot;#concluding-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concluding Thoughts&lt;/h2&gt;
&lt;p&gt;With all of that said, this process has a few caveats related to working within Prose that I must address:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you follow a folder structure enclosing an index.md file for your posts, you will need to add the new folder within the URL of the post&lt;/li&gt;
&lt;li&gt;Inserting an image adds extra markup which you will need to remove for an image to show up within your post. Prose will upload the image within the same directory as your index.md file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;default&quot;&gt;&lt;a href=&quot;#default&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;before-post-title.png&quot; alt=&quot;Default Prose image path&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;after-this-will-work&quot;&gt;&lt;a href=&quot;#after-this-will-work&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;After (this will work)&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;after-post-title.png&quot; alt=&quot;After image path change&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;You must commit a file by hitting the save icon or else the file is not saved. Posts cannot be saved as drafts in Prose. So, you will have to build the functionality within your headmatter and query posts based upon a draft/published state (if you need it).&lt;/li&gt;
&lt;li&gt;Whoever will be posting will need to manually add headmatter to each .md file. Be warned that there is no specific area to do so. But after it’s added, a fourth icon appears in the right pane where you can then edit and add other post details.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I hope you try playing around with this workflow yourself with a Gatsby starter and see if this works for you. Gatsby provides incredible tools that “just work” without sacrificing an exciting development environment. If you pair it with Netlify and Prose, you will cut overhead and manage content directly from a GitHub repository. Let this approach bring some order to the chaos.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Thank you for reading…Now get to hacking.&lt;/strong&gt;&lt;/em&gt; ✌🏼&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Picking a back-end for GatsbyJS]]></title><description><![CDATA[A little while ago I had the six-monthly itch to redo my portfolio site, and I decided I was going to learn to use Gatsby. But that seems to…]]></description><link>https://www.gatsbyjs.org/blog/2018-2-6-choosing-a-back-end/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-2-6-choosing-a-back-end/</guid><dc:creator><![CDATA[Ross Whitehouse]]></dc:creator><content:encoded>&lt;p&gt;A little while ago I had the six-monthly itch to redo my portfolio site, and I decided I was going to learn to use Gatsby. But that seems to be only half the battle. After you’ve built your front-end, how do you decide on the back-end? There’s so many out there!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsby.jpeg&quot; alt=&quot;GatsbyJS&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;background---why-gatsby&quot;&gt;&lt;a href=&quot;#background---why-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background - Why Gatsby?&lt;/h2&gt;
&lt;p&gt;The only thing as abundant than Headless CMS options is Static Site Generator options. From Hugo (built on Google’s Go language) to Jekyll (Ruby) and even Nuxt which is based on VueJS. I picked Gatsby out of the pack for a number of reasons, chief amongst which is that I’m professionally a React.js developer, so getting to use React in these quick projects is a great benefit.&lt;/p&gt;
&lt;p&gt;Gatsby pitches as a “Blazing-fast static site generator for React”. So if I can build sites, but also encompass some React knowledge, all the better right? And I’m always looking for side-projects and sites for others, so if I can get a JAMstack sorted quicker and easier than my previous WordPress stack, then all the better going forward! I thought it was best to start with my own site, to test the viability.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What-stack?&lt;/strong&gt; JAM stands for JavaScript, API, Markup. There are lots of benefits to this type of site, but the one I’m interested in is that your CMS is detached from your site - no hefty WordPress build for your tiny blog site.
&lt;a href=&quot;https://jamstack.org/&quot;&gt;You can read more on the JAMstack website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found Gatsby a real pleasure. You can find tutorials on their site for setup and once you see the code it’s fairly simple. I can personally recommend &lt;a href=&quot;https://www.youtube.com/watch?v=b2H7fWhQcdE&amp;#x26;list=PLLnpHn493BHHfoINKLELxDch3uJlSapxg&quot;&gt;Scott Tolinski’s series - available on Youtube&lt;/a&gt;. Gatsby nicely wraps up React and React Router with a nice folder structure, webkit, ES6, SASS support and - importantly - GraphQL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;What-QL?&lt;/strong&gt; GraphQL is a query language for APIs. Where in the WordPress Days I’d have to get the whole post just to display the title, with GraphQL I can tell the API to give me just the title.
&lt;a href=&quot;http://graphql.org/&quot;&gt;Their site is pretty handy too&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got the site setup pretty quickly after learning about it. There’s a tonne of tutorials and instructional material around. And you can use as much or as little React as you want. There’s also a &lt;a href=&quot;/docs/plugins/&quot;&gt;massive list of available plugins&lt;/a&gt;, which is only going to grow.&lt;/p&gt;
&lt;p&gt;So if you have any experience with React, or if you’re just getting started, this is a great choice. Gatsby doesn’t tell you how your code has to look. In fact it’s setup so you can use Markdown files for pages, but I didn’t fancy that, so I don’t. Simple as that! Likewise, if I want to scale this to build websites for other people, I don’t want to spend ages teaching them how to use Markdown, clone a git repo and add it to the git repo. Queue a Headless CMS.&lt;/p&gt;
&lt;p&gt;You build your site. You’ve got your SASS, you’ve got your Markdown files (or not), but everything’s blank! So now what? How do we populate it with content?&lt;/p&gt;
&lt;h2 id=&quot;the-next-step-a-back-end&quot;&gt;&lt;a href=&quot;#the-next-step-a-back-end&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Next Step: A back-end&lt;/h2&gt;
&lt;p&gt;Now we need a system to manage and deliver our content in a nice API (instructed by our GraphQL of course). And there’s a whole bunch of them about. To help us out, Gatsby has plugins that cater to some Headless CMS like the WordPress API, Contentful, Cockpit, Prismic and NetlifyCMS - which Gatsby actually has a guide for. I’ll be going through a few of these to see which one might be more useful for this small project, and going forward.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After posting this, I heard some really good thing about &lt;a href=&quot;https://graphcms.com/&quot;&gt;GraphCMS&lt;/a&gt; - It’s designed to work with GraphQL inherently and they have a &lt;a href=&quot;https://github.com/GraphCMS/graphcms-examples/tree/master/gatsby-source-plugin-blog&quot;&gt;Gatsby Starter Project&lt;/a&gt; example to check out.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Firstly, though, why do we want a Headless CMS and a JAMstack for the project? There are a few reasons most people use them, and some that are down to personal preference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Easy setup!&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No back-end code.&lt;/strong&gt; I’m a front-end dev and honestly don’t want to spend hours setting up some PHP that I won’t enjoy. Gimme the good stuff.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No server needed.&lt;/strong&gt; Cloud CMSs mean that I don’t need to pay the hosting people to setup an SQL database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easy to edit.&lt;/strong&gt; If I need to edit a site on the fly or have a client who needs to do the same, they don’t need to touch any code or run to their home workstation to fix a spelling error. They can access it anywhere.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;contentful.png&quot; alt=&quot;Contenful&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;contentful&quot;&gt;&lt;a href=&quot;#contentful&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contentful&lt;/h3&gt;
&lt;p&gt;This is the one I’ve heard the most about in my research. Contentful is big and well-known - used by over 130 thousand developers if their website is to be believed. I also like their description “Fast. Flexible. Future-proof. It’s everything your CMS isn’t.” It might as well say “My CMS could beat up your CMS.”&lt;/p&gt;
&lt;p&gt;With all the acclaim, however, can come a hefty price tag. Contentful does have a free tier if you display their logo in the footer, you can keep up to 10,000 records and have 3 users - which isn’t bad at all. For my personal site I’m happy to plaster whatever attribution on the bottom. If you wanted to use this for a client and they were dead against someone else’s logo being on there, you can go up a half-tier with the same spec for $39 a month.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;contentful-pricing.png&quot; alt=&quot;Contentful&amp;#x27;s Pricing Packages&quot;&gt;&lt;/p&gt;
&lt;p&gt;From the paid Developer edition upwards, it seems a pretty steep fee, especially compared to some others. That said, if you’ve got a client willing to fork out a hot $949, why not?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;contentful-project.png&quot; alt=&quot;A quick sample project&quot;&gt;&lt;/p&gt;
&lt;p&gt;As soon as you sign up (for free) you get access to a dashboard with some dummy content and links to tutorial videos*. You can see the dashboard with all of your content types. I setup a ‘Page’ type for the text on my pages. You could do posts or other custom types.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;* In the videos the guy pronounces Contentful like ‘content’ as in pleased or satisfied. I always thought it was Contentful with ‘content’ as in CMS. But what do I know? He works there.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;contentful-page.png&quot; alt=&quot;Contentful&amp;#x27;s well-laid-out post-types&quot;&gt;&lt;/p&gt;
&lt;p&gt;You then setup your fields, choosing from a big list. If you want a simple Title/Body you can set it up as above, or you can use times and dates, images, whole JSON Objects and more. You can also localise fields to only show in certain countries, make them required, and how they appear in the CMS. For example, I couldn’t see how to create a checkbox (as there isn’t a field-type for it), but if you create a Short text field you have the option to only allow certain values. Then, you can set the CMS-appearance to a drop-down or some radio buttons. I’d have liked that to be an option as soon as I add a field - something like WordPress’ custom fields - but once you know it’s there it makes sense.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;contentful-fields.png&quot; alt=&quot;There are loads of field types available!&quot;&gt;&lt;/p&gt;
&lt;p&gt;Contentful looks like a fantastic service. It isn’t perfect but it checks all my boxes — and what do you want for nothing? It’s definitely the one to beat.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;wp.jpeg&quot; alt=&quot;WP&amp;#x27;s REST API&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;wordpress-rest-api&quot;&gt;&lt;a href=&quot;#wordpress-rest-api&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WordPress’ REST API&lt;/h3&gt;
&lt;p&gt;Ever since I started coding I’ve used WordPress as a traditional CMS. I’m familiar with how it works, the terminology and documentation. I know that WordPress is very very well-documented. The API includes ACF - a plugin known to most if not all WP devs and theme builders - which opens the posts out to accept all sorts of different fields. In fact, one of my issues about Contentful was based on my much-longer-term experience with ACF and WP.&lt;/p&gt;
&lt;p&gt;I’m sure I don’t need to spend too much time telling you the benefits of WordPress. The support is great, the interface is great, and it scales wonderfully. In fact WordPress boasts 29% of the entire internet uses their service. That’s absolutely huge. There are a million and one plugins for everything from SEO to E-commerce, Custom Post Types, Custom Fields and more.&lt;/p&gt;
&lt;p&gt;How does this hook up to our Gatsby build, then? Well if you have WordPress.com - WP’s free blogging platform - you can do it automatically for free. If you have WordPress.org - the big-brother that allows custom development - then you’ll need to host that somewhere (possibly free, but more likely paid-for if you get much traffic). My issue with the WP API is that I wanted something that would strip me of the usual server-database setup. But that’s what I’d need to run a WordPress.org CMS - even in a decoupled capacity. I really just one a one-stop-cloud-shop for my CMS like Contentful.&lt;/p&gt;
&lt;p&gt;The WordPress.com option is one to consider. They have a &lt;a href=&quot;https://developer.wordpress.com/2016/11/11/wordpress-rest-api-on-wordpress-com/&quot;&gt;developer blog&lt;/a&gt; about how to get started, which links to a really cool &lt;a href=&quot;https://developer.wordpress.com/docs/api/console/&quot;&gt;API console&lt;/a&gt; where you can experiment with the different types of requests you can make. In fact Gatsby makes this easier with the &lt;a href=&quot;/packages/gatsby-source-wordpress&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-wordpress&lt;/code&gt; plugin&lt;/a&gt;. In your Gatsby configuration file you set the URL of your WP install. Then in your WordPress site, &lt;a href=&quot;http://developer.wordpress.com/apps/&quot;&gt;configure a new App&lt;/a&gt;, and your data is ready to be pulled down using a GraphQL Query.&lt;/p&gt;
&lt;p&gt;A lot of this information came from a &lt;a href=&quot;https://jeremey.blog/gatsby-photo/&quot;&gt;fantastic tutorial by Jeremey Duvall&lt;/a&gt;. He goes through Gatsby, WordPress.com setup and hooking it up with GraphQL. It’s the whole setup right there.&lt;/p&gt;
&lt;p&gt;The only problem with the WordPress.com setup is that it’s restricted to posts and pages that boil down to title/image/content. If you want ACF or other plugins you’re going to need a paid-for WP package, which harks back to the WordPress.org issue: I can’t use it without paying for it.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;netlifycms&quot;&gt;&lt;a href=&quot;#netlifycms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NetlifyCMS&lt;/h3&gt;
&lt;p&gt;We’ll be hearing more about Netlify in another article - their original product is a CDN for your entire site, and I’ll be writing more about serving your Gatsby site - but right now we’ll focus on their CMS. Firstly, it’s build on React, so it’s a good bet it’ll play nice with Gatsby (not to mention the Gatsby plugin I mentioned earlier).&lt;/p&gt;
&lt;p&gt;One big difference from the others here is that the content in NetlifyCMS is kept in your Git repo, meaning that code and content are versioned together. You won’t ever lose content if you still have the repo, and you can see the history at the press of a button - same as you can with your code.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/docs/netlify-cms/&quot;&gt;Gatsby has a handy tutorial for NetlifyCMS&lt;/a&gt; but they do stress that in order to save to Github etc, you will need your own server:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To save your content in a Git repo, the repo will need to be hosted on a service like GitHub, and you’ll need a way to authenticate with that service so Netlify CMS can make changes through the service’s API. For most services, including GitHub, authentication will require a server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They also say, however, that if you use NetlifyCMS with Netlify, they conveniently handle the authenticating for you. Netlify will watch your Git repository for changes and update automatically. This is important to consider that they’re designed to be used together, so if you’re in for one it would benefit you to be in for the other. This isn’t law, but you can see why they’d make it more convenient if you lock into their ecosystem.&lt;/p&gt;
&lt;p&gt;Pedro Duarte has a &lt;a href=&quot;https://medium.com/netlify/jamstack-with-gatsby-netlify-and-netlify-cms-a300735e2c5d&quot;&gt;great article&lt;/a&gt; about using Gatsby with both Netlify and NetlifyCMS.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;best-of-the-rest---prismicio--cockpit&quot;&gt;&lt;a href=&quot;#best-of-the-rest---prismicio--cockpit&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Best of the rest - Prismic.io &amp;#x26; Cockpit&lt;/h3&gt;
&lt;p&gt;Prismic is sort of a Contentful-like service that does basically the same thing with a few differences. I’m greeted to a post-type-creator similar to Contentful’s, I can create an editor with a number of fields similar such as Title, Body, Image, Location, Link, Color.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;prismic.png&quot; alt=&quot;Prismic&amp;#x27;s CMS&quot;&gt;&lt;/p&gt;
&lt;p&gt;Prismic has a similar pricing structure to Contentful - but has a few more options at the budget-end. In fact the only difference between the 3 smaller tiers is the number of users you can add to the CMS. Further than that there are some more premium versions with up to an infinite amount of users and some fancy features like user roles and collaboration. Certainly for bigger projects and bigger clients that would be useful.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;prismic-pricing.png&quot; alt=&quot;They do have more pricing options than Contentful&quot;&gt;&lt;/p&gt;
&lt;p&gt;Cockpit also seems to share a lot of the same features except for two big differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It’s open source - anyone can download it, anyone can contribute to the git repository and improve it, meaning it’s fully free and will be available - in one form or another - forever. I could see an issue with Contentful if the service ever stopped working. They have backups on AWS and create nightly backups on their premium plans, but the actual interface may become unavailable. Because Cockpit is open source they could go out of business or go offline for a night or just stop working altogether, and there’s a repo available with your CMS on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It’s self-hosted - this ties into the last point and if it did all come crashing down, as long as your site is still active so will your CMS be. Great news for the tech-paranoid!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;conclusion---which-back-end-is-right&quot;&gt;&lt;a href=&quot;#conclusion---which-back-end-is-right&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion - Which Back-End is right?&lt;/h2&gt;
&lt;p&gt;If nothing else, writing this article has given me a checklist that I need a CMS to fulfil. Some other CMSs have great features, but a couple of them are much more important to my use-case than others.&lt;/p&gt;
&lt;h3 id=&quot;free-option&quot;&gt;&lt;a href=&quot;#free-option&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Free Option&lt;/h3&gt;
&lt;p&gt;This is the top of the list. If I’m just messing about with the system, I don’t want to be forking out. If I have a larger project with a client who has actual money, then I’d reconsider. Also to this point I’d like it to be scalable. If I make a friend’s small site with Gatsby, and then overnight his company becomes million-pound business, I want to be able to upgrade the CMS to handle an increase in users or posts.&lt;/p&gt;
&lt;h3 id=&quot;ease-of-use&quot;&gt;&lt;a href=&quot;#ease-of-use&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ease Of Use&lt;/h3&gt;
&lt;p&gt;Cloud-hosted or Git-hosted seem to be the best for this. I don’t need a server to run them and I can control it all in one place. The UI needs to be easy enough for a non-developer and it’d be nice if the system was well-supported so I could get help with issues when needed.&lt;/p&gt;
&lt;p&gt;In terms of which CMS to go with, they all have great merits and I can see them all being useful for different projects. But for my needs - for smaller side projects and for personal sites - Contentful and Prismic seem like the ones to go for. They’re both cloud-based with minimal setup and work via an API so I can access them wherever I need to. Also their free tiers have great features, and scale easily so that if I have a ‘proper’ project, I can get a version that will suit any needs.&lt;/p&gt;
&lt;p&gt;Was this post useful? Do you use any of these CMSs, or a different one? Please let me know, I’d love to hear about how you get one with them. And look out for a future post about hosting. I mentioned that NetlifyCMS runs great with Netlify, but there are other options! I’ll be looking at Github Pages, Heroku and more!&lt;/p&gt;
&lt;p&gt;You can find me on &lt;a href=&quot;https://twitter.com/RossWhitehouse&quot;&gt;Twitter&lt;/a&gt; and &lt;a href=&quot;https://www.instagram.com/ross.dw/&quot;&gt;Instagram&lt;/a&gt;, and &lt;a href=&quot;https://medium.com/@RossWhitehouse&quot;&gt;check out my other posts&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building Sites with Headless CMSs]]></title><description><![CDATA[What is a traditional CMS? A traditional Content Management System (CMS)—like Wordpress, Drupal, or Joomla—manages three things for a…]]></description><link>https://www.gatsbyjs.org/blog/2018-2-3-sites-with-headless-cms/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-2-3-sites-with-headless-cms/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;h2 id=&quot;what-is-a-traditional-cms&quot;&gt;&lt;a href=&quot;#what-is-a-traditional-cms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is a traditional CMS?&lt;/h2&gt;
&lt;p&gt;A traditional Content Management System (CMS)—like Wordpress, Drupal, or Joomla—manages three things for a website: content, admin screens, and presentation layer. These three things are tightly integrated, which has advantages. For example, there’s only one system to learn / one vendor relationship, and overall, there may be fewer choices to make. In addition, traditional CMSs have been around for so long that many teams are familiar with them and many websites are already be running on them. Both advantages.&lt;/p&gt;
&lt;p&gt;You can think of a traditional CMS like an old home built by one person and with custom fittings. Gorgeous, and expensive to maintain, like the home in &lt;em&gt;The Money Pit&lt;/em&gt; (1986) with Tom Hanks and Shelley Long.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;money-pit-2.jpeg&quot; alt=&quot;Tom Hanks in a house that is falling apart&quot;&gt;&lt;/p&gt;
&lt;p&gt;Despite the advantages of this scenario, there are also some disadvantages which are listed below.&lt;/p&gt;
&lt;h3 id=&quot;slower-load-times-and-expensive&quot;&gt;&lt;a href=&quot;#slower-load-times-and-expensive&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slower load times AND expensive&lt;/h3&gt;
&lt;p&gt;Most traditional CMSs can’t run on &lt;a href=&quot;https://www.cloudflare.com/learning/cdn/glossary/edge-server/&quot;&gt;edge servers&lt;/a&gt; (servers running CDNs). This results in slower load times the farther away you live from the servers. For example, people often observe that US websites run slowly in Australia. This is not imaginary; when someone in Australia accesses a US site built with a traditional CMS, it has to be sent from far-away servers.&lt;/p&gt;
&lt;h3 id=&quot;hard-to-adapt-content-to-new-formats&quot;&gt;&lt;a href=&quot;#hard-to-adapt-content-to-new-formats&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hard to adapt content to new formats&lt;/h3&gt;
&lt;p&gt;When content exists in a tight relationship with the presentation layer, adapting that content for new formats like smart watches, kiosks, and virtual reality can be challenging and expensive.&lt;/p&gt;
&lt;h2 id=&quot;what-is-a-headless-cms&quot;&gt;&lt;a href=&quot;#what-is-a-headless-cms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is a headless CMS?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“A headless CMS does nothing but manage content. It doesn’t deliver content to humans at all. Rather, it
‘delivers’ content to an application of some type. Its immediate consumer is code, and it’s assumed that
code will reformat the content for final delivery to a human.” - Deane Barker&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To add to Deane Barker’s eloquent explanation in the quote above (see his article &lt;a href=&quot;https://gadgetopia.com/post/9743&quot;&gt;here&lt;/a&gt;), a headless CMS only handles two things—content and managing that content through admin screens. This means that a separate presentation layer (or “head”) like GatsbyJS must reformat the content for delivery to a CDN and then final delivery to humans.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note on how CMSs usually work:&lt;/em&gt; Most headless CMSs require you to create various structures for your content, typically called “content models”, and then enter content into that structure. Content can include words, images, URLs, lists, etc. Then, outside of the CMS, you push this content through a presentation layer (GraphQL queries are one way to do this pushing).&lt;/p&gt;
&lt;p&gt;Following are some advantages to using a headless CMS.&lt;/p&gt;
&lt;h3 id=&quot;faster-load-times-and-cheaper&quot;&gt;&lt;a href=&quot;#faster-load-times-and-cheaper&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faster load times AND cheaper?&lt;/h3&gt;
&lt;p&gt;With much less time (and therefore less money), you can set up a headless CMS with a presentation layer like GatsbyJS and a CDN and get your site running on edge servers.&lt;/p&gt;
&lt;p&gt;Besides being faster and therefore less expensive to set up, this method also produces faster load times for most sites. Let’s say a person in Australia accesses a US site built with a headless CMS and GatsbyJS; the site can run off of a closer server, so it will load quickly. This is an enormous advantage for both the user and for whomever created the site.&lt;/p&gt;
&lt;p&gt;Faster load times can be taken to the next level with sites that run offline. I recently chatted with a friend in New Delhi who used GatsbyJS to build his blog to run offline, which is an incredible advantage for commuters who want to read while on public transportation with spotty internet access.&lt;/p&gt;
&lt;h3 id=&quot;higher-quality-and-cheaper&quot;&gt;&lt;a href=&quot;#higher-quality-and-cheaper&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Higher quality AND cheaper?&lt;/h3&gt;
&lt;p&gt;The separation between a headless CMS and the presentation layer allows both to become highly specialized and efficient, similar to the food production system in the Jetson’s house:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;the-jetsons.jpeg&quot; alt=&quot;The Jetson’s microwave shoots food at them and makes it so easy to eat!&quot;&gt;&lt;/p&gt;
&lt;p&gt;When businesses specialize in one thing instead of several, they tend to become more time-efficient and can produce things at a lower cost. In human terms, this means that headless CMSs tend to cost you less than traditional CMSs, because they cost less up front or they take you less time to maintain.&lt;/p&gt;
&lt;p&gt;This specialization also means that headless CMSs perform well in scenarios in which a traditional CMS would prove inadequate. I’d like to point to Deane Barker’s &lt;a href=&quot;https://gadgetopia.com/post/9743&quot;&gt;excellent article on use cases for headless CMSs&lt;/a&gt;, from which we’ve extracted a partial list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need to gather content from disparate places and pull it together into one platform&lt;/li&gt;
&lt;li&gt;You need to push content to various formats, including desktop sites, mobile sites, smart watches, ads, etc.&lt;/li&gt;
&lt;li&gt;Your developers dislike traditional CMSs, yet the editors and marketing folks prefer to add, edit, and delete content in a familiar editing environment&lt;/li&gt;
&lt;li&gt;You keep a traditional CMS and yet want to add a simpler/cheaper/more structured method for particular projects, types of content, or a specific group of editors&lt;/li&gt;
&lt;li&gt;All of the above! :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In all of these cases, a headless CMS is an excellent solution for you.&lt;/p&gt;
&lt;h2 id=&quot;which-headless-cms-should-i-choose&quot;&gt;&lt;a href=&quot;#which-headless-cms-should-i-choose&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Which headless CMS should I choose?&lt;/h2&gt;
&lt;p&gt;Whether or not you’re convinced that a headless CMS is a good idea, the next step would be to try some out for yourself. I found this handy site with a &lt;a href=&quot;https://headlesscms.org/about/&quot;&gt;list of headless CMSs to keep an eye on&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And here’s what I learned from testing several popular CMSs for five minutes each. (Background: I’m a writer and content editor who knows just enough about developing to get myself into major trouble :)&lt;/p&gt;
&lt;h3 id=&quot;graphcms&quot;&gt;&lt;a href=&quot;#graphcms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphCMS&lt;/h3&gt;
&lt;p&gt;Their sleek design impressed me: the left hand side bar and onboarding process was quick and easy-to-understand. For example, I pretty much understand what web hooks are now, after 30 seconds of going through their tutorial. Very cool. Also, very excited to see their handy API explorer (built-in GraphiQL)! Not totally sure I get the concept called “enumerations” and the names for different kinds of permissions. The one called “create” was confusing because “create” is also a verb, so I expected something to happen when I clicked that button, but nothing happened. I suspect it is the name of one of the roles.&lt;/p&gt;
&lt;h3 id=&quot;buttercms&quot;&gt;&lt;a href=&quot;#buttercms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ButterCMS&lt;/h3&gt;
&lt;p&gt;I’ve read that ButterCMS is particularly good for blogs, and after seeing how easy it is to add metadata and SEO title / metadescription to blog posts, it makes sense why this might be the case. Sometimes there were more clicks than necessary when saving things. And sometimes the jargon in this environment threw me off. Like “object”? What is that? It’s basically a category of content. So, if I’m going to create a lot of event descriptions, the event titles will be one object, the event description, another object, etc. It’s an unfamiliar and abstract word for someone new to headless CMSs.&lt;/p&gt;
&lt;h3 id=&quot;builtio-contentstack&quot;&gt;&lt;a href=&quot;#builtio-contentstack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built.io (Contentstack)&lt;/h3&gt;
&lt;p&gt;I filled out a form to get a free trial and heard back a while later with some questions about the purpose of my trial site, when I expect to go live, where I work, etc. It felt like a bit too much information to provide for a free trial, so I didn’t respond.&lt;/p&gt;
&lt;h3 id=&quot;contentful&quot;&gt;&lt;a href=&quot;#contentful&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contentful&lt;/h3&gt;
&lt;p&gt;I already built this site &lt;a href=&quot;http://watson.surge.sh/&quot;&gt;http://watson.surge.sh/&lt;/a&gt; with Contentful and talk about that experience &lt;a href=&quot;/blog/2018-1-25-building-a-site-with-react-and-contentful/&quot;&gt;here&lt;/a&gt;. Another thing I like about Contentful, which I didn’t mention in the other article, is how smooth it is to toggle between content models (categories of content types). Their recent product update says you can add images inline in chunks of text, which makes the editing experience feel more like using a WYSIWYG. This seems like it would make things easy on the editing side, although I haven’t explored if this would affect image presentation.&lt;/p&gt;
&lt;h3 id=&quot;cloudcms&quot;&gt;&lt;a href=&quot;#cloudcms&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CloudCMS&lt;/h3&gt;
&lt;p&gt;This system gives you lots of options when it comes to creating content. Maybe too many options. For example, the free trial account comes preloaded with a sample project. When I clicked on a sample book description, there was a list of about 12 hyperlinks and because of the sheer number of choices, and the fact that I’m unfamiliar with their terminology, I felt overwhelmed. Otherwise, this system has pixelated graphics and a workflow that was hard to navigate as an editor of content; it felt more like a series of rabbit holes instead of a flow. On the upside, some of the capabilities seem really useful, like a button that said “make it multilingual.” Could it be that easy?&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I’d definitely choose a headless CMS over a traditional CMS if I had talented front-end developers, because they could choose their favorite framework for the presentation layer. That setup would give us the flexibility to switch delivery methods, presentation methods, and content management methods with agility.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building a Site with React and Contentful]]></title><description><![CDATA[A poster of  Starry Night  by Vincent Van Gogh followed me to each new dorm room in college until it ripped beyond repair. I loved that…]]></description><link>https://www.gatsbyjs.org/blog/2018-1-25-building-a-site-with-react-and-contentful/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-1-25-building-a-site-with-react-and-contentful/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;p&gt;A poster of &lt;em&gt;Starry Night&lt;/em&gt; by Vincent Van Gogh followed me to each new dorm room in college until it ripped beyond repair. I loved that poster.&lt;/p&gt;
&lt;p&gt;My poster of &lt;em&gt;Starry Night&lt;/em&gt; often led to debates with my sister (a professional artist) about the merits and demerits of reprinting great works of art.&lt;/p&gt;
&lt;p&gt;As much as I revere the original, I also love that printing technology can put &lt;em&gt;Starry Night&lt;/em&gt; on tote bags, coffee mugs, posters, t-shirts, and more. Technology has made great art accessible to a wide range of people (without advanced printers and computers, original paintings can only be shared with people through painstaking replication via the original medium: oil painting on a canvas).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;starry-night.jpeg&quot; alt=&quot;Starry Night painting by Vincent Van Gogh&quot;&gt;&lt;/p&gt;
&lt;p&gt;For the same reason that I love seeing &lt;em&gt;Starry Night&lt;/em&gt; on a poster, I loved building a website with React and Contentful; together, they allow images and text to easily appear in various formats across multiple platforms.&lt;/p&gt;
&lt;p&gt;It’s much faster and easier to resize and reuse the content you already have when you don’t have to painstakingly re-create for mobile, for web, etc. You basically just print it, again, and again, and again, in small and large and medium formats, in websites, mobile apps, multiple languages. Just…push a button on a printer to make copies. Easy, right?&lt;/p&gt;
&lt;p&gt;Well, easy if you already know React, at least. I wanted to make little site about my dog, Watson, yet didn’t know how to code.&lt;/p&gt;
&lt;p&gt;Sometimes a friend or family member babysits him, and it’s time-consuming to either write instructions or update and print new guides for babysitters since he learns new commands every day. A website seemed like a better way to manage this.&lt;/p&gt;
&lt;p&gt;Here’s the site I built for my dog’s babysitters after learning the basics of Contentful and React: &lt;a href=&quot;http://watson.surge.sh/&quot;&gt;http://watson.surge.sh/&lt;/a&gt;. Following are instructions on how you can also build a site with Contentful and React with tips I learned while building my site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;watson-welcome-page.png&quot; alt=&quot;Home page of the new site about my dog&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-is-react-why-choose-it&quot;&gt;&lt;a href=&quot;#what-is-react-why-choose-it&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is React? Why choose it?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;React-logo.png&quot; alt=&quot;React logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;React is a JavaScript library for building user interfaces. React helps developers and designers create composable UI components that painlessly adapt to data changes.&lt;/p&gt;
&lt;h2 id=&quot;what-is-contentful-why-choose-it&quot;&gt;&lt;a href=&quot;#what-is-contentful-why-choose-it&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Contentful? Why choose it?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;contentful-logo.png&quot; alt=&quot;Contentful logo&quot;&gt;&lt;/p&gt;
&lt;p&gt;Contentful is a headless Content Management System (CMS) that lets you organize your content into what could be called “modules,” or little bits of data that can be rearranged to appear nicely on mobile devices, tablets, computers, virtual reality devices (this is my own joke, but…maybe someday?) and more.&lt;/p&gt;
&lt;p&gt;Actually, the way Contentful handles bits of content means that you can push content out when new technology develops without having to redesign, rewrite, or rethink all of it for a new format.&lt;/p&gt;
&lt;h2 id=&quot;pulling-data-in-and-pushing-data-out&quot;&gt;&lt;a href=&quot;#pulling-data-in-and-pushing-data-out&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pulling data in and pushing data out&lt;/h2&gt;
&lt;p&gt;If you have a JSON file with content in it, you could pull it into Contentful using &lt;a href=&quot;https://github.com/contentful/contentful-import&quot;&gt;contentful-import&lt;/a&gt;, which I found out by chatting with a nice person in the Contentful chat window. Since I was creating new content, I didn’t need this and just created content straight in Contentful. For the first minute or so, I couldn’t figure out what a “content model” could or should look like. Luckily, the free trial offers a sample project that I opened and after looking around it for a couple minutes, I was good to go.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;creating-content-type.png&quot; alt=&quot;Creating a content type&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;daily-schedule.png&quot; alt=&quot;A list of events on the daily schedule&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;daily-schedule.png&quot; alt=&quot;Creating an event for the daily schedule&quot;&gt;&lt;/p&gt;
&lt;p&gt;If you do create content directly in Contentful, make sure to name your fields in a way you can remember when you create GraphQL queries. If you use GraphiQL, it can suggest fields to you, but this will only help if the field names are clear and memorable.&lt;/p&gt;
&lt;p&gt;As far as pushing data out to my site goes, I didn’t know which API or token I needed. I wondered why there were four APIs and two management tokens. The Contentful documentation on this was fairly fragmented, so I just installed the gatsby-source-contentful plugin and then put the example Space ID and Example token into my gatsby-config.js file. I think this was the right thing to do, because it worked.&lt;/p&gt;
&lt;p&gt;Gatsby-config.js file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Taking Care of Watson`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-glamor`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-typography`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        pathToConfigModule&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/utils/typography`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//Here&apos;s where I include the gatsby-source-contentful plugin.&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// And also I added the spaceID and accessToken I got from my Contentful account.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-contentful`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        spaceId&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`g0b694a663ft`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        accessToken&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`cc94019b03af3894ec87eded57fffd67c6785f1c6fb6b2c3e67ded27682b0c02`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-transformer-sharp`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-sharp`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;creating-pages-and-graphql-queries&quot;&gt;&lt;a href=&quot;#creating-pages-and-graphql-queries&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating pages and GraphQL queries&lt;/h2&gt;
&lt;p&gt;Once Contentful and Gatsby were getting along well together, I created pages and added a few other style-oriented plugins (Glamor and Typography) when I realized I wanted those. Then, I used GraphiQL to create queries that could pull my Contentful content into my site.&lt;/p&gt;
&lt;p&gt;After creating queries for each type of content I wanted (daily schedule, list of tricks &amp;#x26; commands Watson knows, and a photo gallery), I saved each query in its corresponding page to see if anything broke. There were a few instances in which GraphiQL hadn’t let me know I had errors in the little ways I tried to sort data.&lt;/p&gt;
&lt;p&gt;Here’s an instance of a GraphiQL query that worked in there but not in the actual code. It needs to read &lt;code class=&quot;language-text&quot;&gt;(sort: {field: [order]})&lt;/code&gt; with the square brackets around the word “order” because there are multiple fields I can sort by; I had forgotten the brackets and GraphiQL said it would work, but then it didn’t work. Here’s the correct format:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;graphql&quot;&gt;
      &lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  allContentfulWatsonsEatingAndSleepSchedule&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token attr-name&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    edges &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      node &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        activityName
        time
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;making-data-look-nice-on-the-site&quot;&gt;&lt;a href=&quot;#making-data-look-nice-on-the-site&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making data look nice on the site&lt;/h2&gt;
&lt;p&gt;Once I got my GraphQL queries working, I called a couple friends for help rendering the data to each page on my site. They called this “printing,” a word that I enjoyed because it reminded me of the Vincent Van Gogh poster I had.&lt;/p&gt;
&lt;p&gt;Here is one of the first pages I rendered into a table format:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;daily-schedule-finished.png&quot; alt=&quot;What the finished daily schedule looks like on my site&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here are more examples of pages I created. This is the photo gallery page:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// The next line is where the code drills deeper into the data structure to finally get to photos.&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// In order to create the correct order here, follow the structure of the GraphQL query.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; photos &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allContentfulPhotoGallery&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;photos
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;photos&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Photo Gallery&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// The next line is where I’m map the photos data into React components.&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;photos&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;photo &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// The next line is where the code drills into the data structure //&lt;/span&gt;
          to print a specific thing to the site&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// In this case, I’m printing&lt;/span&gt;
          each photo to the site by using its &lt;span class=&quot;token constant&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// I got this structure from&lt;/span&gt;
          the GraphQL query&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;photo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
query PhotoQuery {
// starting here is where I copied and pasted the query I created in GraphiQL.
    allContentfulPhotoGallery {
        edges {
            node {
                photos {
                    title
                    description
                    file {
                        url }
                        }
                    }
                }
            }
        }`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;more-complex-pages&quot;&gt;&lt;a href=&quot;#more-complex-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More complex pages&lt;/h2&gt;
&lt;p&gt;The list of Tricks &amp;#x26; Commands presented a complex challenge because not all entries on Contentful included the same content. For example, we got errors if we tried to query for a photo since some entires had photos and some did not.&lt;/p&gt;
&lt;p&gt;Because each entry was inconsistent, my friends helped me figure out a way to use JS to make sure we only requested a photo to be printed IF the photo existed. And if a particular entry didn’t have a photo, the computer could forgive it (just this once). Here is the code from that page:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tricks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allContentfulTricksCommands&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tricks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Tricks and Commands&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;tricks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;trick &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commandPhrase&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// This next bit of code was a little tricky. // Definitely needed&lt;/span&gt;
          help figuring out how to render &lt;span class=&quot;token constant&quot;&gt;HTML&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// I ended up using&lt;/span&gt;
          gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;transformer&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;remark plugin and &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`dangerouslySetInnerHTML`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;
            &lt;span class=&quot;token attr-name&quot;&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;commandDescription&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;childMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exampleOfTheCommandInAction &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exampleOfTheCommandInAction&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exampleOfTheCommandInAction &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;trick&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exampleOfTheCommandInAction&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query CommandsQuery {
    allContentfulTricksCommands {
      edges {
        node {
          commandPhrase
          commandDescription {
            childMarkdownRemark {
              html
            }
          }
          exampleOfTheCommandInAction {
            file {
              url
              fileName
              contentType
            }
            description
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;final-thoughts&quot;&gt;&lt;a href=&quot;#final-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;It was awesome to get this all working because it’s clear how fast it would be to add more content without having to write any fresh code. Amazing. For example, if I teach my dog 10 new dog tricks tomorrow, I could add these tricks to Contentful, restart the dev server, and have an up-to-date site. Done.&lt;/p&gt;
&lt;p&gt;This workflow would be exponentially beneficial to bigger teams of editors and developers since it reduces the amount of legwork necessary to implement content changes. Does this mean that using React + Contentful means you’re working yourself out of a job? Not likely; it probably just means you’ll get to focus on improving old stuff and building new stuff instead of maintaining (yawn and ouch) old stuff.&lt;/p&gt;
&lt;p&gt;My next step is to learn React better so I can do some fancy designs. I’d also like to see Contentful clarify their API docs and to see GraphiQL quit lying to me about how to sort things.&lt;/p&gt;
&lt;p&gt;Also, I’m still trying to figure out why sometimes field names aren’t updating in GraphiQL when they are changed in Contentful (restarting the dev server didn’t fix that).&lt;/p&gt;
&lt;p&gt;Now, for the most important question: who wants to babysit my dog? Alexa? Siri? Maybe someday. :)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Creative Software Destruction and the New Presentation Layer]]></title><description><![CDATA[“To improve is to change, so to be perfect is to have changed often.” — Winston Churchill And so it is that about every decade the…]]></description><link>https://www.gatsbyjs.org/blog/2018-1-24-creative-software-destruction-new-presentation-layer/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-1-24-creative-software-destruction-new-presentation-layer/</guid><dc:creator><![CDATA[Robin Vasan]]></dc:creator><content:encoded>&lt;blockquote&gt;
&lt;p&gt;“To improve is to change, so to be perfect is to have changed often.” — Winston Churchill&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And so it is that about every decade the technology industry rethinks the application architecture in light of new systems, capabilities, and desired outcomes. Right now we are in the early phases of another platform shift which will have massive ripple effects throughout the technology landscape. Current incumbents will fade in significance and new entrants will take their place within new categories. Hundreds of billions in market capitalization is at stake.&lt;/p&gt;
&lt;p&gt;This process of creative destruction tends to begin within the infrastructure sector but eventually has broad impact across the whole stack. Most of the attention in recent years has been focused around transforming the backend with the adoption of containers and microservices. Mobile has brought about changes to the presentation layer, but the timing is right for a more fundamental change in the presentation layer architecture — and the seeds of that change have begun.&lt;/p&gt;
&lt;h2 id=&quot;where-have-we-come-from&quot;&gt;&lt;a href=&quot;#where-have-we-come-from&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where Have We Come From?&lt;/h2&gt;
&lt;p&gt;During the late-1980s the industry converged around the client-server model. While there were challengers, eventually Windows (it took until version 3.1!) emerged as the dominant end-user client environment. The applications in this era were relatively small, specific to a single operating system, and typically built for hundreds or thousands of users. In designing these applications, the choice was really whether you put the business logic directly into the client application or pushed it down into the database. Unix systems became the dominant server platforms largely based upon database performance requirements.&lt;/p&gt;
&lt;p&gt;The availability of the internet, and the birth of the browser — thank you, Marc Andreessen — greatly simplified cross-platform client development. However, these new applications now had to support several orders of magnitude more users. Consequently, several new tiers were added to the architecture: the web server and the application server. The web server and associated proxies and load balancers provided a stateless layer to handle the presentation layer. The application server became the obvious place for the business logic and to manage the interaction with the (typically relational) database server.&lt;/p&gt;
&lt;p&gt;As a result, developers struggled with the challenges of shifting from UI code to object-oriented programming models to the definition of underlying data schemas. In fact, much of the evolution in programming frameworks and libraries in the last decade or more has been aimed at solving this dissonance. Finally, these platforms were either extremely expensive to vertically scale or operationally challenging to horizontally scale.&lt;/p&gt;
&lt;h2 id=&quot;where-are-we-now&quot;&gt;&lt;a href=&quot;#where-are-we-now&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where Are We Now?&lt;/h2&gt;
&lt;p&gt;The power within IT has clearly moved from infrastructure teams to application teams. Developers and architects prefer to think in services and they expect the infrastructure to be programmable, cheap, elastic, and secure. They no longer want to worry about low-level concerns of infrastructure management and instead, they want frictionless and limitless capabilities and then access to APIs for other services to help them compose applications. We are moving more toward an application- or service-centric model as opposed to an infrastructure-centric approach.&lt;/p&gt;
&lt;p&gt;Things are still evolving, but some of the elements of this new “cloud-native” architecture appear clear and include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Cloud&lt;/strong&gt;. Public or private cloud infrastructure provides the base services of compute, storage and networking. AWS, Azure, and Google are all racing to add more and more infrastructure and application services — though architects should actively consider finding abstractions that give them portability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Containers provide the packaging format for how to build and deploy software as components. In earlier generations we were forced to think in larger constructs (.exe or jar files) that were sometimes tied to the underlying hardware, operating systems or runtimes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microservices&lt;/strong&gt;: Microservices are components with well-defined API interfaces. This allows different parts of the system to evolve much more frequently and to scale independently. It also embraces the use of third-party operated services for common components like identity/auth, payments and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Application Management&lt;/strong&gt;: Application servers have been replaced by cluster management solutions like Kubernetes. Virtualization was an intermediate step along the path to more elastic distributed systems. By leveraging the new cluster schedulers, systems can much more easily be built to be horizontally scalable and resilient.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Polyglot Data&lt;/strong&gt;: Pick as many different data solutions as necessary depending on the different types of data and how it is accessed. Clearly, the SQL-based world of relational and analytics databases still matter, but very common data structures and access patterns now include: key/value caching, document/JSON, search, object, metrics/time-series and perhaps a few others. All of these new database solutions need to be natively distributed systems and simple to operate at any scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aspects all address the architecture for the backend application services and data. In this shift, open source software is prevalent and playing a critical role in every category of infrastructure software. Enterprise adoption of open source has skyrocketed as these open source solutions have been built specifically for cloud deployment and horizontal scalability.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s Next?&lt;/h2&gt;
&lt;p&gt;It is trite but true to say that every company is becoming a software company. This focus on digital transformation means that businesses are using apps and experiences as the primary interface to the customer. Most of the emphasis to date has been solving the backend services for digital transformation. But as an industry, we haven’t rethought the front-end presentation layer architecture which is a vital part of that new customer interface.&lt;/p&gt;
&lt;p&gt;We now live in a world of cheap compute and storage, cloud/edge capabilities, and generally fast and pervasive network coverage. So it seems the time has come to dramatically improve the presentation layer. In this world, for instance, running traditional web servers and web content management systems may not make sense anymore. It is incredibly inefficient to have a web server talking to a content management system to pull information, create a response page and send it back to the user. Serverless is gaining interest in terms of the back end architecture, so why not apply a similar approach to the presentation layer?&lt;/p&gt;
&lt;p&gt;For developers, there has always been rapid evolution in the area of presentation layer languages and frameworks. With the backing of Facebook (and fixing the open source licensing!), React may finally unify mobile and web client development. Developers have also been actively adopting API-driven headless CMS solutions. Another Facebook technology called GraphQL could provide a unified abstraction to backend data and services.&lt;/p&gt;
&lt;p&gt;Based on these new technologies, it seems that we can move to a new serverless presentation layer architecture with pre-built JavaScript code served from cloud/edge caches talking directly to backend or third-party microservices. Web and content management servers are no longer runtime components and instead, there is a process to build and deploy static or pre-compiled experiences. This new serverless architecture provides a number of dramatic improvements over the current approach, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Pages load much faster since they are served from caches, which are ideally geographically distributed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: The attack surface is greatly reduced since you no longer have runtime web and CMS components that can be compromised.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cost&lt;/strong&gt;: The cost is completely variable and directly to usage, instead of having to size and pay for peak capacity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: The presentation layer is completely elastic and requires no intervention to scale up and down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operations&lt;/strong&gt;: There are no servers to manage.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agility&lt;/strong&gt;: The process of iterating on the user experience is greatly accelerated. Designers, developers and teams are able to leverage a familiar and tightly woven set of workflows and pipelines: from source code management through to the desired cloud platform.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are lots of pieces to this puzzle to still work out, but the shapes are starting to come into focus. The end result should be a streamlined process to design, build, test, and deploy new user experiences. And the resulting applications should be much faster, simpler to operate, cheaper to run, and more secure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Some people don’t like change, but you need to embrace change if the alternative is disaster” — Elon Musk.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Getting Started with Gatsby and WordPress]]></title><description><![CDATA[This post was originally published on
 my blog 
on January 18, 2018. Earlier this week I began rebuilding my blog using GatsbyJS + WordPress…]]></description><link>https://www.gatsbyjs.org/blog/2018-01-22-getting-started-gatsby-and-wordpress/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-01-22-getting-started-gatsby-and-wordpress/</guid><dc:creator><![CDATA[Amberley Romo]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This post was originally published on
&lt;a href=&quot;https://amberley.blog/getting-started-with-gatsbyjs-and-wordpress&quot;&gt;my blog&lt;/a&gt;
on January 18, 2018.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Earlier this week I began rebuilding my blog using GatsbyJS + WordPress. As I familiarized with Gatsby, I found myself flipping through a million tabs, and I thought it might be useful to summarize concepts and to aggregate links I found helpful.&lt;/p&gt;
&lt;p&gt;I recently decided to tackle a redo of my blog. I wanted to do something different and I’ve been hearing a lot about GatsbyJS. A static site generator for React that I can easily pull my existing WordPress data for? Sold. I’ll try it.&lt;/p&gt;
&lt;p&gt;I generated a new site using the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby-starter-default&quot;&gt;default starter&lt;/a&gt; and read through what it gave me. Assuming you have the &lt;a href=&quot;/docs/&quot;&gt;Gatsby CLI&lt;/a&gt; installed, run:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby new gatsby-example-site&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That gets us a new site directory with a couple (mostly) empty “gatsby”-prefixed files and a src directory with some basic scaffolding. The configuration and lifecycle hooks for Gatsby get put in those “gatsby”-prefixed files, &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;gatsby-browser.js&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-configjs&quot;&gt;&lt;a href=&quot;#gatsby-configjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gatsby-config.js&lt;/h2&gt;
&lt;p&gt;Essentially the Gatsby home base. The two things defined here initially (in the starter) are &lt;code class=&quot;language-text&quot;&gt;siteMetadata&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Gatsby Default Starter&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;gatsby-plugin-react-helmet&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;See the &lt;a href=&quot;/docs/gatsby-config/&quot;&gt;docs page on gatsby-config.js&lt;/a&gt; for more.&lt;/p&gt;
&lt;p&gt;For the curious:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-react-helmet&lt;/code&gt; is a plugin the starter includes. It’s a &lt;a href=&quot;/packages/gatsby-plugin-react-helmet/&quot;&gt;document head manager for React&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;gatsby-nodejs&quot;&gt;&lt;a href=&quot;#gatsby-nodejs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gatsby-node.js&lt;/h2&gt;
&lt;p&gt;We can make use of any of &lt;a href=&quot;/docs/node-apis/&quot;&gt;Gatsby’s node APIs&lt;/a&gt; by exporting a function with the name of that API from this file.&lt;/p&gt;
&lt;p&gt;For my purposes, the only one I have interacted with so far to get up and running is the &lt;a href=&quot;/docs/node-apis/#createPages&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt;&lt;/a&gt; API. This gets called after our data has been fetched and is available to use to dynamically build out our static pages. More on this later.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-browserjs&quot;&gt;&lt;a href=&quot;#gatsby-browserjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gatsby-browser.js&lt;/h2&gt;
&lt;p&gt;Same as above, we can make use of any of &lt;a href=&quot;/docs/browser-apis/&quot;&gt;Gatsby’s browser APIs&lt;/a&gt; by exporting them from this file.&lt;/p&gt;
&lt;p&gt;I haven’t needed to make use of any of these yet, but they provide a hook into &lt;a href=&quot;/docs/gatsby-lifecycle-apis/&quot;&gt;client runtime operations&lt;/a&gt; — for example, replacing the router component, as seen in &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-redux/gatsby-browser.js#L7&quot;&gt;this example&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;plugin-gatsby-source-wordpress&quot;&gt;&lt;a href=&quot;#plugin-gatsby-source-wordpress&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin: gatsby-source-wordpress&lt;/h2&gt;
&lt;p&gt;Having familiarized with the basic structure, my next step was getting my data successfully pulling from WordPress. There’s a plugin for that. &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-wordpress&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-wordpress&lt;/code&gt;&lt;/a&gt; is Gatsby’s plugin for sourcing data from WordPress sites using the WordPress JSON REST API.&lt;/p&gt;
&lt;p&gt;(Fun fact: the WordPress REST API is already &lt;a href=&quot;http://v2.wp-api.org/&quot;&gt;included starting with WordPress 4.7&lt;/a&gt; — no longer requires installing a WordPress plugin. I didn’t actually know that, not having used the WordPress REST API for anything before).&lt;/p&gt;
&lt;p&gt;I started by reviewing the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-wordpress&quot;&gt;code for the plugin’s demo site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;configure-the-plugin-to-pull-your-data&quot;&gt;&lt;a href=&quot;#configure-the-plugin-to-pull-your-data&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure the plugin to pull your data&lt;/h2&gt;
&lt;p&gt;In &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, add your configuration options, including your WordPress site’s baseUrl, protocol, whether it’s hosted on &lt;a href=&quot;http://wordpress.com/&quot;&gt;wordpress.com&lt;/a&gt; or self-hosted, and whether it makes use of the Advanced Custom Fields (ACF) plugin.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-wordpress`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// your wordpress source&lt;/span&gt;
        baseUrl&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`amberley.me`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        protocol&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`https`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// is it hosted on wordpress.com, or self-hosted?&lt;/span&gt;
        hostingWPCOM&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// does your site use the Advanced Custom Fields Plugin?&lt;/span&gt;
        useACF&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;use-the-data-to-dynamically-construct-pages&quot;&gt;&lt;a href=&quot;#use-the-data-to-dynamically-construct-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use the data to dynamically construct pages.&lt;/h2&gt;
&lt;p&gt;Once your source plugin is pulling data, you can construct your site pages by implementing the &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API in &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;. When this is called, your data has already been fetched and is available to query with GraphQL. Gatsby uses &lt;a href=&quot;/docs/querying-with-graphql/#how-does-graphql-and-gatsby-work-together&quot;&gt;GraphQL at build time&lt;/a&gt;; Your source plugin (in this case, &lt;code class=&quot;language-text&quot;&gt;gatsby-source-wordpress&lt;/code&gt;) fetches your data, and Gatsby uses that data to ”&lt;a href=&quot;/docs/querying-with-graphql/#how-does-graphql-and-gatsby-work-together&quot;&gt;automatically &lt;em&gt;infer&lt;/em&gt; a GraphQL schema&lt;/a&gt;” that you can query against.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API exposes the &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; function:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The GraphQL function allows us to run arbitrary queries against the local WordPress GraphQL schema… like the site has a built-in database constructed from the fetched data that you can run queries against. (&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/gatsby-node.js#L15&quot;&gt;Source&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I used the &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file from the plugin demo to get started. For my purposes the code to &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/gatsby-node.js#L12&quot;&gt;construct ‘posts’&lt;/a&gt; does what I need it to do out of the box (at least for the moment). It queries our local WordPress GraphQL schema for post data, then &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/gatsby-node.js#L94&quot;&gt;iterates through each post node&lt;/a&gt; to construct a static page for each, &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/gatsby-node.js#L97&quot;&gt;based on whatever template we define&lt;/a&gt; and feed it.&lt;/p&gt;
&lt;p&gt;For example, below is the part of the demo &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file that iterates over all the WordPress post data.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`./src/templates/post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

_&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allWordpressPost&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; edge &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// will be the url for the page&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// specify the component template of your choice&lt;/span&gt;
    component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;slash&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;postTemplate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// In the ^template&apos;s GraphQL query, &apos;id&apos; will be available&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// as a GraphQL variable to query for this posts&apos;s data.&lt;/span&gt;
    context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The &lt;a href=&quot;/docs/api-specification/#concepts&quot;&gt;docs define a Gatsby page&lt;/a&gt; as “a site page with a pathname, a template component, and optional graphql query and layout component.” See the docs on the &lt;a href=&quot;/docs/bound-action-creators/#createPage&quot;&gt;createPage bound action creator&lt;/a&gt; and &lt;a href=&quot;/docs/creating-and-modifying-pages/&quot;&gt;guide on creating and modifying pages for more detail&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;-take-a-step-back-to-templates&quot;&gt;&lt;a href=&quot;#-take-a-step-back-to-templates&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;… Take a step back to “templates”&lt;/h2&gt;
&lt;p&gt;In the step above we dynamically create pages based on our data by passing the absolute path to a defined template to “component”. So what’s a template?&lt;/p&gt;
&lt;p&gt;A template is a page component we can loop over to dynamically create pages based on the content we’ve pulled in (described above). We pass the post id to “context” to make it available as a GraphQL variable in the template file. The &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/src/templates/post.js#L66&quot;&gt;GraphQL query defined for the template&lt;/a&gt; then uses that id to query for data specific to that post.&lt;/p&gt;
&lt;h2 id=&quot;-take-another-step-back-to-pages&quot;&gt;&lt;a href=&quot;#-take-another-step-back-to-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;… Take another step back to “pages”&lt;/h2&gt;
&lt;p&gt;So a template is a page component that we can use to programmatically create pages. Then what’s a page component?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Page Component — React.js component that renders a page and can optionally specify a layout component and a graphql query. (&lt;a href=&quot;/docs/api-specification/#concepts&quot;&gt;Source&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;React components living in &lt;code class=&quot;language-text&quot;&gt;src/pages&lt;/code&gt; automatically become pages. The file name of a page maps to its site path. My site in its current state only has one good example of this — &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt; maps to &lt;a href=&quot;https://amberley.blog/&quot;&gt;amberley.blog&lt;/a&gt;. If I had an ‘about’ page, it would live at &lt;code class=&quot;language-text&quot;&gt;src/pages/about.js&lt;/code&gt;, and map to &lt;a href=&quot;https://amberley.blog/about&quot;&gt;amberley.blog/about&lt;/a&gt;. (Since that doesn’t exist, it will actually end up hitting the only other page currently defined in my site, which is &lt;code class=&quot;language-text&quot;&gt;src/pages/404.js&lt;/code&gt; — (&lt;a href=&quot;/docs/add-404-page/&quot;&gt;read about 404 pages&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If you include the “optional GraphQL query” noted above, the result of that query is automatically passed to the component on a &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; prop (&lt;code class=&quot;language-text&quot;&gt;this.props.data&lt;/code&gt;). (&lt;a href=&quot;/docs/querying-with-graphql/#what-does-a-graphql-query-look-like&quot;&gt;Read more on GraphQL queries&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&quot;onward&quot;&gt;&lt;a href=&quot;#onward&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Onward&lt;/h2&gt;
&lt;p&gt;While this isn’t a tutorial — more a guided walkthrough of me familiarizing and stepping through an initial Gatsby setup — if you’re following along with the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/using-wordpress&quot;&gt;demo code&lt;/a&gt; you’re probably close to (or already!) seeing your WordPress data populate your Gatsby dev site if you run &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt;!&lt;/p&gt;
&lt;h2 id=&quot;sidenotes&quot;&gt;&lt;a href=&quot;#sidenotes&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sidenotes&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/1172#issuecomment-308634739&quot;&gt;don’t need to know GraphQL&lt;/a&gt; to get started with Gatsby. I didn’t. It’s been a good introduction.&lt;/li&gt;
&lt;li&gt;Gatsby makes heavy use of &lt;a href=&quot;/docs/plugins/&quot;&gt;plugins&lt;/a&gt; — both official and community — for a lot of things, from one that implements &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-google-analytics&quot;&gt;Google Analytics&lt;/a&gt;, to one that adds &lt;a href=&quot;https://github.com/alampros/gatsby-plugin-accessibilityjs&quot;&gt;GitHub’s accessibility error scanner&lt;/a&gt; to all pages.&lt;/li&gt;
&lt;li&gt;Read through some of the source code. I particularly enjoyed reading through &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby/src/bootstrap/index.js&quot;&gt;the bootstrap process&lt;/a&gt;. (It’s beautifully commented).&lt;/li&gt;
&lt;li&gt;Gatsby.js is a static Progressive Web App (PWA) generator, but to be PWA friendly (at least according to the &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse PWA audit&lt;/a&gt;), look into two plugins: &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-manifest&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-offline&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I did end up &lt;a href=&quot;/docs/deploy-gatsby/#netlify&quot;&gt;deploying with Netlify&lt;/a&gt;, and I’m super happy with it. (A &lt;a href=&quot;/blog/2017-12-06-gatsby-plus-contentful-plus-netlify/#solution-netlify--gatsby&quot;&gt;previous post&lt;/a&gt; discussed Netlify a bit more, if you’re interested).&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[How Boston.gov used Gatsby to be selected as an Amazon HQ2 candidate city]]></title><description><![CDATA[Boston.gov  is a small team with a huge responsibility: ten people tasked with the digital presence of New England’s most iconic city. Today…]]></description><link>https://www.gatsbyjs.org/blog/2018-01-18-how-boston-gov-used-gatsby-to-be-selected-as-an-amazon-hq2-candidate-city/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-01-18-how-boston-gov-used-gatsby-to-be-selected-as-an-amazon-hq2-candidate-city/</guid><dc:creator><![CDATA[Sam Bhagwat]]></dc:creator><content:encoded>&lt;p&gt;&lt;a href=&quot;http://boston.gov&quot;&gt;Boston.gov&lt;/a&gt; is a small team with a huge responsibility: ten people tasked with the digital presence of New England’s most iconic city.&lt;/p&gt;
&lt;p&gt;Today, the team and the city scored a huge victory when Amazon announced that Boston was &lt;a href=&quot;https://www.amazon.com/b?node=17044620011&quot;&gt;selected as one among 20 candidate cities&lt;/a&gt; for its North America HQ2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./amazon-boston.jpg&quot; alt=&quot;Amazon Boston homepage&quot; title=&quot;Boston city&quot;&gt;&lt;/p&gt;
&lt;p&gt;When Amazon announced in September that it was looking to build a new headquarters, bringing 50,000 jobs and billions of investment to the chosen city, Boston’s city government jumped to throw their hat in the ring.&lt;/p&gt;
&lt;p&gt;As a technology hub, the city wanted to put their best digital foot forward, so they turned to the Boston.gov team to build a website as the city’s application — &lt;a href=&quot;http://amazon.boston.gov&quot;&gt;amazon.boston.gov&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;With a compressed application process, the Boston.gov team had a week and a half to build two websites — a public-facing site, as well as a password-protected site with additional information.&lt;/p&gt;
&lt;p&gt;They needed tools that let them get off the ground immediately, iterate quickly, and build something beautiful — so they turned to Gatsby.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./amazon-boston-3.jpg&quot; alt=&quot;Amazon Boston homepage&quot; title=&quot;Mayor Martin J. Walsh&quot;&gt;&lt;/p&gt;
&lt;p&gt;“Within 10 minutes, we had our environment set up, with the website building and deploying,” said Matthew Crist, lead engineer for the project.&lt;/p&gt;
&lt;p&gt;With Gatsby, the team was able to complete the website from basic comps in around a week, compared to about a month for similar projects in the past. “We generally haven’t been able to do anything as fast,” Crist said.&lt;/p&gt;
&lt;p&gt;As an engineer, Crist really appreciated Gatsby’s out-of-the-box hot reloading support.
“The fact that you can save your code, tab back to your browser, and see the change sped up development so much,” Crist said.&lt;/p&gt;
&lt;p&gt;And the whole team appreciated Gatsby’s support for component libraries.&lt;/p&gt;
&lt;p&gt;“We were able to use our pattern library that we’ve built for Boston.gov,” said Crist. “Our city’s website is nothing but components, stacked together to create a page. &lt;a href=&quot;http://amazon.boston.gov&quot;&gt;amazon.boston.gov&lt;/a&gt; is the same.”&lt;/p&gt;
&lt;p&gt;“Our pattern library has already been A/B tested, and stakeholders are already bought in,” said Crystal Torman, an economic development advisor for Boston, and the project’s internal client. “We could make just one decision about website styling and then spend more time drilling into the content.”&lt;/p&gt;
&lt;p&gt;“Crystal and I were probably on the phone straight for two days, giving feedback,” said Reilly Zlab, the product manager.&lt;/p&gt;
&lt;p&gt;“Normally we don’t do so many iterations in such a short time,” laughs Torman.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./amazon-boston-2.jpg&quot; alt=&quot;Amazon Boston homepage&quot; title=&quot;Boston city&quot;&gt;&lt;/p&gt;
&lt;p&gt;The iterations paid off.&lt;/p&gt;
&lt;p&gt;“Both internally and externally we’ve heard overwhelmingly positive feedback,” Torman says. “People here love the website.”&lt;/p&gt;
&lt;p&gt;Apparently, so did Amazon.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building a static blog using Gatsby and Strapi]]></title><description><![CDATA[Introduction A static website contains Web pages with fixed content. Technically, it is a simple list of HTML files, which displays the same…]]></description><link>https://www.gatsbyjs.org/blog/2018-1-18-strapi-and-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2018-1-18-strapi-and-gatsby/</guid><dc:creator><![CDATA[Pierre Burgy]]></dc:creator><content:encoded>&lt;h2 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#introduction&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;A static website contains Web pages with fixed content. Technically, it is a simple list of HTML files, which displays the same information to every visitor. Unlike dynamic websites, they do not require any back-end programming or databases. Publishing a static website is easy: the files are uploaded on a simple Web server or storage provider. The two main advantages of static websites are security and speed: there is no database so it can not be hacked and there is no need to render a page for each request, which makes Web browsing faster.&lt;/p&gt;
&lt;p&gt;To make their creation easier, numerous open-source static websites generators are available: &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;, &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;, etc. Most of the time, the content is managed through static (ideally Markdown) files or a Content API. Then, the generator requests the content, injects it in templates defined by the developer and generates a bunch of HTML files.&lt;/p&gt;
&lt;p&gt;Progressive Web Apps (PWA) are web applications, highly based on JavaScript, and are &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;reliable, fast and engaging&lt;/a&gt;. Since they make web browsing much faster and offer a better user experience, PWA have become the default way to build Web interfaces. Thus, many amazing front-end frameworks appeared over the last couple years: Angular, Vue and more recently, React.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gatsby: when static websites meet Progressive Web Apps&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Static websites and PWA both have strong advantages which make us crave for a way to use them both in the same project! Luckily, we have tools that bridge the gap between them and the one we recently heard of is definitely Gatsby. So, we decided to give you a complete example of how to get started with Gatsby. A static website needs a source of content: in this example we will deliver it using an API built with Strapi.&lt;/p&gt;
&lt;h3 id=&quot;what-is-gatsby&quot;&gt;&lt;a href=&quot;#what-is-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Gatsby?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt; is a &lt;em&gt;blazing-fast &lt;strong&gt;website framework&lt;/strong&gt; for React&lt;/em&gt;. It allows developers to build React-based websites within minutes. Whether you want to develop a blog or a corporate website, Gatsby will fill your needs.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;&lt;img src=&quot;logo-gatsby.jpg&quot; alt=&quot;Gatsby Logo&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Because it is based on React, the website pages are never reloaded which makes the generated website super fast. A large set of plugins is available to let developers save time and get data from any source (Markdown files, CMS, etc.). Gatsby is strongly based on the &lt;a href=&quot;https://www.gatsbyjs.org/docs/node-interface/&quot;&gt;“node” interface&lt;/a&gt;, which is the center of Gatsby’s data system.&lt;/p&gt;
&lt;p&gt;Created by &lt;a href=&quot;https://twitter.com/kylemathews&quot;&gt;Kyle Mathews&lt;/a&gt;, the project has been officially &lt;a href=&quot;https://www.gatsbyjs.org/blog/gatsby-v1/&quot;&gt;released in July 2017&lt;/a&gt; and is already &lt;a href=&quot;https://github.com/gatsbyjs/gatsby#showcase&quot;&gt;used by tens of companies&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;what-is-strapi&quot;&gt;&lt;a href=&quot;#what-is-strapi&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Strapi?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://strapi.io&quot;&gt;Strapi&lt;/a&gt; is the *most advanced &lt;strong&gt;Node.js API Content Management Framework*&lt;/strong&gt;. Halfway between a &lt;a href=&quot;https://strapi.io/overview&quot;&gt;Node.js framework and a headless CMS&lt;/a&gt;, it saves weeks of API development time.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://strapi.io&quot;&gt;&lt;img src=&quot;logo-strapi.png&quot; alt=&quot;Gatsby Strapi&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thanks to its extensible plugin system, it provides a large set of built-in features: Admin Panel, Authentication &amp;#x26; Permissions management, Content Management, API Generator, etc.&lt;/p&gt;
&lt;p&gt;Unlike others CMSs, &lt;strong&gt;Strapi is 100% open-source&lt;/strong&gt;, which means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Strapi is completely free&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;host it on your own servers&lt;/strong&gt;, so you own the data.&lt;/li&gt;
&lt;li&gt;It is entirely &lt;strong&gt;customisable and extensible&lt;/strong&gt;, thanks to the plugin system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;api-setup&quot;&gt;&lt;a href=&quot;#api-setup&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Setup&lt;/h2&gt;
&lt;p&gt;To make the magic happen, let’s create a Strapi API and add some content.&lt;/p&gt;
&lt;h3 id=&quot;create-a-strapi-project&quot;&gt;&lt;a href=&quot;#create-a-strapi-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create a Strapi project&lt;/h3&gt;
&lt;h4 id=&quot;install-strapi&quot;&gt;&lt;a href=&quot;#install-strapi&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Strapi&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Requirements: please make sure &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node 8&lt;/a&gt; (or higher) and &lt;a href=&quot;https://docs.mongodb.com/manual/installation/&quot;&gt;MongoDB&lt;/a&gt; are installed and running on your machine.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Install Strapi using npm:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i strapi@alpha -g&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: Strapi v3 is still an alpha version, but it will be fine for this tutorial.&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&quot;generate-a-strapi-project&quot;&gt;&lt;a href=&quot;#generate-a-strapi-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate a Strapi project&lt;/h4&gt;
&lt;p&gt;Create a directory named &lt;code class=&quot;language-text&quot;&gt;gatsby-strapi-tutorial&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; gatsby-strapi-tutorial&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Scaffold your API inside it through a single command line:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; gatsby-strapi-tutorial
$ strapi new api&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;start-the-server&quot;&gt;&lt;a href=&quot;#start-the-server&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start the server&lt;/h4&gt;
&lt;p&gt;Enter inside your project’s folder:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; api&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Launch the Node.js server:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ strapi start&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Starting now, you should be able to visit the admin panel of your project: &lt;a href=&quot;http://localhost:1337/admin&quot;&gt;http://localhost:1337/admin&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;create-your-first-user&quot;&gt;&lt;a href=&quot;#create-your-first-user&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create your first User&lt;/h4&gt;
&lt;p&gt;Add your first user from the &lt;a href=&quot;http://localhost:1337/admin/plugins/users-permissions/auth/register&quot;&gt;registration page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;strapi-register.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;create-a-content-type&quot;&gt;&lt;a href=&quot;#create-a-content-type&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create a Content Type&lt;/h4&gt;
&lt;p&gt;Strapi APIs are based on a data structure called Content Types (equivalent of models in frameworks and Content Types in Wordpress).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost:1337/admin/plugins/content-type-builder/&quot;&gt;Create a Content Type&lt;/a&gt; named &lt;code class=&quot;language-text&quot;&gt;article&lt;/code&gt; with three fields: &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; (type &lt;code class=&quot;language-text&quot;&gt;string&lt;/code&gt;), &lt;code class=&quot;language-text&quot;&gt;content&lt;/code&gt; (type &lt;code class=&quot;language-text&quot;&gt;text&lt;/code&gt;) and &lt;code class=&quot;language-text&quot;&gt;author&lt;/code&gt; (type &lt;code class=&quot;language-text&quot;&gt;relation&lt;/code&gt;, many article to one user).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;strapi-relations.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;strapi-content-type-builder.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;insert-some-entries&quot;&gt;&lt;a href=&quot;#insert-some-entries&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Insert some entries&lt;/h4&gt;
&lt;p&gt;Add some articles in the database. To do so, follow these instructions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Visit the &lt;a href=&quot;http://localhost:1337/admin/plugins/content-type-builder/models/article&quot;&gt;articles list page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click on &lt;code class=&quot;language-text&quot;&gt;Add New Article&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Insert values, link to an author and submit the form.&lt;/li&gt;
&lt;li&gt;Create two other articles.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;strapi-content-manager.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;allow-access&quot;&gt;&lt;a href=&quot;#allow-access&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allow access&lt;/h4&gt;
&lt;p&gt;For security reasons, &lt;a href=&quot;http://localhost:1337/article&quot;&gt;API access&lt;/a&gt; is, by default, restricted. To allow access, visit the &lt;a href=&quot;http://localhost:1337/admin/plugins/users-permissions/roles/edit/1&quot;&gt;Auth and Permissions section for Guest role&lt;/a&gt;, select the &lt;code class=&quot;language-text&quot;&gt;Article - find&lt;/code&gt; action and save. At this point, you should be able to &lt;a href=&quot;http://localhost:1337/article&quot;&gt;request the list of articles&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://localhost:1337/article&quot;&gt;author API access&lt;/a&gt; is also restricted. Authorize anonymous access by selecting the &lt;code class=&quot;language-text&quot;&gt;find&lt;/code&gt; (in “Users &amp;#x26; Permissions” section) action and saving the form.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;strapi-permissions.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;static-website-development&quot;&gt;&lt;a href=&quot;#static-website-development&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static website development&lt;/h2&gt;
&lt;p&gt;Great job, our API is ready! We can start developing the static website.&lt;/p&gt;
&lt;h3 id=&quot;install-gatsby&quot;&gt;&lt;a href=&quot;#install-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install Gatsby&lt;/h3&gt;
&lt;p&gt;First, install Gatsby CLI:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --global gatsby-cli&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;generate-a-gatsby-project&quot;&gt;&lt;a href=&quot;#generate-a-gatsby-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate a Gatsby project&lt;/h3&gt;
&lt;p&gt;In the folder &lt;code class=&quot;language-text&quot;&gt;gatsby-strapi-tutorial&lt;/code&gt; that you previously created, generate your brand new blog:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gatsby new blog&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;start-in-development-mode&quot;&gt;&lt;a href=&quot;#start-in-development-mode&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Start in development mode&lt;/h3&gt;
&lt;p&gt;Enter in your project’s folder:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; blog&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Start the server:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gatsby develop&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;At this point, you should already be able to get access to your Gatsby website at this address: &lt;a href=&quot;http://localhost:8000&quot;&gt;http://localhost:8000&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;install-the-strapi-source-plugin&quot;&gt;&lt;a href=&quot;#install-the-strapi-source-plugin&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install the Strapi source plugin&lt;/h3&gt;
&lt;p&gt;When you manage a static website, your data can come from different sources: Markdown files, CSV files, a WordPress website (using the JSON REST API plugin), etc.&lt;/p&gt;
&lt;p&gt;Gatsby understands this pretty well. So its creators decided to build a specific and independent layer: the data layer. This entire system is strongly powered by &lt;a href=&quot;http://graphql.org&quot;&gt;GraphQL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To connect Gatsby to a new source of data, you have to &lt;a href=&quot;https://www.gatsbyjs.org/docs/create-source-plugin&quot;&gt;develop a new source plugin&lt;/a&gt;. Fortunately, &lt;a href=&quot;https://www.gatsbyjs.org/docs/plugins&quot;&gt;several source plugins already exist&lt;/a&gt;, so on of them should fill your needs.&lt;/p&gt;
&lt;p&gt;In this example, we are using Strapi. Obviously, we are going to need a source plugin for Strapi APIs. Good news: &lt;a href=&quot;https://github.com/strapi/gatsby-source-strapi&quot;&gt;we built it for you&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Let’s install it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --save gatsby-source-strapi&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This plugin need some configurations. Replace the content of &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; with:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Gatsby Default Starter`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-react-helmet`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-strapi`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        apiURL&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`http://localhost:1337`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        contentTypes&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// List of the Content Types you want to be able to request from Gatsby.&lt;/span&gt;
          &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`article`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`user`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Then, restart the server to let Gatsby consider these updates.&lt;/p&gt;
&lt;h3 id=&quot;articles-list&quot;&gt;&lt;a href=&quot;#articles-list&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles list&lt;/h3&gt;
&lt;p&gt;First, we want to display the list of articles. To do so, add the following content in the existing home page file:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;IndexPage&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hi people&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Welcome to your &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Gatsby&lt;/span&gt; site&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Now go build something great&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allStrapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/page-2/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Go to page &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; IndexPage

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query IndexQuery {
    allStrapiArticle {
      edges {
        node {
          id
          title
          content
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;what-are-we-doing-here&quot;&gt;&lt;a href=&quot;#what-are-we-doing-here&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are we doing here?&lt;/h4&gt;
&lt;p&gt;At the end of the file, we export &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;, a GraphQL query which requests the entire list of articles. As you can see, we require only the &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;content&lt;/code&gt; fields, thanks to the precise GraphQL query language.&lt;/p&gt;
&lt;p&gt;Then, we pass the &lt;code class=&quot;language-text&quot;&gt;{ data }&lt;/code&gt; destructured object as parameter of &lt;code class=&quot;language-text&quot;&gt;IndexPage&lt;/code&gt; and loop on its &lt;code class=&quot;language-text&quot;&gt;allStrapiArticles&lt;/code&gt; object to display the data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsby-home.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;tip-generate-your-graphql-query-in-seconds&quot;&gt;&lt;a href=&quot;#tip-generate-your-graphql-query-in-seconds&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip: generate your GraphQL query in seconds!&lt;/h4&gt;
&lt;p&gt;Gatsby includes a useful GraphiQL interface. It makes GraphQL queries development way easier and intuitive. &lt;a href=&quot;http://localhost:8000/___graphql&quot;&gt;Take look at it&lt;/a&gt; and try to create some queries.&lt;/p&gt;
&lt;h3 id=&quot;article-view&quot;&gt;&lt;a href=&quot;#article-view&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Article view&lt;/h3&gt;
&lt;p&gt;Our website now starts looking like a blog which is a good thing. However, an important part is still missing: the article’s details page.&lt;/p&gt;
&lt;p&gt;Let’s create the template, containing a specific GraphQL request and defining the content displayed:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;src/templates/article.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;ArticleTemplate&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      by&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/authors/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; ArticleTemplate

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query ArticleTemplate($id: String!) {
    strapiArticle(id: { eq: $id }) {
      title
      content
      author {
        id
        username
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;That looks fine, but at this point, Gatsby does not know when this template should be displayed. Each article needs a specific URL. So, we are going to inform Gatsby about the new URLs we need thanks to the &lt;a href=&quot;https://www.gatsbyjs.org/docs/creating-and-modifying-pages&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; function&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, we are going to code a new function called &lt;code class=&quot;language-text&quot;&gt;makeRequest&lt;/code&gt; to execute the GraphQL request. Then, we export a function named &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; in which we get the list of articles and create a page for each of them. Here is the result:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`path`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;makeRequest&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Query for nodes to use in creating pages.&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Implement the Gatsby API “createPages”. This is called once the&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// data layer is bootstrapped to let plugins create pages from data.&lt;/span&gt;
exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; getArticles &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    {
      allStrapiArticle {
        edges {
          node {
            id
          }
        }
      }
    }
    `&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Create pages for each article.&lt;/span&gt;
    result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allStrapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/article.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Query for articles nodes to use in creating pages.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; getArticles
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Restart the Gatsby server.&lt;/p&gt;
&lt;p&gt;From now on, you should be able to visit the detail page by clicking on URLs displayed on the homepage.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsby-article.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;author-view&quot;&gt;&lt;a href=&quot;#author-view&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author view&lt;/h3&gt;
&lt;p&gt;Articles are written by authors. They deserve a dedicated page.&lt;/p&gt;
&lt;p&gt;The processes for creating author views and article pages are very similar. First, we create the template:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;src/templates/user.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;UserTemplate&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;username&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;strapiUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;articles&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;article &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;article&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;article&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; UserTemplate

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query UserTemplate($id: String!) {
    strapiUser(id: { eq: $id }) {
      id
      username
      articles {
        id
        title
        content
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Second, we update the &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file to create the URLs:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Path: &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`path`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;makeRequest&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Query for article nodes to use in creating pages.&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; result
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Implement the Gatsby API “createPages”. This is called once the&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// data layer is bootstrapped to let plugins create pages from data.&lt;/span&gt;
exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; getArticles &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    {
      allStrapiArticle {
        edges {
          node {
            id
          }
        }
      }
    }
    `&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Create pages for each article.&lt;/span&gt;
    result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allStrapiArticle&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/article.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; getAuthors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;makeRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    {
      allStrapiUser {
        edges {
          node {
            id
          }
        }
      }
    }
    `&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Create pages for each user.&lt;/span&gt;
    result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allStrapiUser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/authors/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/user.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Queries for articles and authors nodes to use in creating pages.&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;getArticles&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getAuthors&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Finally, restart the server and visit the author page from the article view’s links.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsby-author.png&quot; alt=&quot;Tutorial&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Congrats! You’ve successfully built a super fast and easy-to-maintain blog!&lt;/p&gt;
&lt;p&gt;Since the content is managed by Strapi, the authors can write article through a nice UI and developers only have to rebuilt the Gatsby blog in order to update the content.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Where to go next?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Feel free to continue this project to discover both Gatsby and Strapi advantages. Here are some features you can add: list of authors, article’s categories, and comment system with the Strapi API or Disqus. You can also create other kind of websites (e-commerce shop, corporate website, etc.).&lt;/p&gt;
&lt;p&gt;When your project is achieved, you will probably want to deploy it. The static website generated by Gatsby can &lt;a href=&quot;https://www.gatsbyjs.org/docs/deploy-gatsby/&quot;&gt;easily be published on storage providers&lt;/a&gt;: Netlify, S3/Cloudfront, GitHub pages, GitLab pages, Heroku, etc. The Strapi API is nothing else than a simple Node.js API, so it can be hosted on Heroku or any Linux instance that has Node.js installed.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://github.com/strapi/strapi-examples/tree/master/gatsby-strapi-tutorial&quot;&gt;code source of this tutorial is available on GitHub&lt;/a&gt;. To see it live, clone the repository, run &lt;code class=&quot;language-text&quot;&gt;npm run setup&lt;/code&gt;, start the Strapi server (&lt;code class=&quot;language-text&quot;&gt;cd api &amp;amp;&amp;amp; strapi start&lt;/code&gt;) and the Gatsby server (&lt;code class=&quot;language-text&quot;&gt;cd blog &amp;amp;&amp;amp; npm run develop&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;We hope you enjoyed this tutorial. Feel free to comment on it, share it, and let us know how you create sites built with React and manage their content.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Introducing the Gatsby UX Research Program]]></title><description><![CDATA[How this all started After teaching college-level writing and training sales people for the last several years, I’d been contemplating a…]]></description><link>https://www.gatsbyjs.org/blog/2017-12-20-introducing-the-gatsby-ux-research-program/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-12-20-introducing-the-gatsby-ux-research-program/</guid><dc:creator><![CDATA[Shannon Soper]]></dc:creator><content:encoded>&lt;h2 id=&quot;how-this-all-started&quot;&gt;&lt;a href=&quot;#how-this-all-started&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How this all started&lt;/h2&gt;
&lt;p&gt;After teaching college-level writing and training sales people for the last several years, I’d been contemplating a career change. Earlier this year on a car trip with my brother near the &lt;a href=&quot;https://utah.com/hiking/st-george&quot;&gt;red rock cliffs&lt;/a&gt; of southern Utah, he suggested that UX design could be a natural fit. After serious reflection, I applied to a UX bootcamp for this fall and got in.&lt;/p&gt;
&lt;p&gt;Fast-forward to August, when Kyle Mathews and I are sitting with friends in a dry grass field in Idaho, waiting for the solar eclipse. We’ve been friends since college, and he asked if I’d be interested in doing UX interviews for Gatsby.&lt;/p&gt;
&lt;p&gt;I’d been watching Gatsby grow from the beginning and felt enthusiastic about the chance to dive deep into a project with passionate community members working on such an interesting project. I saw that UX research would help inform the community about how to maintain and enhance Gatsby’s awesome developer experience.&lt;/p&gt;
&lt;p&gt;Which leads me to this blog post. Here I’ll summarize the research I’ve done with GatsbyJS users the past few months and how it’s informing upcoming projects and design decisions. If you already use GatsbyJS, I hope you’ll compare your experience with the following results and &lt;a href=&quot;https://twitter.com/shannonb_ux/status/938551014956732418&quot;&gt;let me know&lt;/a&gt; if you have more feedback that is not reflected in our data. If you don’t use GatsbyJS and would like to, perhaps start with the &lt;a href=&quot;/tutorial/&quot;&gt;official tutorials&lt;/a&gt; and by following us on &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;why-do-ux-research-for-gatsby&quot;&gt;&lt;a href=&quot;#why-do-ux-research-for-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why do UX research for Gatsby?&lt;/h2&gt;
&lt;p&gt;One of the goals of Gatsby is to enable an awesome developer experience. UX research encourages continual feedback from the community to help guide us towards that goal. To gather feedback, I started reaching out to Gatsby users through Twitter and Discord and wow, the response has been amazing! Many people have generously offered to chat over the phone, Google hangouts, Discord, email, and more to tell me their experiences. These interviews allowed me to talk with a wide breadth of people and get in-depth information about the Gatsby development experience.&lt;/p&gt;
&lt;p&gt;To gather more feedback, we also added a question at the bottom of each doc and tutorial that asks: “Was this page helpful?” with thumbs-up and thumbs-down icons. In the future, we’ll implement more feedback systems to help us understand Gatsby users even more.&lt;/p&gt;
&lt;p&gt;In interviews, I ask open-ended questions that are intended to gather candid feedback:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is your name and where do you live?&lt;/li&gt;
&lt;li&gt;How did you hear about Gatsby and why did you get interested in it?&lt;/li&gt;
&lt;li&gt;What is your role / job?&lt;/li&gt;
&lt;li&gt;Tell me about what you’re building with Gatsby, and what’s the building process like? Or, if you haven’t finished building it yet, what do you hope to build and where are you at in the process, and what has it been like so far?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Often I ask more pointed questions like the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What do you like about Gatsby so far?&lt;/li&gt;
&lt;li&gt;What obstacles have you run into when building your site with Gatsby? Were you able to overcome them? If so, how?&lt;/li&gt;
&lt;li&gt;What things (if any) helped make the process easier?&lt;/li&gt;
&lt;li&gt;What do you think could be improved in the tutorials or the whole experience of building with Gatsby?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After several interviews, I added these questions to reflect recurring comments from interviewees:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What else do you think you might build with Gatsby in the future?&lt;/li&gt;
&lt;li&gt;What could we do to make those future projects easier for you?&lt;/li&gt;
&lt;li&gt;Did you use any plugins? Starters? If so, how did you find them?&lt;/li&gt;
&lt;li&gt;Have you built any plugins or starters? If so, what was that process like?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;what-we-found-out&quot;&gt;&lt;a href=&quot;#what-we-found-out&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What we found out&lt;/h2&gt;
&lt;p&gt;Here are some general statistics we gathered from over 30 interviewees (and counting).&lt;/p&gt;
&lt;h3 id=&quot;what-job-roles-do-gatsby-users-have&quot;&gt;&lt;a href=&quot;#what-job-roles-do-gatsby-users-have&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What job roles do Gatsby users have?&lt;/h3&gt;
&lt;p&gt;About 73% of interviewees are developers, with UX designers being the next biggest group. Several users were business owners or students who develop in addition to their schooling or other job.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;roles.png&quot; alt=&quot;Gatsby Roles Chart&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;what-types-of-sites-do-people-build-with-gatsby&quot;&gt;&lt;a href=&quot;#what-types-of-sites-do-people-build-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What types of sites do people build with Gatsby?&lt;/h3&gt;
&lt;p&gt;Most sites built with Gatsby are blogs or a combined portfolio plus blog. Sites for work are the second most common type of site.&lt;/p&gt;
&lt;p&gt;It was interesting to hear that people working on larger projects (most often for work) experienced pain points including how to build complex navigation and menu bars and how to handle complex workflows that involve multiple writers and editors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;sites.png&quot; alt=&quot;Gatsby Sites&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;what-are-the-top-10-pain-points-of-gatsby-users&quot;&gt;&lt;a href=&quot;#what-are-the-top-10-pain-points-of-gatsby-users&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are the top 10 pain points of Gatsby users?&lt;/h3&gt;
&lt;p&gt;Plugin-related issues take home the gold medal for the most common pain point; many more people than we expected are interested in plugins and have struggled to find the plugin they need, to make sure the plugin they find isn’t going to break their site, or to build a new plugin.&lt;/p&gt;
&lt;p&gt;The second most common pain point is GraphQL. About half of our interviewees said that GraphQL has a steep learning curve and more learning resources would make it easier to learn.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;pain-points.png&quot; alt=&quot;Gatsby User Pain Points&quot;&gt;&lt;/p&gt;
&lt;p&gt;Other salient feedback includes that people who have used WordPress for a long time are looking for other solutions and want Gatsby to play well with many kinds of CMSs. Finally, almost every interviewee loves the Gatsby development experience because it is smooth and fast. Here are some fun quotes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You guys are pretty much nailing it. Just keep killin’ it, I guess!&lt;/p&gt;
&lt;p&gt;– Alec Lomas, AZ, front-end dev and design&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve played around with static sites in Jekyll in the past, but I’ve always hit a pain point with how much functionality I could build into the different includes and partials and things that were starting to become popular with different templating languages. So I’ve always loved React for all the encapsulation of style and functionality. And components—but I never really knew how to use it. And Gatsby has been that first opportunity where everything comes together, everything can be in one system. My background is really design focused, so I think of a component library along those lines. Until Gatsby, I never really had a way to see how I could use that across all of our pages instead of relying on a content management library that was kind of slow to develop in.&lt;/p&gt;
&lt;p&gt;– David Luhr, UT, UX&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;If you ever decide to sell to consumers, I really think that the speed / responsiveness of Gatsby is a really good selling point. Like when I tried to sell my idea of building the new site in Gatsby (which would take a little longer compared to building it in Squarespace) to my husband, I simply showed him how quick it is to navigate around a Gatsby site and he was instantly sold. The explicit awareness that website speed matters a lot is currently kinda limited to Silicon Valley etc, but the benefits are definitely apparent as well to the average consumer. Pair that with stats around how speed increases conversions and it’d definitely be a pretty appealing offer to people.&lt;/p&gt;
&lt;p&gt;– Juliette Pichot, Germany, web dev&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;so-what-does-this-all-mean&quot;&gt;&lt;a href=&quot;#so-what-does-this-all-mean&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;So what does this all mean?&lt;/h2&gt;
&lt;p&gt;All the feedback on pain points is incredibly important to us. For my final project in my UX bootcamp, I decided that I’d take the top pain point from our interviews and improve plugin discoverability. Along with members of the Gatsby community, I’ve been working on and testing mockups for a new plugin search tool.&lt;/p&gt;
&lt;p&gt;The community has done some excellent work with plugins, and we wanted to celebrate that accomplishment, enable future contributors to learn more from existing plugins, and solve the aforementioned problems by building a plugin search tool.&lt;/p&gt;
&lt;h2 id=&quot;details-on-why-a-plugin-search-tool-matters&quot;&gt;&lt;a href=&quot;#details-on-why-a-plugin-search-tool-matters&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Details on why a plugin search tool matters&lt;/h2&gt;
&lt;p&gt;Everyone is using plugins and many awesome users are building them. Building a plugin search tool will help users find the right plugins to solve their problems.&lt;/p&gt;
&lt;p&gt;Some specific problems with searching for plugins that interviewees described to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Your site breaks because you installed a plugin that wasn’t compatible with the current version of Gatsby.&lt;/li&gt;
&lt;li&gt;You are working after hours trying to build a plugin to help some CMS play nicely with Gatsby and you’re having trouble finding a good plugin to imitate.&lt;/li&gt;
&lt;li&gt;Your fingers are super tired from scrolling up and down the plugin list and you don’t have enough Advil to support this activity and now you’re stuck on the couch with a cramped hand. (&lt;em&gt;Ok, no one actually said this, but they were thinking it, I’m sure&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;until-next-time&quot;&gt;&lt;a href=&quot;#until-next-time&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Until next time&lt;/h2&gt;
&lt;p&gt;We’re working on the final prototypes for the plugin search tool and welcome contributions from the community. Here are ways you can contribute:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Follow the plugin search tool’s progress and contribute to it on the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/3003&quot;&gt;Github issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/shannonb_ux/status/938551014956732418&quot;&gt;Contact me here&lt;/a&gt; if you have feedback that differs from or provides deeper insight into any of the pain points this article mentions&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Contribute to issues in the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues&quot;&gt;Github repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, many thanks to all the community members who have contributed to this research and to making Gatsby awesome. Stay tuned for updates on the plugin search tool and future Gatsby UX research projects!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Taking Gatsby for a spin]]></title><description><![CDATA[A static site generator based on React, does that even make sense? GatsbyJS tries to answer this question with a hypermodern, feature-packed, *jamstacked* development tool that you can try out right now!]]></description><link>https://www.gatsbyjs.org/blog/2017-12-07-taking-gatsby-for-a-spin/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-12-07-taking-gatsby-for-a-spin/</guid><dc:creator><![CDATA[Arden de Raaij]]></dc:creator><content:encoded>&lt;p&gt;A static site generator based on React, does that even make sense? &lt;a href=&quot;/&quot;&gt;GatsbyJS&lt;/a&gt; tries to answer this question with a hypermodern, feature-packed, &lt;em&gt;jamstacked&lt;/em&gt; development tool that you can try out right now! In this post I’ll give you a quick introduction and an overview of my own thoughts on Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;introducing-gatsby&quot;&gt;&lt;a href=&quot;#introducing-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introducing: Gatsby&lt;/h2&gt;
&lt;p&gt;Ever since I started following the &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;Gatsby Twitter account&lt;/a&gt;, I’ve wanted in on the action. It’s not that I really &lt;em&gt;need&lt;/em&gt; a new tool to create static sites, it’s just that every developer tweeting about Gatsby seems to think it’s the most exciting thing on the web since they learned they could combine the &lt;code class=&quot;language-text&quot;&gt;marquee&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;blink&lt;/code&gt; tag. Call it FOMO. Also, the sites that these developers have been showcasing were all so fast and snappy, I had to see what the buzz was about.&lt;/p&gt;
&lt;p&gt;Let’s jump in. Here are some of the important features of Gatsby:&lt;/p&gt;
&lt;h3 id=&quot;react&quot;&gt;&lt;a href=&quot;#react&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React&lt;/h3&gt;
&lt;p&gt;GatsbyJS is based on React which means that you’ll be writing almost everything in JavaScript / JSX. That doesn’t mean though you need loads of React experience to start out with Gatsby The &lt;a href=&quot;/tutorial/&quot;&gt;tutorials&lt;/a&gt; are a great resource and will teach you some React along the way. If you already like React, you’ll most definitely enjoy creating static sites with Gatsby. As your final JavaScript bundle includes the React library, you can include React components as if it was a regular React app.&lt;/p&gt;
&lt;h3 id=&quot;graphql&quot;&gt;&lt;a href=&quot;#graphql&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphql&lt;/h3&gt;
&lt;p&gt;Gatsby was my first introduction to &lt;a href=&quot;http://graphql.org/learn/&quot;&gt;GraphQL&lt;/a&gt; and I’m loving it already. GraphQL is a query language used by Gatsby to let you connect to all kinds of APIs. With it as an abstraction layer, you can pull in all the data you can think of and utilize it in your app. Gatsby comes with plugins to pull in data from several APIs, CMS systems and local files. With GraphQL, you’re able to query data from all these sources in a clear and readable way. The data is instantly available in your components and that’s just super cool. Also, it comes with a browser-based IDE called Graph&lt;em&gt;i&lt;/em&gt;QL which starts along with your development environment. You can use it to see which queries are available, test them out, and see what data these queries return.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./grahiql_screenshot.png&quot; alt=&quot;Screenshot of GraphiQl&quot; title=&quot;GraphiQL&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;progressive-web-app-and-prpl-pattern-blazing-fast&quot;&gt;&lt;a href=&quot;#progressive-web-app-and-prpl-pattern-blazing-fast&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Progressive Web App and PRPL Pattern (Blazing fast)&lt;/h3&gt;
&lt;p&gt;With an eye on the future, Gatsby already implements lots of Googles so called ’&lt;strong&gt;P&lt;/strong&gt;ush, &lt;strong&gt;R&lt;/strong&gt;ender &lt;strong&gt;P&lt;/strong&gt;re-Cache and &lt;strong&gt;L&lt;/strong&gt;azy-load pattern (PRPL, I’m not sure if that acronym will catch on). Gatsby takes care of the pre-loading and code-splitting, which makes browsing around Gatsby sites an insanely fast experience. PRPL + the gatsby offline plugin mean that your site will be considered a PWA, will load insanely fast on any device and scores great in Google lighthouse. Read more on &lt;a href=&quot;/docs/prpl-pattern/&quot;&gt;PRPL&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;webpack-and-plugins&quot;&gt;&lt;a href=&quot;#webpack-and-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webpack and Plugins&lt;/h3&gt;
&lt;p&gt;Can you say React without webpack? I can hardly say &lt;code class=&quot;language-text&quot;&gt;hello world&lt;/code&gt; without webpack anymore, although I’m still not sure how to configure it right on the first go. Gatsby comes with an extensive webpack configuration and you don’t really need to touch if you don’t want to. If you do, you can modify and add to the default configuration with a plugin or in the &lt;code class=&quot;language-text&quot;&gt;gatsby-node&lt;/code&gt; file. There’s already a great range of plugins so most likely any webpack tweak is a plugin install away. With all the plenty of good examples, it’s often straightforward to write your own plugin too.&lt;/p&gt;
&lt;h3 id=&quot;community&quot;&gt;&lt;a href=&quot;#community&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h3&gt;
&lt;p&gt;Even though Gatsby is pretty new, the developers using it seem really involved. There are quite a few &lt;a href=&quot;/blog/&quot;&gt;articles on the Gatsby blog&lt;/a&gt;. People seem to be happy to answer your Gatsby questions on Twitter and on Github you can ask anything without being shot down. Everyone is encouraged to contribute in form of plugins and pull requests, which gives me confidence that we’ll see a lot of additions and improvements in the future.&lt;/p&gt;
&lt;h2 id=&quot;some-thoughts-on-gatsby&quot;&gt;&lt;a href=&quot;#some-thoughts-on-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some thoughts on Gatsby&lt;/h2&gt;
&lt;p&gt;It’s telling that &lt;a href=&quot;https://github.com/gatsbyjs/gatsby#showcase&quot;&gt;most of the websites that are made with Gatsby&lt;/a&gt; are developer portfolios and documentation websites. It shows that Gatsby is still a bit in its early-adopters phase. But seeing what kind of sites are already made with Gatsby, I’m sure the future is bright. I’ve had a blast creating my own site with Gatsby (&lt;a href=&quot;https://github.com/aderaaij/ardennl-gatsby&quot;&gt;checkout the github repo here&lt;/a&gt;) and in the end it didn’t take more than a weekend to complete, including doing the &lt;a href=&quot;/tutorial/&quot;&gt;tutorial&lt;/a&gt; and experimenting with the &lt;a href=&quot;/docs/gatsby-starters/&quot;&gt;Gatsby starters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some other thoughts I had while working with Gatsby:&lt;/p&gt;
&lt;h3 id=&quot;its-fast&quot;&gt;&lt;a href=&quot;#its-fast&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;It’s fast&lt;/h3&gt;
&lt;p&gt;Gatsby definitely delivers on speed. The whole PRPL pattern thing seems to work miracles. I tried browsing the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby#showcase&quot;&gt;list of sites made with Gatsby&lt;/a&gt; with network throttling set to ‘slow 3g’ in Google Chrome and the performance of these sites is still impressive.&lt;/p&gt;
&lt;h3 id=&quot;graphql-is-amazing&quot;&gt;&lt;a href=&quot;#graphql-is-amazing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphQL is amazing&lt;/h3&gt;
&lt;p&gt;Data from anywhere with static output. That’s sort of the holy grail isn’t it? Right now the data I use in this site comes from markdown files, but I can already see that switching to another content source is going to be a breeze with GraphQL. The queries are clean and readable and the Graph&lt;em&gt;i&lt;/em&gt;QL IDE is the perfect helper. In a way, GraphQL allows you to separate your front-end from the type of data source.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;es6&quot;&gt;
      &lt;pre class=&quot;language-es6&quot;&gt;&lt;code class=&quot;language-es6&quot;&gt;export const query = graphql`
  query BlogPostQuery($slug: String!) {
    markdownRemark(fields: { slug: { eq: $slug } }) {
      html
      fields {
        slug
      }
      frontmatter {
        title
        date(formatString: &amp;quot;DD MMMM, YYYY&amp;quot;)
        cover {
          childImageSharp {
            fixed(width: 1200) {
              src
            }
          }
        }
      }
    }
  }
`&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;deployment-and-content-management-can-be-so-good&quot;&gt;&lt;a href=&quot;#deployment-and-content-management-can-be-so-good&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment and content management can be so good!&lt;/h3&gt;
&lt;p&gt;After reading some articles on the Gatsby site, I decided to set up my Gatsby hosting on a free plan from &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; (which is ridiculously generous by the way, what’s the catch?) and that has been a fun experience. Netlify already supports Gatsby out of the box, which means you can configure automatic deploys with &lt;code class=&quot;language-text&quot;&gt;git&lt;/code&gt; in a few clicks. Every time I push to master, the site gets rebuild and uploaded by Netlify. &lt;em&gt;Magic&lt;/em&gt;. There’s also the possibility to configure staging servers based on your branches, so you can always test out your changes before merging to master and deploying.&lt;/p&gt;
&lt;p&gt;But wait, there’s more. If you use &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt; as Content Management System and Netlify as your host, you can easily create a Webhook to trigger a rebuild on every content update! I haven’t tried this myself yet, but &lt;a href=&quot;https://www.halfelectronic.com/post/setting-up-gatsby-js-contentful-and-netlify/&quot;&gt;this posts&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/fernandopoumian&quot;&gt;Fernando Poumián&lt;/a&gt; is a great resource to get you going.&lt;/p&gt;
&lt;p&gt;Incremental builds aren’t yet possible, so every update means a complete rebuild. I’m sure that’s no cause for concern on smaller sites, but with larger sites that are updated often it could be a problem. Luckily, incremental builds will be part of Gatsby &lt;a href=&quot;https://twitter.com/gatsbyjs/status/937053640652611584&quot;&gt;‘sooner than later’&lt;/a&gt;, which will take care of that problem.&lt;/p&gt;
&lt;h3 id=&quot;gatsby-image-plugin-is-cool&quot;&gt;&lt;a href=&quot;#gatsby-image-plugin-is-cool&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby Image plugin is cool&lt;/h3&gt;
&lt;p&gt;Did you see the SVG traced image before the image was loaded? If not, you’re probably on Safari and I still haven’t implemented the &lt;code class=&quot;language-text&quot;&gt;intersection observer&lt;/code&gt; polyfill. But in other browsers, images you add with the &lt;a href=&quot;https://using-gatsby-image.gatsbyjs.org/&quot;&gt;gatsby image&lt;/a&gt; component will include a blur or traced svg placeholder effect by default. It also has &lt;code class=&quot;language-text&quot;&gt;srcset&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;webp&lt;/code&gt;. It can use some work though it adds a few wrappers around your images that are hard to reconfigure without using &lt;code class=&quot;language-text&quot;&gt;!important&lt;/code&gt;. Oh and be warned, it uses &lt;code class=&quot;language-text&quot;&gt;object-fit&lt;/code&gt; by default, which is unsupported by IE11 and older browsers. Of course, you don’t have to use this plugin and every addition / change is discussable on Github.&lt;/p&gt;
&lt;h3 id=&quot;keep-an-eye-on-the-output&quot;&gt;&lt;a href=&quot;#keep-an-eye-on-the-output&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keep an eye on the output&lt;/h3&gt;
&lt;p&gt;I’ll start by admitting that I haven’t validated the HTML of my own site yet, but I’m sure it’ll need some work. I feel like the combination of JSX and using loads of React Components can make the HTML output messy real quick . Combined with the use of Gatsby plugins that also manipulate your output, I’d say it’s extra important to keep an eye out on the generated code. I understand that GatsbyJS is very much about the modern web, but that’s why we’ve got &lt;em&gt;progressive enhancement&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&quot;when-your-favorite-tool-is-a-hammer&quot;&gt;&lt;a href=&quot;#when-your-favorite-tool-is-a-hammer&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;When your favorite tool is a hammer…&lt;/h3&gt;
&lt;p&gt;Doing everything in React is a blessing and a curse. You can solve everything with JavaScript but that doesn’t mean you HAVE to solve everything with JavaScript. At times I find myself in such a flow of writing just JavaScript that I tend to use it to solve problems that could have been fixed with a &lt;code class=&quot;language-text&quot;&gt;hover&lt;/code&gt; selector in CSS.&lt;/p&gt;
&lt;h3 id=&quot;css-in-javascript-i-can-dig-it&quot;&gt;&lt;a href=&quot;#css-in-javascript-i-can-dig-it&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS in JavaScript, I can dig it.&lt;/h3&gt;
&lt;p&gt;You can use anything to style your Gatsby site; CSS, SCSS, Styled Components, CSS-in-JS, you name it. I wanted to give the whole “Use CSS in your JavaScript” a spin and chose for a library called &lt;a href=&quot;https://github.com/emotion-js/emotion&quot;&gt;emotion-js&lt;/a&gt; based on the fact that I dig the Bowie emoji on its page. After trying it out for a few days I have to admit that I really like it. Creating and styling a component in the same place is such a nice way of working. Even without the cleverness of using React state to toggle CSS values, it’s a great tool. There’s still some work to do considering autocomplete and syntax highlighting, but when working with components like this it makes a lot of sense.&lt;/p&gt;
&lt;h2 id=&quot;in-conclusion&quot;&gt;&lt;a href=&quot;#in-conclusion&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In conclusion&lt;/h2&gt;
&lt;p&gt;I like Gatsby and I like the ideas that it promotes. The sites created with Gatsby are blazing fast, as promised. The development environment is one big party and GraphQL makes me rethink my life. I am really looking forward to develop more sites with Gatsby and I’m hoping to find an opportunity to replace a traditional WordPress install with a Gatsby site that pulls in the WP data. When that time comes, I’ll report back of course.&lt;/p&gt;
&lt;p&gt;If you have any questions based on this post, don’t hesitate to contact me on &lt;a href=&quot;http://twitter.com/ardennl&quot;&gt;Twitter&lt;/a&gt; or via &lt;a href=&quot;mailto:a.de.raaij@gmail.com&quot;&gt;mail&lt;/a&gt;. Thanks for reading!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby + Contentful + Netlify (and Algolia)]]></title><description><![CDATA[Gatsby has been getting a lot of recognition and adoption lately, and for good reason. It’s so flexible and it works well with nearly everything.]]></description><link>https://www.gatsbyjs.org/blog/2017-12-06-gatsby-plus-contentful-plus-netlify/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-12-06-gatsby-plus-contentful-plus-netlify/</guid><dc:creator><![CDATA[Josh Weaver]]></dc:creator><content:encoded>&lt;p&gt;Gatsby has been getting a lot of recognition and
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby#showcase&quot;&gt;adoption&lt;/a&gt; lately, and for good
reason. It’s so flexible and it works well with nearly everything.&lt;/p&gt;
&lt;p&gt;If you’re on a tight budget and don’t want to sacrifice developer experience or
cutting-edge deployments, I’ve landed on a favorite set of tools (Gatsby
included, of course) for developing static sites that solves multiple problems
at once.&lt;/p&gt;
&lt;p&gt;The use case I’ll be covering is a documentation site for our company’s main
software product. The site contains a lot of content with hundreds of articles.&lt;/p&gt;
&lt;p&gt;Here’s a list of my requirements for this site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Speed - both in development and site performance&lt;/li&gt;
&lt;li&gt;Ease of use - both in developer experience and content upkeep&lt;/li&gt;
&lt;li&gt;Searchable content - it is a doc site after all&lt;/li&gt;
&lt;li&gt;Inexpensive Hosting - maximize value (who doesn’t want this?)&lt;/li&gt;
&lt;li&gt;Automated continuous deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following is a report on my high-level experience of using Gatsby with
Contentful, Netlify and Algolia and the problems they solve — without getting
down into code.&lt;/p&gt;
&lt;h1 id=&quot;static-to-the-rescue&quot;&gt;&lt;a href=&quot;#static-to-the-rescue&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static to the Rescue?&lt;/h1&gt;
&lt;p&gt;I know it’s bad to make assumptions, but I’m going to assume that if you’re here
and reading this, you at least know a little about the perks of static sites and
the JAMstack. If not, check out &lt;a href=&quot;https://jamstack.org/&quot;&gt;https://jamstack.org/&lt;/a&gt;
for a quick breakdown on why web development is, for lack of a better phrase,
“going back to the basics.”&lt;/p&gt;
&lt;p&gt;Having dealt with my share of CMS headaches with Joomla in the almost-forgotten
past, and Wordpress in the more recent years, I’ve been on a quest to simplify
things. I don’t want to worry about having a plugin or theme get hacked or the
constant nagging to install updates. I also would prefer to not deal with themes
at all and just have flexible building blocks to shape my site’s appearance via
my own codebase. Static sites excel at these things.&lt;/p&gt;
&lt;p&gt;But while static sites give you lots of perks, they do create some extra hurdles
over going the traditional route.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:56%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/LfjSCQ5ivKH3q&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/jump-rabbit-mixed-LfjSCQ5ivKH3q&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While they’re generally fast out of the box, static sites don’t make their
content easily editable. After all, a static site’s content is usually just that
— static. That means, traditionally, you would have to edit the page code to
make content changes or add a markdown file then fire off a site rebuild
command, and finally redeploy. Even though static site generators have solved
this in many clever ways, I feel Gatsby solves this problem in a particularly
elegant fashion via it’s GraphQL data layer (more on that later) and its vast
ecosystem of data &lt;a href=&quot;/docs/plugins/&quot;&gt;source plugins&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before I jump into the topic of content and “data”, I want to briefly say that
building a static site template with React-based architecture and hot module
reloading is just plain fun. Gatsby’s CLI gets you going so quickly. It really
is a joy to use. Judging from all the
&lt;a href=&quot;http://twitter.com/gatsbyjs&quot;&gt;twitter comments&lt;/a&gt; saying the same thing, I think
that’s a common consensus.&lt;/p&gt;
&lt;p&gt;Okay, now back to some static hurdles.&lt;/p&gt;
&lt;h1 id=&quot;a-problem-of-content&quot;&gt;&lt;a href=&quot;#a-problem-of-content&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Problem of Content&lt;/h1&gt;
&lt;p&gt;Our site has a lot of content (~300 articles) that needs to be maintained by
non-developers, my co-workers. This meant we needed an approachable interface
for copy and content editing. I wanted to make it as convenient as logging into
Wordpress and publishing from there, without the Wordpress. So the publishing
experience couldn’t rely on creating a file and committing changes to a git
repo.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sidebar: There is
&lt;a href=&quot;/packages/gatsby-source-wordpress/&quot;&gt;Gatsby-Source-Wordpress&lt;/a&gt;
plugin that pulls in content via a Wordpress API. However, to me, this was not
appealing because I was trying to avoid hosting a traditional CMS entirely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;solution-contentful--gatsby&quot;&gt;&lt;a href=&quot;#solution-contentful--gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution: Contentful + Gatsby&lt;/h1&gt;
&lt;p&gt;Contentful is a hosted headless CMS with a fantastic user experience. It’s
similar to having a backend like Wordpress, but you are fully responsible for
the front-end layer. The beauty of Contentful is threefold.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intuitive and attractive UI&lt;/li&gt;
&lt;li&gt;Simple content modeling&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/pricing/&quot;&gt;Free tier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dealing with the back-end of Contentful is refreshing and the content modeling
really leads the pack when compared to other headless content management
systems. It doesn’t feel like something that just gets the job done, it’s
actually really nice to use. They also just pushed some
&lt;a href=&quot;https://www.contentful.com/blog/2017/11/28/work-smarter-with-our-new-search-features/&quot;&gt;great new changes&lt;/a&gt;
that made it even easier to search and filter our articles on the back-end.&lt;/p&gt;
&lt;p&gt;Contentful also happens to offer a
&lt;a href=&quot;https://www.contentful.com/pricing/&quot;&gt;generous free tier&lt;/a&gt; with useful features
for a small company or a few projects. At the time of this writing, you get a
few spaces (think projects), ten thousand content records, and five users that
can be admins, editors or authors of content. All they ask in return is that you
display a Contentful logo on your site footer or attribute them in your code
repo.&lt;/p&gt;
&lt;p&gt;With that salesy pitch out of the way, how does Contentful work within our
Gatsby site?&lt;/p&gt;
&lt;p&gt;Our documentation exists in 40 different parent topics and numerous articles in
each topic. The largest challenge with this was creating topic-based navigation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;rollcall-docs.png&quot; alt=&quot;Roll Call Docs&quot;&gt;&lt;/p&gt;
&lt;p&gt;Gatsby’s data handling makes these problems easy to manage by simplifying how
you get data to your site from external sources. It’s not &lt;em&gt;entirely&lt;/em&gt; unique from
other static site generators in that regard — other generators utilize plugins
for grabbing content as well, but how you deal with actually pulling it into
your React components/pages with GraphQL is beautiful.&lt;/p&gt;
&lt;p&gt;After you install the &lt;code class=&quot;language-text&quot;&gt;gatsby-source-contentful&lt;/code&gt;
&lt;a href=&quot;/packages/gatsby-source-contentful/&quot;&gt;plugin&lt;/a&gt; with NPM
and add your Contentful API credentials to the gatsby-config file, the fun
begins.&lt;/p&gt;
&lt;p&gt;Every time you run Gatsby with the &lt;code class=&quot;language-text&quot;&gt;develop&lt;/code&gt; command or do a new build with the
&lt;code class=&quot;language-text&quot;&gt;build&lt;/code&gt; command, the plugin fetches any new content from the Contentful API. All
this data is then available and ready to query locally in your development
environment. This means you can start pulling in Contentful assets and content
(assets = images/media, content = pages/articles/text/markdown, etc.) using
GraphQL queries right inside the template files.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sidenote: I had created a blog for my wife with Gatsby prior to this doc site,
so I had a little experience with the Gatsby APIs. But I still consider myself
a complete newbie when it comes to GraphQL. Lucky for me, Gatsby’s tutorials
and community are awesome at answering questions or handling general usage
issues.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In a single GraphQL query I was able to pull in all the topics and related
article titles set up in my Contentful Content Model for navigation. By
leveraging React and some GraphQL, I was able to create a dynamically generated
sidebar menu based off the content that got pulled in from Contentful. I have to
say, it feels so freeing being about to create static content with dynamic data
like this.&lt;/p&gt;
&lt;p&gt;The articles themselves are written in markdown in the Contentful editor. They
get converted to HTML via a transformer plugin within Gatsby. The markdown
editing in Contentful is quite practical with standard WYSIWYG-like editor
features. I haven’t heard any complaints from my co-workers.&lt;/p&gt;
&lt;h1 id=&quot;searching-for-a-search-solution&quot;&gt;&lt;a href=&quot;#searching-for-a-search-solution&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching for a Search Solution&lt;/h1&gt;
&lt;p&gt;Another “problem” with static sites is the lack of out-of-the-box site search.
Most search implementations occur between the server and the database. As a doc
site, users typically expect solid search functionality. There are a few
frontend only JavaScript search libraries (like &lt;a href=&quot;https://lunrjs.com/&quot;&gt;lunr.js&lt;/a&gt;)
that take a search query and parse a pre-built JSON index of your content.&lt;/p&gt;
&lt;p&gt;I could have created this index by tying into the &lt;code class=&quot;language-text&quot;&gt;onPostBuild&lt;/code&gt; Gatsby API. This
event fires after all the pages are generated, so all page nodes are available
to parse to create a search index.&lt;/p&gt;
&lt;p&gt;I quickly decided that this approach wouldn’t work well for our case because of
the vast number of articles. The index file alone would have been rather large
and present a hefty chunk of the site download which I felt was antithetical to
the performance benefits of using Gatsby (or even any static site). I needed
something that would operate client-side, but that had the search brains still
residing in the cloud somewhere. Though an option, I didn’t have time to build
my own solution.&lt;/p&gt;
&lt;h1 id=&quot;solution-algolia--gatsby&quot;&gt;&lt;a href=&quot;#solution-algolia--gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution: Algolia + Gatsby&lt;/h1&gt;
&lt;p&gt;This solution was a bit of a trial and error process for me. I had seen many doc
sites use Algolia online in my dev travels. I knew it offered a usable free tier
(again with logo attribution) with what seemed like enough free API calls to
suit our user base. What I didn’t know was how I would get all my content
indexed properly. Algolia does have helpful documentation on indexing.&lt;/p&gt;
&lt;p&gt;It was more of a challenge of how to break down the content in the articles into
the chunks that the index requires. The
&lt;a href=&quot;https://www.algolia.com/doc/guides/indexing/structuring-your-data/?language=php#indexing-long-documents&quot;&gt;Algolia Docs&lt;/a&gt;
state that your index records shouldn’t be more than 10kb each which roughly
equates to a paragraph or two each. This suddenly became a challenge in how to
parse my article content by section. There wasn’t a good example out there of
how to accomplish this.&lt;/p&gt;
&lt;p&gt;Eventually I settled on an HTML to JSON library that turned the page hierarchy
into a parseable JSON object. I set up a script in the &lt;code class=&quot;language-text&quot;&gt;onPostBuild&lt;/code&gt; Gatsby
event API that took the built HTML from each article. The library did the magic
of converting the HTML to JSON, then I iterated through the JSON. While keeping
track of the last linked heading (h tag), I set the index record’s page link
accordingly for each article section. The index was then uploaded to Algolia via
their node.js client.&lt;/p&gt;
&lt;p&gt;It wasn’t pretty, but it worked.&lt;/p&gt;
&lt;p&gt;I ended up coupling this indexing method with
&lt;a href=&quot;https://community.algolia.com/react-instantsearch/&quot;&gt;React InstantSearch&lt;/a&gt;. This
is Algolia’s official React component library for utilizing with their service.
The final product was a search input with highlighted suggested results that
allowed the user to click one of those results and be taken directly to a parent
heading on a particular article.&lt;/p&gt;
&lt;p&gt;Not bad.&lt;/p&gt;
&lt;p&gt;Though after I wired all this up, it turned out that I was having some issues
with my implementation that left me seeking help from support. I was receiving
emails about quota usage, and I was sure I wasn’t even coming close to actual
usage limits.&lt;/p&gt;
&lt;p&gt;This was ironically about the same time I discovered
&lt;a href=&quot;https://community.algolia.com/docsearch/&quot;&gt;DocSearch&lt;/a&gt; by Algolia. So as any good
developer would do, I scrapped all my hard work and just signed up for
DocSearch. Long story short is that they crawl your site every 24 hours,
updating the index for you. You include a script tag that ties their API to your
search input. Style it with some CSS. Bam. Done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;algolia-search.png&quot; alt=&quot;Algolia DocSearch FTW&quot;&gt;&lt;/p&gt;
&lt;p&gt;And it worked better out of the box than my implementation did. I felt kinda
stupid after going through all the effort because I realized that the
Reactjs.org repo had the answer right in their
&lt;a href=&quot;https://github.com/reactjs/reactjs.org/search?utf8=%E2%9C%93&amp;#x26;q=docsearch&amp;#x26;type=&quot;&gt;source&lt;/a&gt;.
They use DocSearch instead of rolling their own indexing and search interface.
Oh well.&lt;/p&gt;
&lt;h1 id=&quot;hosting--deployment&quot;&gt;&lt;a href=&quot;#hosting--deployment&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hosting &amp;#x26; Deployment&lt;/h1&gt;
&lt;p&gt;A great thing about static sites is that you can host them just about anywhere.
You get a folder of pre-built files that you can throw up on any web server and
you’re done. You can even dump it in an Amazon S3 bucket and save a ton of money
with very little work.&lt;/p&gt;
&lt;p&gt;So while hosting is easy, static sites adds a manual step for deploying changes
made to a site’s code or content — unlike WordPress or other traditional CMSes
where a content change goes live immediately.&lt;/p&gt;
&lt;p&gt;If you don’t configure some form of deployment automation, you have to manually
initiate a build and upload it yourself. I wanted a continuous development
workflow — push a commit to my code repo and have Gatsby run its build in the
cloud and automatically deploy the new version of the site to a hosting
provider.&lt;/p&gt;
&lt;p&gt;Can this be done with AWS? Sure, with a bit of configuration and more grunt work
in setup. Can it be done elsewhere with little to no configuration? How about
for free?&lt;/p&gt;
&lt;p&gt;Luckily I already knew the answers to these questions because I had already
discovered Netlify for some other projects.&lt;/p&gt;
&lt;h1 id=&quot;solution-netlify--gatsby&quot;&gt;&lt;a href=&quot;#solution-netlify--gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution: Netlify + Gatsby&lt;/h1&gt;
&lt;p&gt;Plugging any static site into the Netlify workflow is a no brainer, but after I
found Gatsby, I knew there was no other option for me. These two pair so well
together!&lt;/p&gt;
&lt;p&gt;Netlify recently changed &lt;a href=&quot;https://www.netlify.com/pricing/&quot;&gt;their pricing&lt;/a&gt; to
improve what was already an awesome hosting per dollar value. I can’t get
through this section without a bullet list of why Netlify is so fantastic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Free to use for personal/commercial project (seriously great free tier)&lt;/li&gt;
&lt;li&gt;Push button HTTPS via Let’s Encrypt built in&lt;/li&gt;
&lt;li&gt;Fast Global CDN&lt;/li&gt;
&lt;li&gt;Support for custom domains&lt;/li&gt;
&lt;li&gt;Atomic deploys&lt;/li&gt;
&lt;li&gt;A crazy-cool, integrated build engine&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;And a lot more…&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Did I mention you get all this for FREE?&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/vMnuZGHJfFSTe&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/vMnuZGHJfFSTe&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And back to using it with Gatsby.&lt;/p&gt;
&lt;p&gt;After you link your Netlify site to a specific code repository, Netlify’s build
bots take care of the rest. From that point on, when you push a change to your
repo, the build bot says, “Hey look! a change! I need to run the &lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt;
command…”, then it follows the package.json (or yarn file) in the repo and
downloads the necessary dependencies if they aren’t already cached, and then
builds out the static site.&lt;/p&gt;
&lt;p&gt;And during this build process, Gatsby’s clever APIs are taking care of grabbing
content from Contentful and generating the static pages for the articles.
Awesome. When this process is done, you can even be notified via Slack, or
Email.&lt;/p&gt;
&lt;p&gt;Netlify is the easy-button for your deploy/hosting problem.&lt;/p&gt;
&lt;p&gt;Coupled with your Gatsby site, the site performance is outstanding. Both
perceived performance and measurable performance are there. You get
time-to-first-byte measurements in the single digits. The code-splitting and
pre-fetching perks of Gatsby also help to make your site score well in web
performance tests. All out of the box.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;webpage-test.png&quot; alt=&quot;Webpage Test Results&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now, to come full circle I needed something that would trigger a new site build
when someone edited or added an article from Contentful. Again, Contentful and
Netlify to the rescue.&lt;/p&gt;
&lt;p&gt;Contentful has webhook functionality built-in and lets you fire off a request
when an action is taken on a piece of content or when content is created.
Perfect. With this hook, Contentful talks to Netlify when there’s a change or
addition, and Netlify rebuilds the site and deploys it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;netlify-build-webhook.png&quot; alt=&quot;Contentful Webhook Build&quot;&gt;&lt;/p&gt;
&lt;p&gt;It’s a match made in JAMstack heaven.&lt;/p&gt;
&lt;h1 id=&quot;is-it-magic&quot;&gt;&lt;a href=&quot;#is-it-magic&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is it Magic?&lt;/h1&gt;
&lt;p&gt;Gatsby makes building the site fun and painless. It gets out of the way and lets
you be creative with your craft — yet also adds some insane perks, like
responsive image handling and lazy loading, with very little effort on your
part. Contentful lets you focus on your content the same way Gatsby lets you
focus on developing, and Netlify really “just works.” It lets you hit a few
buttons and leaves you with a “Is it really this easy?” kind of feeling.&lt;/p&gt;
&lt;p&gt;Now, hopefully, our customers will feel the same with our site.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:92%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/12NUbkX6p4xOO4&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/shia-labeouf-12NUbkX6p4xOO4&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why I created my blog with Gatsby and Contentful]]></title><description><![CDATA[I recently deployed my new blog at
 halfelectronic.com  and I thought it would be
fitting to talk about how I built it in the first place…]]></description><link>https://www.gatsbyjs.org/blog/2017-11-09-why-i-created-my-blog-with-gatsby-and-contentful/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-11-09-why-i-created-my-blog-with-gatsby-and-contentful/</guid><dc:creator><![CDATA[Fernando Poumian]]></dc:creator><content:encoded>&lt;p&gt;I recently deployed my new blog at
&lt;a href=&quot;https://www.halfelectronic.com&quot;&gt;halfelectronic.com&lt;/a&gt; and I thought it would be
fitting to talk about how I built it in the first place — you know, me being a
web developer and all.&lt;/p&gt;
&lt;p&gt;There is certainly no shortage of options when it comes to platforms and CMSs to
build a blog these days: From the more traditional, cumbersome and usually
troublesome PHP based ones — I’m looking at you Wordpress — to the more
minimal and modern ones like Ghost, Medium and Tumblr.&lt;/p&gt;
&lt;p&gt;However, in my experience, I found that pretty much all of these options
typically force you to give up at least one of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Money: As in the money you spend per month keeping the blog up and running.&lt;/li&gt;
&lt;li&gt;Time: As in the time you spend maintaining, scaling and securing the blog
infrastructure once it has been deployed (i.e. DevOps time).&lt;/li&gt;
&lt;li&gt;Control: As in the degree of control you have over the blog’s appearance,
performance and architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This last point refers more than anything to online publishing platforms like
Medium and Wordpress.com — not to be confused with the self-hosted Wordpress
alternative, which we’ll discuss in a moment. And while that lack of control
might not represent a problem to many bloggers, I often find it too limiting for
my taste. I like to have my own domain, my own URL structures, my own color
scheme and my own silly sidebar widgets which display what song I’m listening at
the moment — yeah, that’s a thing I implemented 😁.&lt;/p&gt;
&lt;p&gt;By the same token, the idea of not having to worry about keeping your blog up
and running 24/7 is certainly an appealing one. When you publish an article on
Medium.com you know that no matter how many people read it, it is very unlikely
that Medium will crash and people won’t be able to access it — and if it
happens, it’s not really your problem anymore!&lt;/p&gt;
&lt;p&gt;It will be your problem, however, if you decide to create your own custom blog
using a typical self-hosted Content Management System, and you will most likely
have to solve that problem by either throwing money or time at it.&lt;/p&gt;
&lt;p&gt;Let’s take a Wordpress self-hosted installation, for example, simply because
it’s the most common type of CMS out there and it’s the one I have the most
experience with.&lt;/p&gt;
&lt;p&gt;First of all, you are going to need to host your blog on a server
running PHP and MySQL. No biggie right? After all, there are thousands and
thousands of hosting companies out there who make a living out of provisioning
shared hosting environments with PHP and MySQL every day. Evidently, those
hosting companies are out there to make a buck or two, so they will charge you
an amount to host your new blog on their servers, which only seems fair.&lt;/p&gt;
&lt;p&gt;If you are a little bit more tech savvy and have experience provisioning
software in a Linux distribution, you might prefer to rent a droplet from
Digital Ocean and host the blog yourself. This, in turn, will allow you to have
greater control over your site. However, you will also to pay for that droplet,
even if it’s the cheaper $5/month one.&lt;/p&gt;
&lt;p&gt;Whatever path you take, let’s say that you now have your new Wordpress blog up
and running. Now what?&lt;/p&gt;
&lt;p&gt;Well, you’re most likely gonna want to spend some time securing that site
against hackers. Why? Because hackers love Wordpress sites. Don’t believe me?
Ok, just Google the words “Wordpress hacked” and be prepared to read some really
nasty horror stories. As someone who spent three years working as a Wordpress
developer I could tell you some of those myself, but let’s leave that for
another day.&lt;/p&gt;
&lt;p&gt;Now, I am not saying that the Wordpress Core is an insecure piece of software —
because I genuinely believe it is not. However, I do believe that Wordpress
suffers from the same kind of “ironic luck” that Windows has as an Operating
System; that is, because of its massive popularity, hackers have a lot of
incentives to try and find security vulnerabilities on Wordpress installations,
and they often succeed at that. In that regard, you might even say that
Wordpress is &lt;em&gt;the&lt;/em&gt; Windows of Content Management Systems.&lt;/p&gt;
&lt;p&gt;Alright, let’s say that you have done enough to secure your site and start
writing your posts.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:100%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/VBwXWPvUdxzPi&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/funny-computer-virus-VBwXWPvUdxzPi&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, you start realizing that your new awesome Wordpress blog is
actually kind of slow…&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:55%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/kkpcRessCvNyo&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/angry-computer-frustrated-kkpcRessCvNyo&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are many reasons this could be happening: Maybe your shared hosting
provider sucks, or maybe that shiny new $50 theme you bought on ThemeForest
actually contains a lot of crap code — a very common and too well-known
scenario.&lt;/p&gt;
&lt;p&gt;So, what do you do? Well, if you care about your readers and/or your SEO
strategy, then you will probably need to invest some time optimizing your site
speed, which in my experience might have varying degrees of success depending on
your setup and technical expertise.&lt;/p&gt;
&lt;p&gt;If you were clever enough to get your own Digital Ocean droplet and configure
your own Apache instance, then you could definitely implement a cache layer with
something like Varnish, which could help make your blog run a lot faster. If
not, you will probably have to leverage one of those “magic” Wordpress cache and
minification plugins, which in my experience are very unpredictable and
unreliable, and which might also introduce more security vulnerabilities to your
site.&lt;/p&gt;
&lt;p&gt;Well, let’s assume that despite all of this, one way or another, you manage to
establish a fairly successful Wordpress blog with a decent reader base. Now the
million dollar question is: “But will it scale?”&lt;/p&gt;
&lt;p&gt;What will happen if one of your posts gets picked by Reddit or HackerNews and
suddenly you start getting tens of thousands of simultaneous hits? Will your
shared hosting provider be cool with that? (Spoiler alert: They probably won’t.)&lt;/p&gt;
&lt;p&gt;If you are managing your own server, did you configure Varnish correctly? What
if MySQL crashes while you are away on vacations? &lt;em&gt;What if? What if?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now, I’m not trying to be pessimistic here. These are very realistic scenarios
that I regularly came across in my years of experience as a Wordpress developer.
Turns out that managing and scaling traditional monolithic LAMP stack
applications is usually a time-consuming task, to say the least.&lt;/p&gt;
&lt;p&gt;You might decide to take the easy route and host your blog on a Wordpress
specialized hosting service like &lt;a href=&quot;https://wpengine.com/&quot;&gt;WP Engine&lt;/a&gt;, which will
take care of all things related to security and scaling for you. But then you
better be prepared to set aside $29 each month, which is what their cheapest
plan costs.&lt;/p&gt;
&lt;p&gt;I don’t know about you, but spending $29 each month on a simple blog seems a
little bit excessive to me, especially considering we could be spending next to
nothing and end up with an infinitely more secure, scalable and faster website.&lt;/p&gt;
&lt;p&gt;Say what?&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:75%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/xT0xeqCPRLHBUvWa88&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/way-orange-better-xT0xeqCPRLHBUvWa88&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;enter-the-world-of-static-site-generators&quot;&gt;&lt;a href=&quot;#enter-the-world-of-static-site-generators&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enter the world of static site generators…&lt;/h2&gt;
&lt;p&gt;If you are a developer, you probably are familiar with Static Site Generators,
or you have at least come across a site that was built with one, even if you
didn’t realize it. Up until recently, they have been mostly used for
documentation sites of open source projects, because they are very cheap to make
and because you can host them for free on
&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For those very same reasons, developers also often use them to create their own
personal blogs and portfolio sites, which only makes sense right? After all, if
you are a developer you probably don’t need a nice GUI to write Markdown posts
and you are most likely comfortable enough with the terminal and with version
control in order to generate and push an updated version of your blog to GitHub
Pages manually.&lt;/p&gt;
&lt;p&gt;Because they are just built with static assets, that means there are no
databases to maintain or secure. GitHub is in itself our database, so to speak.
That also means that our site is extremely unlikely to go down, regardless of
the number of visitors we throw at it.&lt;/p&gt;
&lt;p&gt;All that sounds very nice and dandy, but unfortunately the web is not only made
out of open source projects documentation sites and developer blogs — although
sometimes I wish it was!&lt;/p&gt;
&lt;p&gt;Even more importantly, the world is not full of tech-savvy developers who know
their way around the terminal and Git. This, I think, is the main reason why
Static Sites Generators have only enjoyed a very limited success and adoption.
The truth is, managing content in these sites has traditionally required a
certain level of technical knowledge which the average user does not possess.&lt;/p&gt;
&lt;p&gt;“But wait, isn’t that what Content Management Systems are for?” — I hear you
asking. See, we have come full circle now!&lt;/p&gt;
&lt;p&gt;Why yes, they are!&lt;/p&gt;
&lt;p&gt;In fact, they are excellent at doing just that, managing content. Or, in other
words, providing a nice GUI so that both technical and non-technical users can
manage content — that is, adding it, updating it, deleting it, publishing it as
a draft, etc.&lt;/p&gt;
&lt;p&gt;The problem is that the monolithic and highly coupled architecture of most
Content Management Systems out there (i.e. Wordpress, Drupal, etc) usually means
that your CMS will not only manage your content but will also be in charge of
rendering it to the screen; and this architectural choice, in my opinion, is at
the root of many of the headaches I described previously.&lt;/p&gt;
&lt;p&gt;If that’s the case, wouldn’t it be nice if we could have a Content Management
System which only took care of managing content but we also had a Static Site
Generator which could take all that content and render it into a full-blown
static website?&lt;/p&gt;
&lt;p&gt;That would give us the best of both worlds, right?&lt;/p&gt;
&lt;p&gt;Well, a guy named &lt;a href=&quot;https://github.com/KyleAMathews&quot;&gt;Kyle Mathews&lt;/a&gt; already
thought of that and created Gatsby.js.&lt;/p&gt;
&lt;h2 id=&quot;generating-static-websites-with-react-and-webpack&quot;&gt;&lt;a href=&quot;#generating-static-websites-with-react-and-webpack&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating static websites with React and Webpack&lt;/h2&gt;
&lt;p&gt;A little disclaimer: I absolutely love React, so, when I first learned that
there were some emerging Static Site Generators who leveraged only React and
Webpack, I knew that I had to try at least one of them for the new upcoming blog
I was planning to build. These projects were &lt;a href=&quot;http://gatsbyjs.org/&quot;&gt;Gatsby.js &lt;/a&gt;
and &lt;a href=&quot;https://phenomic.io/&quot;&gt;Phenomic&lt;/a&gt;, and both were still quite young back then,
neither of them having reached the 1.0 release yet.&lt;/p&gt;
&lt;p&gt;Ironically I chose Phenomic, mainly because I liked what the guys from
&lt;a href=&quot;http://serverless.com/&quot;&gt;Serverless.com &lt;/a&gt;had done with their website at that
time — built using Phenomic.&lt;/p&gt;
&lt;p&gt;So, I went ahead and built my blog using Phenomic. Overall, I thought it was a
very good Static Site Generator. It allowed me to use CSS Modules, PostCSS and
Hot Reloading out of the box, which translated into a very pleasant frontend
development experience.&lt;/p&gt;
&lt;p&gt;However, at the end of the day, Phenomic was just another old-school Static Site
Generator like &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; or &lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;, in
the sense that the only data it could handle was Markdown files.&lt;/p&gt;
&lt;p&gt;For a simple developer blog, Phenomic might have been enough, but it was
definitely not something I could expect to use in more ambitious projects that
were meant to be updated by non-technical clients. But to be fair, neither were
all the rest of the Static Site Generators up to that point. Yes, Hugo is
insanely fast at generating a lot of pages, and Jekyll has a very mature plugin
ecosystem, but they’re projects that focus on creating sites meant to be updated
by developers. You just can’t expect the average user to clone a GitHub
repository, add a new Markdown file, add the post metadata in Front Matter
format, commit the changes and push it upstream.&lt;/p&gt;
&lt;p&gt;But then Gatsby.js hit the 1.0 release, and everything changed…&lt;/p&gt;
&lt;h2 id=&quot;meeting-gatsbyjs&quot;&gt;&lt;a href=&quot;#meeting-gatsbyjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meeting Gatsby.js&lt;/h2&gt;
&lt;p&gt;My first contact with the 1.0 release of Gatsby.js was thanks to the Facebook
team behind the &lt;a href=&quot;http://reactjs.org/&quot;&gt;React&lt;/a&gt; documentation site. They decided to
migrate their legacy Jekyll site to a completely new site built with Gatsby 1.0.
I, as the good React fanboy that I am, jumped at the first chance I had to
submit a PR to help fix a couple of bugs on the site, and was even given the
opportunity of setting up the &lt;a href=&quot;https://reactjs.org/feed.xml&quot;&gt;RSS feed&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;In the process, I learned what the 1.0 release of Gatsby was all about, and I
was completely mindblown.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:100%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/EldfH1VJdbrwY&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/tim-and-eric-mind-blown-EldfH1VJdbrwY&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Not only did it have all the standard goodness of a typical React/Webpack static
site generator (CSS Modules, PostCSS, Hot Reloading, etc), but more importantly,
it integrated an incredibly ingenious GraphQL layer which allowed the developer
to query and fetch data from practically everywhere on the web!&lt;/p&gt;
&lt;p&gt;For us developers, that means that we are no longer restricted to rely on local
static Markdown files to store the data of our static sites — although that can
still be done very efficiently as well.&lt;/p&gt;
&lt;p&gt;That data can also now be stored on any database or traditional storage device.
We can then leverage GraphQL to retrieve it and render it in whatever shape or
form we wish.&lt;/p&gt;
&lt;p&gt;That also means that our clients can now use a proper CMS to manage all the
content of their sites, and whenever they publish, update or delete an entry,
the whole static frontend will be auto-generated from scratch, resulting in a
new version that contains the updated information.&lt;/p&gt;
&lt;p&gt;As good as this architecture sounded in my head, I knew that I had to test it
first on a personal project before even thinking on implementing it somewhere
else, and so I decided to re-engineer my finished Phenomic blog using Gatsby
instead. Since the blog was only composed of React components — which by nature
are extremely portable — 90% of the job was already done, so I only had to
spend a couple of hours refactoring the top level of the application.&lt;/p&gt;
&lt;p&gt;Of course, in order to achieve this setup, there are still some key elements we
haven’t talked about. First of all, we need a CMS that allows both retrieving
its entries via an HTTP endpoint, as well as setting up webhooks that can be
triggered when those entries are created, updated or deleted. Fortunately, most
popular CMSs nowadays already support those features, either natively or by
installing plugins (i.e.
&lt;a href=&quot;https://wordpress.org/plugins/rest-api/&quot;&gt;Wordpress REST API&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Personally, however, I found the idea of maintaining a CMS server and a database
just for my simple blog not very appealing. Yes, our decoupled architecture
means that if our CMS server or database ever goes down our static frontend
won’t be affected at all, but we still need to pay to have that CMS server up
and running listening for requests — which won’t be that many — and we still
need to spend some time securing that MySQL database. Being a “Serverless”
architectures enthusiast, I set out to find a more “serverless” and economic
approach to this issue. Fortunately, the Gatsby.js community had already found
it in a powerful CMS called Contentful.&lt;/p&gt;
&lt;h2 id=&quot;contentful-to-the-rescue&quot;&gt;&lt;a href=&quot;#contentful-to-the-rescue&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contentful to the rescue&lt;/h2&gt;
&lt;p&gt;Contentful is both a Content-as-a-service (CaaS) provider as well as an
excellent headless Content Management System — which in my opinion is what most
CMSs should be nowadays.&lt;/p&gt;
&lt;p&gt;Instead of forcing you to render your content following a certain paradigm,
Contentful only provides you with the tools necessary to manage your content —
whatever that may be — and expose it via HTTP endpoints.&lt;/p&gt;
&lt;p&gt;All of that content is stored in their databases, which means that you don’t
have to worry about maintaining or securing any server or database yourself.
Hooray!&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:75%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/aWRWTF27ilPzy&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/hooray-skeletor-aWRWTF27ilPzy&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course, there’s a little catch. As most “(blank)-as-a-service” providers out
there, Contentful is not always free. Although they have a very generous free
tier which, in my opinion, is more than adequate for most static sites, once you
go over that quota they will start charging you, so take that into consideration
before choosing a CMS.&lt;/p&gt;
&lt;p&gt;In my particular case, I knew that Contentful was just exactly what I needed for
my blog and so I proceed to set up all my Content Types (Posts, Categories,
Tags, etc) and setup the Gatsby integration using the handy
&lt;a href=&quot;https://www.npmjs.com/package/gatsby-source-contentful&quot;&gt;gatsby-source-contentful&lt;/a&gt;
plugin that the Gatsby community created.&lt;/p&gt;
&lt;h2 id=&quot;hosting-with-netlify&quot;&gt;&lt;a href=&quot;#hosting-with-netlify&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hosting with Netlify&lt;/h2&gt;
&lt;p&gt;The only key remaining decision I had to make was where to host my new blog,
which really wasn’t a very difficult decision to make.
&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; is by far the best option out there when it
comes to hosting static sites, providing you with an amazing Continuous
Deployment infrastructure to generate and deploy static sites on demand, which
incidentally is perfect for this kind of architecture.&lt;/p&gt;
&lt;p&gt;Just like Contentful, Netlify also has a very genereous free tier which is more
than enough for simple projects like this. If you ever need to scale, though,
they also offer several other tiers that can easily meet the demands of bigger
projects.&lt;/p&gt;
&lt;h2 id=&quot;closing-notes&quot;&gt;&lt;a href=&quot;#closing-notes&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Closing notes&lt;/h2&gt;
&lt;p&gt;And so it was that my quest for having a very cheap, secure, fast, scalable,
customizable and easy to maintain blog concluded. It’s certainly not the most
exciting or well-looking blog out there, but it’s everything I wanted it to be
— both as a developer and as a blogger.&lt;/p&gt;
&lt;p&gt;Personally I cannot wait to see how far can the limits of technologies like
Gatsby.js can be stretched, and with the advent and spread of new architectural
paradigms like Serverless, I predict it could be very far.&lt;/p&gt;
&lt;p&gt;But whatever that limit is, I am quite sure that this is a step in the right
direction towards making the web a safer, faster and more enjoyable experience
for both developers and end-users.&lt;/p&gt;
&lt;div style=&quot;width:100%;height:0;padding-bottom:52%;position:relative;&quot;&gt;&lt;iframe src=&quot;https://giphy.com/embed/12xSrwKxHxB3BS&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;position:absolute&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/black-and-white-end-ending-12xSrwKxHxB3BS&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Migrate from Jekyll to Gatsby]]></title><description><![CDATA[A bit of history Some years ago I created my  blog  with
 Jekyll  and it has been working well ever since. I have never been a huge fan of…]]></description><link>https://www.gatsbyjs.org/blog/2017-11-08-migrate-from-jekyll-to-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-11-08-migrate-from-jekyll-to-gatsby/</guid><dc:creator><![CDATA[Nahuel Scotti]]></dc:creator><content:encoded>&lt;h2 id=&quot;a-bit-of-history&quot;&gt;&lt;a href=&quot;#a-bit-of-history&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A bit of history&lt;/h2&gt;
&lt;p&gt;Some years ago I created my &lt;a href=&quot;https://blog.singuerinc.com/&quot;&gt;blog&lt;/a&gt; with
&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and it has been working well ever since.&lt;/p&gt;
&lt;p&gt;I have never been a huge fan of Ruby, but because of requirements or convenience
I’ve built apps with it (Rails / Sinatra / Jekyll / etc).&lt;/p&gt;
&lt;p&gt;I used to like Jekyll because I could write my posts in Markdown which is super
easy to write and edit.. When I started my blog, I took a theme called
&lt;a href=&quot;https://github.com/poole/lanyon&quot;&gt;Lanyon&lt;/a&gt; and tweaked it a bit. That was a
enough for me.&lt;/p&gt;
&lt;p&gt;But recently I find that I only install Ruby and Jekyll to manage my blog (I
mostly develop with Node). I tried to develop my blog inside a Docker container,
but this was extremely slow.&lt;/p&gt;
&lt;p&gt;Some weeks ago, one of my colleagues at work told me about
&lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;Gatsby&lt;/a&gt; Since I was already learning
&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; and had started looking at
&lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; (after attending a talk at
&lt;a href=&quot;http://nordicjs.com/&quot;&gt;Nordic.js&lt;/a&gt;)—I was very interested in giving it a try.&lt;/p&gt;
&lt;h2 id=&quot;migrating-from-jekyll-to-gatsby&quot;&gt;&lt;a href=&quot;#migrating-from-jekyll-to-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from Jekyll to Gatsby&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;gatsby.svg&quot; alt=&quot;Migrating from Jekyll to Gatsby&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;data&quot;&gt;&lt;a href=&quot;#data&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data&lt;/h3&gt;
&lt;p&gt;One of the biggest concern about migrating from one generator to another is how
you move the data. In my case, I have around 45 posts so it is not a big deal to
convert from one type to another, but still manual work that I wanted to avoid.&lt;/p&gt;
&lt;p&gt;Luckily Gatsby works with Markdown and it can take the data from your YAML front
matter block, so you don’t have to change anything. You just need to install
&lt;code class=&quot;language-text&quot;&gt;gatsby-transformer-remark&lt;/code&gt; plugin.&lt;/p&gt;
&lt;p&gt;Then, in your &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; file add:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;gatsby-transformer-remark&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;theme&quot;&gt;&lt;a href=&quot;#theme&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theme&lt;/h3&gt;
&lt;p&gt;My blog is clean and simple, I don’t need too much CSS. Instead of bloating my
blog with a theme I added &lt;a href=&quot;http://tachyons.io/&quot;&gt;Tachyons&lt;/a&gt;. I managed to
replicate 99% of my previous theme with classes from Tachyons. Something that I
would like to do better is to remove the parts of Tachyons that I’m not using.&lt;/p&gt;
&lt;p&gt;My current CSS file has less than 30 lines. The rest of the layout is created
with tachyons classes:
&lt;a href=&quot;https://github.com/singuerinc/blog/blob/master/src/layouts/index.css&quot;&gt;https://github.com/singuerinc/blog/blob/master/src/layouts/index.css&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;slug--date&quot;&gt;&lt;a href=&quot;#slug--date&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slug + Date&lt;/h3&gt;
&lt;p&gt;This was the only “tricky” part, since I wanted to preserve the same page names
in order to make a 1:1 transition. This was not possible with the default
behavior from Gatsby. I don’t have a &lt;code class=&quot;language-text&quot;&gt;date&lt;/code&gt; field in my front matter block, so I
need to extract the date from the file name.&lt;/p&gt;
&lt;p&gt;The slug in my case is generated with this (default in Jekyll) structure:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;https://blog.singuerinc.com/[n-categories]/YYYY/MM/DD/dashed-title/

// Given this data:
categories:
  - app
  - macos
  - vuejs
  - electron

filename: 2017-05-09-introducing-tomeito.md

// I would like to get:
/app/macos/vuejs/electron/2017/05/09/introducing-tomeito/&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;How did I create it? Inside my &lt;code class=&quot;language-text&quot;&gt;gastby-node.js&lt;/code&gt; I used the &lt;code class=&quot;language-text&quot;&gt;onCreateNode&lt;/code&gt;
extension API to tweak the slug:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onCreateNode&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getNode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createNodeField &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;internal&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`MarkdownRemark`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; categories &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter

    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; filename &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createFilePath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; getNode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; basePath&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`pages`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// get the date and title from the file name&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; filename&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token regex&quot;&gt;/^\/([\d]{4}-[\d]{2}-[\d]{2})-{1}(.+)\/$/&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// create a new slug concatenating everything&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; slug &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slugify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      categories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/`&lt;/span&gt;&lt;/span&gt;

    &lt;span class=&quot;token function&quot;&gt;createNodeField&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`slug`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; slug &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// save the date for later use&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;createNodeField&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`date`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; date &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;deploy&quot;&gt;&lt;a href=&quot;#deploy&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deploy&lt;/h3&gt;
&lt;p&gt;I used to deploy to &lt;a href=&quot;https://about.gitlab.com/features/pages/&quot;&gt;GitLab Pages&lt;/a&gt;,
but I noticed that from time to time it’d go down, so I’m now testing
&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; which has almost the same CI workflow:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;diagram-ci.svg&quot; alt=&quot;Migrating from Jekyll to Gatsby&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;conclusions&quot;&gt;&lt;a href=&quot;#conclusions&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Some key points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node instead of Ruby&lt;/li&gt;
&lt;li&gt;Much faster development workflow e.g. hot reload out of the box&lt;/li&gt;
&lt;li&gt;I can query the data I need and transform it before using it. (I’m looking
into the &lt;a href=&quot;/packages/gatsby-plugin-feed/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-feed&lt;/code&gt;&lt;/a&gt; to recreate the
Atom Feed)&lt;/li&gt;
&lt;li&gt;React and GraphQL for free with Gatsby&lt;/li&gt;
&lt;li&gt;Since I am confident with the Node ecosystem I’m able to contribute: First
pull request to Gatsby:
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/2569&quot;&gt;https://github.com/gatsbyjs/gatsby/pull/2569&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Netlify vs GitLab Pages (hopefully 100% uptime)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;final-thoughts&quot;&gt;&lt;a href=&quot;#final-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;Although the blog is the same, in content and look, the way that is created has
completely changed. For me it is a whole new experience—easier, and faster.&lt;/p&gt;
&lt;p&gt;I wanted to move the blog to Node a long time ago and it is finally there!&lt;/p&gt;
&lt;p&gt;Next is to convert my portfolio (also built with Jekyll):
&lt;a href=&quot;https://www.singuerinc.com/&quot;&gt;https://www.singuerinc.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;show-me-the-code&quot;&gt;&lt;a href=&quot;#show-me-the-code&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Show me the code&lt;/h2&gt;
&lt;p&gt;If you want to take a look at the code you can do it, it is published in GitHub:
&lt;a href=&quot;https://github.com/singuerinc/blog&quot;&gt;https://github.com/singuerinc/blog&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Migrate from Hugo to Gatsby]]></title><description><![CDATA[Introduction As my
 recent evaluations of Gatsby 
were positive, I decided to migrate my personal blog. Instead of quickly picking an…]]></description><link>https://www.gatsbyjs.org/blog/2017-11-06-migrate-hugo-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-11-06-migrate-hugo-gatsby/</guid><dc:creator><![CDATA[Kalin Chernev]]></dc:creator><content:encoded>&lt;h2 id=&quot;introduction&quot;&gt;&lt;a href=&quot;#introduction&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As my
&lt;a href=&quot;https://kalinchernev.github.io/learn-gatsbyjs&quot;&gt;recent evaluations of Gatsby&lt;/a&gt;
were positive, I decided to migrate my personal blog.&lt;/p&gt;
&lt;p&gt;Instead of quickly picking an already built theme with a lot of code I might not
use—which I did during the previous migration from Medium to Hugo—this time, I
decided to take a different route—building it from scratch.&lt;/p&gt;
&lt;p&gt;I focused on the process, looking for ways to make site building more generic
and reusable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Content migration&lt;/li&gt;
&lt;li&gt;Programatic page creation in Gatsby&lt;/li&gt;
&lt;li&gt;Manage styles with
&lt;a href=&quot;http://kyleamathews.github.io/typography.js/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Typography.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Automatic pagination&lt;/li&gt;
&lt;li&gt;Tag pages&lt;/li&gt;
&lt;li&gt;Add an admin panel with &lt;a href=&quot;https://www.netlifycms.org/&quot;&gt;NetlifyCMS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article will highlight lessons learned from the process, with the aim to
provide high-level guidelines about patterns which can be applied in migrations
from other static site generators to Gatsby.&lt;/p&gt;
&lt;h3 id=&quot;background-before-you-start&quot;&gt;&lt;a href=&quot;#background-before-you-start&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background before you start&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://gohugo.io/&quot;&gt;Hugo&lt;/a&gt; is a super fast, convenient and well-supported tool
for working with static sites. I think today it’s still more mature and closer
to classical CMS comparing to Gatsby workflows.&lt;/p&gt;
&lt;p&gt;As it’s an older ecosystem, when you need a ready plugin or a theme for quick
gratification, it’s more likely to find something ready online for Hugo.&lt;/p&gt;
&lt;p&gt;Gatsby, on the other hand, is based on React, GraphQL, Webpack and its way of
thinking is closer to how a developer would approach the problems from a
single-page-application point of view.&lt;/p&gt;
&lt;p&gt;Gatsby might feel a bit more “raw”—there are starters and typography.js, but not
so many ready made solutions in the conventional sense. Probably the closest
marketplace for themes compared to others is
&lt;a href=&quot;https://gatsbythemes.com/&quot;&gt;gatsbythemes&lt;/a&gt; which is a young project.&lt;/p&gt;
&lt;p&gt;If you have landed at this article researching which tool is better for your
job, take a look at
&lt;a href=&quot;https://www.slant.co/versus/1016/18503/~hugo_vs_gatsby-js&quot;&gt;comparisons&lt;/a&gt; and
keep in mind that selecting a
&lt;a href=&quot;https://stackshare.io/stackups/gatsby-vs-hugo&quot;&gt;stack&lt;/a&gt; boils down to being
effective with it.&lt;/p&gt;
&lt;p&gt;For me, using Gatsby is
&lt;a href=&quot;https://kalinchernev.github.io/learn-gatsbyjs&quot;&gt;valuable learning experience&lt;/a&gt;
and it has also been so easy to work with, it feels “unfair”. For example, the
plugin system of Gatsby keeps me sane and productive, even in cases where I know
only the briefest overview concepts of Webpack. Without Gatsby, I might have
spent hours and days configuring what Gatsby provides out of the box.&lt;/p&gt;
&lt;p&gt;Last, but not least, the biggest benefit of using Gatsby compared to Hugo, is
the JavaScript tool-chain. Important tasks such as making a progressive web app,
hot module reloading, etc are much easier in comparison to other static site
generators.&lt;/p&gt;
&lt;h3 id=&quot;content-migration&quot;&gt;&lt;a href=&quot;#content-migration&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content migration&lt;/h3&gt;
&lt;p&gt;This task was easier than expected. The file structure is preserved between my
previous blog and the current version. Both Hugo and Gatsby work well when
markdown files are stored at a &lt;code class=&quot;language-text&quot;&gt;content/post&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;The only work I had to do on the content migration was to reformat the
&lt;a href=&quot;https://gohugo.io/content-management/front-matter/&quot;&gt;frontmatter&lt;/a&gt;. In Hugo, I
used TOML, whereas &lt;code class=&quot;language-text&quot;&gt;gatsby-transformer-remark&lt;/code&gt; works only with YAML for the
moment. Luckily, I still had the Hugo CLI on my system so could make use of its
&lt;a href=&quot;https://gohugo.io/commands/hugo_convert_toyaml/&quot;&gt;build-in conversion tool&lt;/a&gt;. The
only issue I had was that sometimes titles were longer than 1 line and were not
parse-able, so I just had to cut some words out where problematic.&lt;/p&gt;
&lt;p&gt;My previous frontmatter already contained &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;date&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;tags&lt;/code&gt;, and most
importantly - the &lt;code class=&quot;language-text&quot;&gt;slug&lt;/code&gt; fields. These were enough for my later work on the
programatic creation of pages explained in the next section.&lt;/p&gt;
&lt;h3 id=&quot;programatic-page-creation&quot;&gt;&lt;a href=&quot;#programatic-page-creation&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Programatic page creation&lt;/h3&gt;
&lt;p&gt;This is the official
&lt;a href=&quot;/docs/creating-and-modifying-pages/&quot;&gt;documentation&lt;/a&gt;,
plus there is a
&lt;a href=&quot;/tutorial/part-four/#data-in-gatsby&quot;&gt;tutorial&lt;/a&gt;, which
gives examples. In sum, I created a &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file which exports
&lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; method using the &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; action from
&lt;a href=&quot;/docs/bound-action-creators/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;boundActionCreators&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This might sound way more complicated than what it is:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    {
      allMarkdownRemark {
        edges {
          node {
            frontmatter {
              title
              slug
              tags
            }
          }
        }
      }
    }
  `&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
    &lt;span class=&quot;token comment&quot;&gt;// Create content programatically here&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;As you see, getting the list of posts can be done in a single query.&lt;/p&gt;
&lt;p&gt;The result of this query can later be handled by a “creator” function, which I
prefer to keep in a separate module. For example, creating posts works like
following:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`path`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nodes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; template &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; template&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          slug&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;I re-use the &lt;code class=&quot;language-text&quot;&gt;slug&lt;/code&gt; field of the frontmatter of my existing structure. I don’t
have to generate or calculate slugs based on information of other fields, i.e.
my scenario is easier than the tutorial on the official docs.&lt;/p&gt;
&lt;p&gt;This is an example of “unfair” easy - I don’t have to do literally anything to
keep my previous URLs of existing content the same in the new system.&lt;/p&gt;
&lt;p&gt;The display of the data is handled by a React component acting as a template. My
case is nothing different than the
&lt;a href=&quot;/docs/building-with-components/#page-template-components&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;adding-styles&quot;&gt;&lt;a href=&quot;#adding-styles&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding styles&lt;/h3&gt;
&lt;p&gt;Now that the system displays the content, it’s time to style it. I decided to go
for the
&lt;a href=&quot;/tutorial/part-two/#typographyjs&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;typography.js&lt;/code&gt; route&lt;/a&gt;.
The approach is well documented and you can also see
&lt;a href=&quot;http://kyleamathews.github.io/typography.js/&quot;&gt;previews of the themes online&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Steps were:&lt;/p&gt;
&lt;p&gt;Add &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-typography&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;typography-theme-moraga&lt;/code&gt; (for example) and
“enable” the plugin in the &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript=&quot;&gt;
      &lt;pre class=&quot;language-javascript=&quot;&gt;&lt;code class=&quot;language-javascript=&quot;&gt;{
  resolve: `gatsby-plugin-typography`,
  options: {
    pathToConfigModule: `src/utils/typography`,
  },
},&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;In &lt;code class=&quot;language-text&quot;&gt;src/utils/typograhy&lt;/code&gt; add:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript=&quot;&gt;
      &lt;pre class=&quot;language-javascript=&quot;&gt;&lt;code class=&quot;language-javascript=&quot;&gt;import Typography from &amp;#39;typography&amp;#39;;
import theme from &amp;#39;typography-theme-moraga&amp;#39;;

theme.overrideThemeStyles = () =&amp;gt; {
  return {
    // Color contrast correction https://dequeuniversity.com/rules/axe/2.2/color-contrast
    a: {
      color: `#185D8B`,
    },
    img: {
      position: `relative`,
      left: `50%`,
      transform: `translateX(-50%)`,
    },
  };
};

theme.baseFontSize = `22px`;
const typography = new Typography(theme);

module.exports = typography;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;and start the project again to see:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;jJqyQIi.png&quot; alt=&quot;Screenshot of a styled blog post&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, with minimal efforts, the styles are basically ready! :)&lt;/p&gt;
&lt;p&gt;I import any theme with &lt;code class=&quot;language-text&quot;&gt;theme&lt;/code&gt; variable since the plugin can change and the
rest of the code will stay intact.&lt;/p&gt;
&lt;h3 id=&quot;pagination-and-tags-pages&quot;&gt;&lt;a href=&quot;#pagination-and-tags-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pagination and tags pages&lt;/h3&gt;
&lt;p&gt;Having a decent grasp of how to create content in my new site, I proceeded with
creating pagination. I have about 30 blog posts, so I went for a split by 10 to
give an impression I have a lot of content :)&lt;/p&gt;
&lt;p&gt;As usual, a good starting point was searching for example implementations
available in
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;examples&lt;/code&gt;&lt;/a&gt; and the
issue queue. There, in the issue queue, is a gem
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/1199&quot;&gt;epic about plugins wishlist&lt;/a&gt;
where I found the discussion leading to
&lt;a href=&quot;https://github.com/pixelstew/gatsby-paginate&quot;&gt;gatsby-paginate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wanted to have different contexts than the plugin, so I took inspiration for
both tags and pagination scenarios. I kept them as separate action creators and
I just called them in the main creator function like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; createPostPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`./gatsby-actions/createPostPages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; createPaginatedPostsPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`./gatsby-actions/createPaginatedPostsPages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; createTagPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`./gatsby-actions/createTagPages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    {
      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {
        edges {
          node {
            frontmatter {
              title
              slug
              tags
            }
          }
        }
      }
    }
  `&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; posts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
    &lt;span class=&quot;token function&quot;&gt;createPostPages&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;createPaginatedPostsPages&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;createTagPages&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; posts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Easy to read, understand and mantain. The pagination module is a bit longer than
the one of the posts:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`path`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;createPage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nodes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; template &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/postList.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; paginateSize &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Split posts into arrays of length equal to number posts on each page/paginateSize&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; groupedPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; nodes
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; paginateSize &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; nodes&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; paginateSize&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;item &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; item&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Create new indexed route for each array&lt;/span&gt;
  groupedPages&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;group&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; groups&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageIndex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;``&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; paginationRoute &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;pageIndex&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Avoid showing `Previous` link on first page - passed to context&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; first &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Avoid showing `Next` link if this is the last page - passed to context&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; last &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; groups&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; paginationRoute&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; template&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        group&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        first&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        last&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        index&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Then, pull context information in the React component:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;BlogPagedIndex&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; pathContext &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; group&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; index&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; first&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; last &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; pathContext&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Some elements&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// The posts&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;group&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Post&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;

      &lt;span class=&quot;token comment&quot;&gt;// The pager&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;first &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; index &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Newer posts&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;last &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/blog/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;index &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Older posts&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; BlogPagedIndex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is a cut-down version of the component only for the blog post, do not copy
with too much trust…&lt;/p&gt;
&lt;p&gt;I have to be honest—I haven’t built pagination before with React/Redux, but I
feel this pagination approach is easier. Also, I want the pagination pages to be
accessible at all times, not only on state change, so the content creation
approach of building the list works well for me.&lt;/p&gt;
&lt;p&gt;I will say again that I see this is “unfair” easy. It’s probably the quickest
implementation of pagination I’ve made in my life.&lt;/p&gt;
&lt;p&gt;For the list of tags and inner tags pages, the approach was similar but passing
different context to the template component:&lt;/p&gt;
&lt;p&gt;For the overview page of tags:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/tags`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; template&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    posts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;For the inner tag page:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/tags/`&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;slugify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tagName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; template&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    posts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    post&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    tag&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; tagName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;admin-panel&quot;&gt;&lt;a href=&quot;#admin-panel&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Admin panel&lt;/h3&gt;
&lt;p&gt;Initially, I tried to use the &lt;code class=&quot;language-text&quot;&gt;git-gateway&lt;/code&gt; identity management approach in
Netlify, but it didn’t work for me. I could not reach the point to validate or
reset the password for my user 1, so I kept the “old-school” way of github
integration which works just fine for me at the moment, having the fact I will
be 1 user to work on the site.&lt;/p&gt;
&lt;p&gt;Not to mention also that I add this admin panel mostly for demoing the concept
of JAM stack with admin panel to friends, colleagues and potential clients.&lt;/p&gt;
&lt;p&gt;Long story short, this is the &lt;code class=&quot;language-text&quot;&gt;config.yml&lt;/code&gt; configuration file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;
      &lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;backend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; github
  &lt;span class=&quot;token key atrule&quot;&gt;repo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; kalinchernev/kalinchernev.github.io &lt;span class=&quot;token comment&quot;&gt;# Path to your GitHub repository&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; gatsby &lt;span class=&quot;token comment&quot;&gt;# Branch to update (master by default)&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;publish_mode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; editorial_workflow
&lt;span class=&quot;token key atrule&quot;&gt;media_folder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &quot;static/images&quot; &lt;span class=&quot;token comment&quot;&gt;# Folder where user uploaded files should go&lt;/span&gt;

&lt;span class=&quot;token key atrule&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# A list of collections the CMS should be able to edit&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &quot;post&quot; &lt;span class=&quot;token comment&quot;&gt;# Used in routes, ie.: /admin/collections/:slug/edit&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &quot;Post&quot; &lt;span class=&quot;token comment&quot;&gt;# Used in the UI, ie.: &quot;New Post&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &quot;content/post&quot; &lt;span class=&quot;token comment&quot;&gt;# The path to the folder where the documents are stored&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &quot;date&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;desc&quot; &lt;span class=&quot;token comment&quot;&gt;# Default is title:asc&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true &lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;# Allow users to create new documents in this collection&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{{slug}}&quot;&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;# The fields each document in this collection have&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;tagname&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;h1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;datetime&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Slug&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;slug&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;string&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Tags&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; tags&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; list&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;APIs&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;JavaScript&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Body&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;markdown&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The only interesting part is the &lt;code class=&quot;language-text&quot;&gt;gatsby&lt;/code&gt; branch which I used in parallel to the
&lt;code class=&quot;language-text&quot;&gt;blog&lt;/code&gt; branch. The &lt;code class=&quot;language-text&quot;&gt;gatsby&lt;/code&gt; branch is my development/staging and &lt;code class=&quot;language-text&quot;&gt;blog&lt;/code&gt; is my
production.&lt;/p&gt;
&lt;p&gt;The branch in this configuration has to match to deployment branch of Netlify
service:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;Efubv8f.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;This is my admin page React component which is placed in &lt;code class=&quot;language-text&quot;&gt;src/pages/admin&lt;/code&gt; so
that Gatsby delivers the HTML page at &lt;code class=&quot;language-text&quot;&gt;/admin&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-helmet&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;AdminPage&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;admin&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Helmet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charSet&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;viewport&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;width=device-width, initial-scale=1.0&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Content Manager&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;link&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;stylesheet&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/netlify-cms@^0.5.0/dist/cms.css&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text/javascript&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;charSet&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;utf-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;async&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/netlify-cms@^0.5.0/dist/cms.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Helmet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; AdminPage&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;In order for NetlifyCMS script to find the configuration file correctly,
&lt;code class=&quot;language-text&quot;&gt;config.yml&lt;/code&gt; should be placed in &lt;code class=&quot;language-text&quot;&gt;static/admin/config.yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Any other location or file name will result in an error.&lt;/p&gt;
&lt;p&gt;So, here’s how my admin panel looks:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;lHMSbxx.png&quot; alt=&quot;Admin panel for Gatsby site&quot;&gt;&lt;/p&gt;
&lt;p&gt;Creating a new draft post yields a pull request:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;RcynQe3.png&quot; alt=&quot;Draft post from NetlifyCMS&quot;&gt;&lt;/p&gt;
&lt;p&gt;Interesting part is that NetlifyCMS creates the pull request on my behalf with a
given state of the branch. I could continue working on the content of the post
when I’m offline (in an airplane) and push to the branch later when I’m back
online to trigger a new
&lt;a href=&quot;https://www.netlify.com/blog/2016/07/20/introducing-deploy-previews-in-netlify/&quot;&gt;preview from Netlify&lt;/a&gt;.
Only when I decide to, I merge latest changes for styles and PWA tweaks back to
the post preview branch to see whole picture and approve the post, merging it to
the main branch.&lt;/p&gt;
&lt;p&gt;This content workflow fits very well in the model we have as developers and
provides granular previews of changes when and how we decide to manage.&lt;/p&gt;
&lt;h3 id=&quot;conclusions&quot;&gt;&lt;a href=&quot;#conclusions&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusions&lt;/h3&gt;
&lt;p&gt;In this blog post I shared how a migration to Gatsby from a static generator
like Hugo can work. The reasons for doing a migration like this are part
development benefits (it’s a lot easier) and also a better production site which
feels as smooth as a single page application.&lt;/p&gt;
&lt;p&gt;We also went through the few technical details necessary to realize the
migration, using GraphQL query, creators and templates.&lt;/p&gt;
&lt;p&gt;Lastly, we added an admin panel to make content management easier for our
editors and clients.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My search for the perfect universal JavaScript framework]]></title><description><![CDATA[It was 2010 when  Backbone.js  came out. Finally I could
write structured code to create full web applications for our users. And with…]]></description><link>https://www.gatsbyjs.org/blog/2017-10-29-my-search-for-the-perfect-universal-javaScript-framework/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-29-my-search-for-the-perfect-universal-javaScript-framework/</guid><dc:creator><![CDATA[Tal Bereznitskey]]></dc:creator><content:encoded>&lt;p&gt;It was 2010 when &lt;a href=&quot;http://backbonejs.org&quot;&gt;Backbone.js&lt;/a&gt; came out. Finally I could
write structured code to create full web applications for our users. And with
Backbone.js and Node.js, a new dream started to emerge, a website that starts
rendering on the server side and continues to render on the users’ browsers.&lt;/p&gt;
&lt;p&gt;I spent days and nights trying to build a generic isomorphic web framework that
starts with server side rendering (SSR) and then continues work in the browser.
It was difficult to design and I could only make it meet the use case of my
company—with lots of small hacks to get the job done. Airbnb made a shot at
building such a framework as well with
&lt;a href=&quot;https://github.com/rendrjs/rendr&quot;&gt;rendr&lt;/a&gt;. It was the closest thing to a
Backbone.js isomorphic web framework, but it didn’t support the full features of
Backbone.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://reactjs.org&quot;&gt;React&lt;/a&gt; was the game changer. It was better suited to
building universal apps since its core idea is mapping state to DOM, or in the
server rendering case, state to an HTML string. But still, making React render
on the server side and then rehydrating it on the client side includes solving
many edge cases, messy configuration, and cryptic knowledge of Babel and
webpack.&lt;/p&gt;
&lt;p&gt;So universal web apps are great but hard. And even when you do get universal
React working, SSR can be super slow and CPU intensive so it’ll often hog the
Node.js event loop. Even after lots of optimizing, our team’s ultimate solution
is always caching.&lt;/p&gt;
&lt;p&gt;But why dynamically rendered content just to cache it when you can just
pre-cache everything? AKA static websites?&lt;/p&gt;
&lt;p&gt;This is what Gatsby enables. It makes it trivial to build React websites as
pre-cached/built static websites.&lt;/p&gt;
&lt;p&gt;I love static websites. That’s how we all started building websites, right? For
me it was an online editor of
&lt;a href=&quot;https://en.wikipedia.org/wiki/Yahoo!_GeoCities&quot;&gt;GeoCities&lt;/a&gt; and that was all we
needed back then. Why not go back to static websites? They are fast, scalable,
secure and eliminate time consuming devops work.&lt;/p&gt;
&lt;p&gt;Static websites aren’t a great fit for everything. Full webapps behind login can
be fully rendered on the client side so see small benefit from static rendering
since each visit is personalized. Serving a statically rendered “shell” for the
website could help with perceived performance, but… let’s get back to talking
about static websites and leave discussing web apps for another time.&lt;/p&gt;
&lt;p&gt;Sprinkling JavaScript on a static website can be tricky, but Gatsby does this so
well with React that you don’t have to think about it at all—it just works. I
used to tweak my configuration all the time to achieve better performance, but
Gatsby allows me to outsource the configuration and optimization and get a super
fast website with zero work.&lt;/p&gt;
&lt;p&gt;I’ll also mention &lt;a href=&quot;https://github.com/zeit/next.js&quot;&gt;next.js&lt;/a&gt; which is quite
similar and supports both SSR for dynamic content and exporting to static pages.
And don’t forget &lt;a href=&quot;https://www.netlify.com&quot;&gt;Netlify&lt;/a&gt; who is doing an amazing job
at building and hosting static websites.&lt;/p&gt;
&lt;p&gt;It is so much easier and fun to code for the web today. I would haved saved a
lot of development/devops hours at my previous startup just by using Gatsby. And
the most fun fact about Gatsby is these aren’t modern ideas at all - it’s just
static websites done right.&lt;/p&gt;
&lt;p&gt;This post is based on a
&lt;a href=&quot;https://twitter.com/ketacode/status/924243146795515904&quot;&gt;tweetstorm&lt;/a&gt; - find me
on Twitter &lt;a href=&quot;https://twitter.com/ketacode&quot;&gt;@ketacode&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[From WordPress to Developing in React — Starting to See It]]></title><description><![CDATA[As a frontend designer I’ve always prided myself on being a HTML and CSS
specialist. My use of JavaScript has been limited to animations and…]]></description><link>https://www.gatsbyjs.org/blog/2017-10-20-from-wordpress-to-developing-in-react-starting-to-see-it/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-20-from-wordpress-to-developing-in-react-starting-to-see-it/</guid><dc:creator><![CDATA[Benjamin Read]]></dc:creator><content:encoded>&lt;p&gt;As a frontend designer I’ve always prided myself on being a HTML and CSS
specialist. My use of JavaScript has been limited to animations and DOM
manipulation. However, at
&lt;a href=&quot;https://indigotree.co.uk&quot; title=&quot;Indigo Tree: We Build Awesome Websites&quot;&gt;Indigo Tree&lt;/a&gt;
we’re branching out from our staple of WordPress and trying different methods of
creating websites with functionality that our clients require, whilst maximising
their budget.&lt;/p&gt;
&lt;p&gt;We’re also bracing ourselves for what we’re anticipating to be the stormfront of
&lt;a href=&quot;https://wordpress.org/plugins/gutenberg/&quot; title=&quot;Gutenberg Wordpress plugins&quot;&gt;Gutenberg&lt;/a&gt;
for our WordPress projects. Once it’s included in the WordPress Core, writing
components in JavaScript for the Gutenberg editor will be necessary for every
developer on a project.&lt;/p&gt;
&lt;p&gt;So I decided to dive into learning React with a few courses and some
experimentation. I had the aim of building a site in
&lt;a href=&quot;/&quot; title=&quot;Blazing-fast static site generator for React&quot;&gt;Gatsby.js&lt;/a&gt;
as a test for doing projects built entirely in React.&lt;/p&gt;
&lt;h2 id=&quot;letting-go&quot;&gt;&lt;a href=&quot;#letting-go&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Letting Go&lt;/h2&gt;
&lt;p&gt;The first thing I had to do while investigating React was to let go of some
preconceived ideas I had - that JSX is just plain weird, that JSS (JavaScript
Stylesheets) was an unnecessary abstraction. So I tried not to be bothered by
the templating weirdness too much and embrace the differences. My classes soon
became &lt;code class=&quot;language-text&quot;&gt;classNames&lt;/code&gt;s, my &lt;code class=&quot;language-text&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags became &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Links&amp;gt;&lt;/code&gt;, and I quickly saw what
people had been enthusing about.&lt;/p&gt;
&lt;p&gt;Managing everything in one place is such a cathartic experience.&lt;/p&gt;
&lt;p&gt;With WordPress templating, I used to have function files, filter files, template
files, and SASS partials, often with similar names, depending on the framework
I’d be using. To build a site meant needing to buffer the entire project in my
short-term memory. Not an easy feat to manage.&lt;/p&gt;
&lt;p&gt;And then you would complete a project, and forget it all entirely. Until it went
to the client…&lt;/p&gt;
&lt;p&gt;Every time a client returned with a last-minute change, I would open up the code
(which I might not have touched for weeks or months), and try to grok what
function lived where, or what I had called that SASS partial. Even with the help
of browser dev tools, this can be really annoying.&lt;/p&gt;
&lt;p&gt;Now with Gatsby and React, I have my logic in one language, and in a way that
makes groking easier. I have my layout, template and config modules at hand in
the folder structure, without duplication.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Template for blog page&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; post &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;markdownRemark
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// The data query&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query BlogPostQuery($slug: String!) {
    markdownRemark(fields: { slug: { eq: $slug } }) {
      html
      frontmatter {
        title
        type
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Whilst this might &lt;em&gt;look&lt;/em&gt; weird, it actually makes it much easier to understand
what’s going on. You know you’re dealing with this data, using this HTML, and
with CSS-in-JS strategies such as Styled Components, you can see exactly what
CSS is going to be implemented too. In one file.&lt;/p&gt;
&lt;p&gt;Beautiful.&lt;/p&gt;
&lt;h2 id=&quot;graphql-sql-like-data-queries&quot;&gt;&lt;a href=&quot;#graphql-sql-like-data-queries&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphQL: SQL-like data queries&lt;/h2&gt;
&lt;p&gt;One thing I particularly love about Gatsby.js is its inclusion of
&lt;a href=&quot;http://graphql.org/&quot; title=&quot;A query language for your API&quot;&gt;GraphQL&lt;/a&gt;. Like SQL, you
use GraphQL to query your data, whether from the WordPress API, Contentful or
Markdown, and extract a dataset to display in your template.&lt;/p&gt;
&lt;p&gt;This approach to data is really adaptable. I love the fact that you can install
a plugin and query your API endpoints with such ease.&lt;/p&gt;
&lt;p&gt;Gatsby.js comes with GraphiQL, which is a simple web-based IDE so you can query
your data and get back examples of content immediately. You can then copy this
query into your React module and get back the information you need, whether it’s
the title, content, featured image, categories or any other frontmatter you
might have set up.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query BlogPostQuery($slug: String!) {
    markdownRemark(fields: { slug: { eq: $slug } }) {
      html
      frontmatter {
        title
        type
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Aside from those pesky tick characters, which are sometimes hard to spot for a
newbie, I think this is a great tool, and has sped up my development a
significant amount.&lt;/p&gt;
&lt;h2 id=&quot;css-in-js&quot;&gt;&lt;a href=&quot;#css-in-js&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS in JS&lt;/h2&gt;
&lt;p&gt;This is the thing that I found hardest about React. I’ve tried 3 methods so far,
and don’t really love any of them.&lt;/p&gt;
&lt;p&gt;However, since I’m managing my HTML with JavaScript, why not CSS as well? As
above, having everything in one place simplifies the workflow and allows you to
focus on context without having to grok SCSS again, reducing mental friction.&lt;/p&gt;
&lt;h2 id=&quot;my-project&quot;&gt;&lt;a href=&quot;#my-project&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;My Project&lt;/h2&gt;
&lt;p&gt;Following the &lt;a href=&quot;/tutorial/&quot;&gt;tutorial on Gatsbyjs&lt;/a&gt; I built
up my project from scratch, breaking things profusely at first, but it honestly
didn’t take long to gain confidence enough so that I launched my first site at
&lt;a href=&quot;https://freebabylon5.com&quot; title=&quot;Our last, best hope of getting back on the air&quot;&gt;freebabylon5.com&lt;/a&gt;
recently.&lt;/p&gt;
&lt;p&gt;Be warned: the tutorial isn’t quite finished yet, you might be better off
starting with
&lt;a href=&quot;/docs/gatsby-starters/&quot;&gt;one of the starter kits already available&lt;/a&gt;,
so that you get &lt;code class=&quot;language-text&quot;&gt;react-helmet&lt;/code&gt; and active links implemented, the 2 things I had
to learn independently.&lt;/p&gt;
&lt;h2 id=&quot;the-way-forward&quot;&gt;&lt;a href=&quot;#the-way-forward&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Way Forward?&lt;/h2&gt;
&lt;p&gt;My initial concerns around using a JavaScript framework such as React seem to
have all been allayed. With server-side React, we no longer have a dependency on
frontend JavaScript, so progressive enhancement is not just a possibility but a
standard. There’s momentum towards better accessibility, and for me as a
developer, the tools are there (such as Babel, Chrome Dev Tools React extension,
and others) for a faster, more efficient development experience.&lt;/p&gt;
&lt;p&gt;I’m glad to say I’m sold on the idea and methods of developing with JavaScript,
and React in particular. The site I’ve re-built from WordPress into Gatsby.js is
now live at
&lt;a href=&quot;https://freebabylon5.com&quot; title=&quot;Our last, best hope of getting back on the air&quot;&gt;https://freebabylon5.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Together with my colleagues at
&lt;a href=&quot;https://indigotree.co.uk&quot; title=&quot;Indigo Tree: We Build Awesome Websites&quot;&gt;Indigo Tree&lt;/a&gt;
we’re now looking at using WordPress as a backend, where clients can edit their
content without the worries of insecure plugins or other methods of being
hacked.&lt;/p&gt;
&lt;p&gt;Using GatsbyJS with its “Bring Your Own Data” strategy makes perfect sense, and
we’re about to start building our first Gatsby client site using the plugin
&lt;a href=&quot;/packages/gatsby-source-wordpress/&quot; title=&quot;WordPress content into Gatsby&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-wordpress&lt;/code&gt;&lt;/a&gt;
to pull in our data and build a totally secure website with some pretty
impressive gains on loading time. We’ll also sleep better at night knowing
insecurities in WordPress are no longer putting our clients at risk.&lt;/p&gt;
&lt;p&gt;The web is always changing. And the way forward isn’t always easy to see. Now,
with GatsbyJS, we’re beginning to feel like we can visualise where things are
going.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Building i18n with Gatsby]]></title><description><![CDATA[Languages are a key part of who we are; they are an expression of our identity.
Serving users content in their own language is a powerful…]]></description><link>https://www.gatsbyjs.org/blog/2017-10-17-building-i18n-with-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-17-building-i18n-with-gatsby/</guid><dc:creator><![CDATA[Samuel Goudie]]></dc:creator><content:encoded>&lt;p&gt;Languages are a key part of who we are; they are an expression of our identity.
Serving users content in their own language is a powerful thing, and it allows
you to include nuances and specific cultural references in a way Google
Translate just wouldn’t allow.&lt;/p&gt;
&lt;p&gt;When we were looking for a new framework for the new
&lt;a href=&quot;https://doopoll.co&quot;&gt;doopoll&lt;/a&gt; marketing site, we knew we’d want to support i18n
from the start.&lt;/p&gt;
&lt;p&gt;We were wowed with Gatsby’s simplicity and speed, but couldn’t find any clear
process for supporting i18n. With a little bit of digging and experimenting,
we’ve found that it’s just as easy as the rest of the process.&lt;/p&gt;
&lt;p&gt;Here is how we set up i18n for our Gatsby marketing site, and a few tips along
the way.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;quick-intro-to-i18n&quot;&gt;&lt;a href=&quot;#quick-intro-to-i18n&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick intro to i18n&lt;/h2&gt;
&lt;p&gt;Just in case you’re new to i18n, don’t worry, it’s pretty simple! All we do is
take hard-coded strings like “Hello” and replace them with a variable so that
when the language changes, so does the string.&lt;/p&gt;
&lt;p&gt;So for example rather than write &lt;code class=&quot;language-text&quot;&gt;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;&lt;/code&gt;. I might write
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;h1&amp;gt;{t(hello)}&lt;/code&gt; (more on this later), and the user would see ‘Hello’,
‘Bonjour’, or ‘Hola’ depending on what language they had switched to, and
whether we’d added a translation for it.&lt;/p&gt;
&lt;h3 id=&quot;tip-a-quick-note-on-language-codes&quot;&gt;&lt;a href=&quot;#tip-a-quick-note-on-language-codes&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TIP: A quick note on language codes&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.science.co.il/language/Codes.php&quot;&gt;Each language has a unique code&lt;/a&gt;.
We use this code to reference a language in our code. If you see a hyphen and
then some letters after it, they refer to the locale. So for example:&lt;/p&gt;
&lt;p&gt;en = English cy = Welsh es = Spanish en-GB = British English en-US = American
English&lt;/p&gt;
&lt;p&gt;The locale allows us to make changes to spelling (for example, “colour” vs.
“color”), but can also be used for other functions such as currency.&lt;/p&gt;
&lt;h2 id=&quot;working-with-translators&quot;&gt;&lt;a href=&quot;#working-with-translators&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working with translators&lt;/h2&gt;
&lt;p&gt;At doopoll we speak multiple languages, but just like design, development, and
copywriting, translation requires time and skill to get it right. That’s why we
work with our awesome friends at &lt;a href=&quot;https://applingua.com/&quot;&gt;Applingua&lt;/a&gt; who handle
all of our translation, and push new strings straight to our Git Repo 🙌.&lt;/p&gt;
&lt;p&gt;There are other options out there. You can even crowd source your translations!
However, in our experience, if you’re going to be updating your site regularly
it pays to build a good working relationship with a translator. They will
understand your brand, and how to effectively communicate your tone of voice in
a different language.&lt;/p&gt;
&lt;h2 id=&quot;choosing-a-package&quot;&gt;&lt;a href=&quot;#choosing-a-package&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing a package&lt;/h2&gt;
&lt;p&gt;There are a few React i18n packages out there. We considered
&lt;a href=&quot;https://github.com/yahoo/react-intl&quot;&gt;react-intl&lt;/a&gt; and the community
&lt;a href=&quot;https://www.npmjs.com/package/gatsby-plugin-i18n&quot;&gt;Gatsby plugin&lt;/a&gt;. However, we
opted for &lt;a href=&quot;https://github.com/i18next/react-i18next/&quot;&gt;react-i18next&lt;/a&gt; because we
use a version of i18next in our core Meteor app, and our translators are
familiar with the system.
&lt;a href=&quot;https://react.i18next.com/&quot;&gt;It’s well documented too&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also wanted to use a non-specific Gatsby solution so we can use a similar
implementation in other projects.&lt;/p&gt;
&lt;p&gt;To get started, you’ll need to install a few packages:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm i -S i18next i18next-xhr-backend i18next-browser-languagedetector react-i18next&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;setting-up&quot;&gt;&lt;a href=&quot;#setting-up&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up&lt;/h2&gt;
&lt;p&gt;This is straight from the
&lt;a href=&quot;https://react.i18next.com/components/i18next-instance.html&quot;&gt;i18n code examples&lt;/a&gt;,
but copied here for convenience. You’ll need to create an i18n component and
import it somewhere (we did it in our index layout):&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; i18n &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;i18next&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Backend &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;i18next-xhr-backend&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; LanguageDetector &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;i18next-browser-languagedetector&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; reactI18nextModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-i18next&quot;&lt;/span&gt;

i18n
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Backend&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;LanguageDetector&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;reactI18nextModule&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    fallbackLng&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// have a common namespace used around the full app&lt;/span&gt;
    ns&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;translations&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    defaultNS&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;translations&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    debug&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    interpolation&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      escapeValue&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// not needed for react!!&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

    react&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      wait&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; i18n&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;locales&quot;&gt;&lt;a href=&quot;#locales&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locales&lt;/h2&gt;
&lt;p&gt;Next we’ll create a folder for our translation strings. We used a folder called
locales in our src folder (react-i18next likes that!). Within the locales folder
we create a folder for each language using the language code. Then within that
we create a JSON file for each component we want to translate.&lt;/p&gt;
&lt;p&gt;For our site we’re currently supporting English and Welsh, so our locales folder
looks like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;- src
	- locales
		- en
			- PageHeader.json
			- PricingPlan.json
		...
		- cy
			- PageHeader.json
			- PricingPlan.json
		...&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;PageHeader&lt;/code&gt; component in the &lt;code class=&quot;language-text&quot;&gt;en&lt;/code&gt; folder might look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;
      &lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;heading&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Shwmae, bonjour, and hola!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;Available in English, Welsh, French, and Spanish, with more translations coming soon. doopoll is great for local, multi-lingual, and global organisations.&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;And the &lt;code class=&quot;language-text&quot;&gt;cy&lt;/code&gt; component would look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;
      &lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;heading&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Shwmae, bonjour, a hola!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;Ar gael yn Saesneg, Cymraeg, Ffrangeg a Sbaeneg, gyda rhagor o gyfieithiadau&apos;n dod yn fuan. Mae doopoll yn wych ar gyfer sefydliadau lleol, amlieithog a byd-eang.&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;tip-using-the-locales-folder-with-gatsby&quot;&gt;&lt;a href=&quot;#tip-using-the-locales-folder-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TIP: Using the locales folder with Gatsby&lt;/h3&gt;
&lt;p&gt;To get the locales folder into the right place for Gatsby we just need to add a
little hook to our &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file. It copies the locales folder post
build and gets everything in the right place:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; fs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;fs-extra&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onPostBuild&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Copying locales&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;copySync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/src/locales&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__dirname&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/public/locales&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;using-with-a-component&quot;&gt;&lt;a href=&quot;#using-with-a-component&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using with a component&lt;/h2&gt;
&lt;p&gt;With the packages installed and locales setup, we’re ready to wire up a
component!&lt;/p&gt;
&lt;p&gt;React-i18next uses a HOC to wrap your component and provide some props to handle
language switching. Here’s our &lt;code class=&quot;language-text&quot;&gt;PageHeader&lt;/code&gt; component:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; translate &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-i18next&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PageHeader&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; t &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;PageHeader&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;heading&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PageHeader&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PageHeader&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Pretty simple! The string provided to &lt;code class=&quot;language-text&quot;&gt;translate&lt;/code&gt; is the corresponding JSON file
name for the translation, and the second instance is the component itself. We
keep these names the same to make it easier to match up translation files and
components.&lt;/p&gt;
&lt;h3 id=&quot;tip-react-helmet&quot;&gt;&lt;a href=&quot;#tip-react-helmet&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TIP: React Helmet&lt;/h3&gt;
&lt;p&gt;You can also use translation strings for page titles! Here’s an example with
React Helmet:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Pricing&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Helmet&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;heading&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;switching-languages&quot;&gt;&lt;a href=&quot;#switching-languages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switching Languages&lt;/h2&gt;
&lt;p&gt;Finally, to make it easy for our users to switch language we need to create a
little component. Here’s an example from our site:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; classNames &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;classnames&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; translate &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-i18next&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LanguageSwitcher&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; i18n &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; language&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; i18n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;language &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handleChangeLanguage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handleChangeLanguage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;componentWillReceiveProps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nextProps&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; language&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; nextProps&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;i18n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;language &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;handleChangeLanguage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lng&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; i18n &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props
    i18n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;changeLanguage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lng&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;renderLanguageChoice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; code&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; buttonClass &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;classNames&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;LanguageSwitcher__button&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;LanguageSwitcher__button--selected&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;state&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;language &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; code&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;button&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;code&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;buttonClass&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleChangeLanguage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;code&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;label&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;button&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; languages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; code&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;English&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; code&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;cy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; label&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Cymraeg&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;LanguageSwitcher&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;languages&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;renderLanguageChoice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;language&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;LanguageSwitcher&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;LanguageSwitcher&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is a pretty simple component. We’re setting the &lt;code class=&quot;language-text&quot;&gt;language&lt;/code&gt; state based on
the i18n prop so that we can check which language is currently active and show
that in our menu.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;handleLanguageChange&lt;/code&gt; function just wraps the &lt;code class=&quot;language-text&quot;&gt;react-i18n&lt;/code&gt; function passed
in as a prop through &lt;code class=&quot;language-text&quot;&gt;translate&lt;/code&gt;. Pretty much everything is handled for us.
Hooray! 🎉&lt;/p&gt;
&lt;h2 id=&quot;ssr&quot;&gt;&lt;a href=&quot;#ssr&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSR&lt;/h2&gt;
&lt;p&gt;To let it render the content into html, you need to load i18n namespaces (using &lt;code class=&quot;language-text&quot;&gt;i18n.loadNamespaces&lt;/code&gt;) before render&lt;/p&gt;
&lt;h3 id=&quot;with-redux&quot;&gt;&lt;a href=&quot;#with-redux&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With redux&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// gatsby-ssr.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Provider &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-redux&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; renderToString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-dom/server&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; i18n &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/i18n&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; createStore &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/state/createStore&quot;&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;replaceRenderer&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; bodyComponent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; replaceBodyHTMLString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  i18n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;loadNamespaces&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;common&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; store &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createStore&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;ConnectedBody&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Provider store&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;store&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;bodyComponent&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Provider&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;replaceBodyHTMLString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;renderToString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ConnectedBody &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3 id=&quot;without-redux&quot;&gt;&lt;a href=&quot;#without-redux&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Without redux&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Not yet tested&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// gatsby-ssr.js&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; renderToString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-dom/server&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; i18n &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/i18n&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; createStore &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/state/createStore&quot;&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;replaceRenderer&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; bodyComponent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; replaceBodyHTMLString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  i18n&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;loadNamespaces&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;common&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;replaceBodyHTMLString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bodyComponent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;translate&lt;/code&gt; hoc from react-i18next cause page / component not able to SSR. I make it works by import i18n &amp;#x26; use i18n.t&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;finishing-up&quot;&gt;&lt;a href=&quot;#finishing-up&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finishing up&lt;/h2&gt;
&lt;p&gt;As you can see, i18n in Gatsby is actually pretty simple when you know how! We
had to work a few things out for ourselves (the locales folder being one of
them!), so hopefully reading this will allow you to get started serving
international users even quicker.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Making website building fun]]></title><description><![CDATA[I still remember the first non-trivial React component I built in 2014—not long
after I started using React seriously. I decided to port to…]]></description><link>https://www.gatsbyjs.org/blog/2017-10-16-making-website-building-fun/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-16-making-website-building-fun/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;I still remember the first non-trivial React component I built in 2014—not long
after I started using React seriously.&lt;/p&gt;
&lt;p&gt;I decided to port to React &lt;a href=&quot;http://wicky.nillia.ms/headroom.js/&quot;&gt;headroom.js&lt;/a&gt;—a
JavaScript library that shows &amp;#x26; hides headers as you scroll up &amp;#x26; down a site.&lt;/p&gt;
&lt;p&gt;After a day or two of working through the niceties of writing a React component
and publishing it to NPM, I started writing the documentation and realized…
there was almost nothing to write.&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&quot;https://github.com/KyleAMathews/react-headroom&quot;&gt;react-headroom&lt;/a&gt; is so
simple I realized you almost don’t need documentation. A React header component
using it would look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Headroom &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-headroom&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Headroom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;You can put anything you&apos;d like inside the Headroom Component&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Headroom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Having coming from years of building things with Backbone.js and jQuery where
implementing a new plugin felt like following a long &amp;#x26; intricate cooking recipe,
the simplicity of react-headroom was astounding. That’s all you do? Import it
and use it like an HTML element?&lt;/p&gt;
&lt;p&gt;Compare this with the minimum code necessary for the original headroom.js.&lt;/p&gt;
&lt;h4 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;
      &lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;headroom&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;header content&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;javascript&quot;&gt;&lt;a href=&quot;#javascript&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JavaScript&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// grab the element&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; myElement &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// construct an instance of Headroom, passing the element&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; headroom &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Headroom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;myElement&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// initialise&lt;/span&gt;
headroom&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h4 id=&quot;css&quot;&gt;&lt;a href=&quot;#css&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;
      &lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.headroom&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;will-change&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; transform 200ms linear&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.headroom--pinned&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.headroom--unpinned&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;translateY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;-100%&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The original vanilla web technology version has &lt;strong&gt;7x&lt;/strong&gt; the lines of code and
worst, the code for your header is now split across three parts of your code
base with at best, only a comment to indicate their purpose.&lt;/p&gt;
&lt;p&gt;The React version of headroom.js is far simpler and &lt;em&gt;safer&lt;/em&gt; to use as the HTML,
CSS, and JavaScript are all neatly encapsulated.&lt;/p&gt;
&lt;h2 id=&quot;what-makes-technology-fun&quot;&gt;&lt;a href=&quot;#what-makes-technology-fun&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What makes technology fun?&lt;/h2&gt;
&lt;p&gt;This is a complex philosophical question and I’m writing this on a Saturday
afternoon so I’ll cheat a bit and just cut the gordian knot by saying
“simplicity is fun” and conversely, “complexity is not fun”.&lt;/p&gt;
&lt;p&gt;Every one loves new projects. Why? Because they’re simple! We can dive in and
experiment and reliably get something done. The more complex the project, the
more things seem to break, the more time gets wasted on various yak shaves, and
critically, the gap between thinking up an idea and being able to try it grows
larger and larger.&lt;/p&gt;
&lt;p&gt;Fred Brooks wrote in his classic book &lt;em&gt;The Mythical Man-Month&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The programmer, like the poet, works only slightly removed from pure
thought-stuff. He builds his castles in the air, from air, creating by
exertion of the imagination. Few media of creation are so flexible, so easy to
polish and rework, so readily capable of realizing grand conceptual
structures…&lt;/p&gt;
&lt;p&gt;Yet the program construct, unlike the poet’s words, is real in the sense that
it moves and works, producing visible outputs separate from the construct
itself. […] The magic of myth and legend has come true in our time. One types
the correct incantation on a keyboard, and a display screen comes to life,
showing things that never were nor could be.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Technology is incredibly fun when we, like the wizard of fantasy, can type an
incantation on our computer and a new creation comes to life.&lt;/p&gt;
&lt;p&gt;When this incantation is simple and takes seconds, we can easily get lost for
hours in the rush of creation trying one thing after another improvising our way
to an eventual design.&lt;/p&gt;
&lt;h2 id=&quot;why-do-projects-stop-being-simple-and-fun&quot;&gt;&lt;a href=&quot;#why-do-projects-stop-being-simple-and-fun&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why do projects stop being simple (and fun)?&lt;/h2&gt;
&lt;p&gt;Easy—they get complex so doing anything feels hard and burdensome.&lt;/p&gt;
&lt;p&gt;Why do projects get complex?&lt;/p&gt;
&lt;p&gt;The simple but wrong answer is they get big.&lt;/p&gt;
&lt;p&gt;But big doesn’t necessarily mean complex.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;project-complexity-8023880.png&quot; alt=&quot;project-complexity&quot;&gt;&lt;/p&gt;
&lt;p&gt;Perhaps you’ve been on projects that followed the red curve as well as others,
the blue curve.&lt;/p&gt;
&lt;p&gt;Projects &lt;em&gt;do&lt;/em&gt; get more complex as they scale but there are very large projects
that still don’t feel very complex while there are relatively small projects
that are mired in complexity.&lt;/p&gt;
&lt;p&gt;Alan Kay told a great story in his recent talk
&lt;a href=&quot;https://www.youtube.com/watch?v=NdSD07U5uBs&quot;&gt;The Power of Simplicity&lt;/a&gt; (story
starts at 5:45) about the history of modeling planet orbits in our solar system.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;Cassini_apparent.jpg&quot; alt=&quot;Cassini model of planet motion&quot;&gt;&lt;/p&gt;
&lt;p&gt;From ancient times to the 1600s, people believed that the planets’ orbits must
be perfect circles. This false belief introduced a ton of complexity into their
models. This complexity persisted until Kepler came along with the stunning
insight (hindsight sarcasm) that no, orbits were elliptical not circular. With
this new insight, models of planetary motion became dramatically simpler.&lt;/p&gt;
&lt;p&gt;This false belief, that orbits must be circular, helped stall our understanding
of the solar system for &lt;em&gt;1000s of years&lt;/em&gt;! All the complex calculations that the
astronomers studiously completed to force-fit the circular idea into their
models just got in the way of understanding what was actually going on.&lt;/p&gt;
&lt;h2 id=&quot;find-the-right-building-blocks&quot;&gt;&lt;a href=&quot;#find-the-right-building-blocks&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Find the right building blocks&lt;/h2&gt;
&lt;p&gt;Later in the talk, Alan Kay summarized his message by stating that “you get
simplicity by finding &lt;em&gt;slightly more sophisticated building blocks&lt;/em&gt;“.&lt;/p&gt;
&lt;p&gt;Each problem space has a “particularly felicitous point-of-view”. Find that
point-of-view and problem complexity collapses.&lt;/p&gt;
&lt;p&gt;The right building blocks allows us to directly manipulate the parts of the
problem that we actually care about. They create
&lt;a href=&quot;http://blog.ezyang.com/2012/02/transcript-of-inventing-on-principleb/&quot;&gt;an immediate connection&lt;/a&gt;
between our thoughts and the visible outputs.&lt;/p&gt;
&lt;p&gt;With the right building blocks, creating is fun! It’s play! With bad building
blocks, it’s tedious work and muddy thinking.&lt;/p&gt;
&lt;h2 id=&quot;how-do-you-design-the-right-building-blocks&quot;&gt;&lt;a href=&quot;#how-do-you-design-the-right-building-blocks&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do you design the right building blocks?&lt;/h2&gt;
&lt;p&gt;Ahhh, now we’re getting to the really interesting question.&lt;/p&gt;
&lt;p&gt;This isn’t trivial. As we saw, many of the brightest minds for 1000s of years
couldn’t figure out that planets’ orbits aren’t circles. Leonardo da Vinci
couldn’t build most of the machines he dreamt up. And I, no Leonardo, couldn’t
ever improve on headroom.js.&lt;/p&gt;
&lt;p&gt;But literally weeks into using React.js, I was able to easily make a new React
headroom component that is dramatically simpler than headroom.js.&lt;/p&gt;
&lt;p&gt;Which suggests React is a far better building block for the web than raw
HTML/JS/CSS.&lt;/p&gt;
&lt;p&gt;Which also suggests the general principle that &lt;strong&gt;if you’re mired in complexity
at one layer, you need to step &lt;em&gt;down&lt;/em&gt; a layer or two and redesign the building
blocks at &lt;em&gt;that&lt;/em&gt; layer.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;headroom.js is probably as simple as vanilla HTML/JS/CSS will allow it. We
couldn’t make building for the web simpler until we moved to a more
sophisticated component model like React provides.&lt;/p&gt;
&lt;h2 id=&quot;another-case-study-gatsby-image&quot;&gt;&lt;a href=&quot;#another-case-study-gatsby-image&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another case study: gatsby-image&lt;/h2&gt;
&lt;p&gt;I recently introduced a new Gatsby/React component called
&lt;a href=&quot;/packages/gatsby-image/&quot;&gt;gatsby-image&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has some nice tricks that you’d expect from a modern image component. It uses
the new
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API&quot;&gt;IntersectionObserver API&lt;/a&gt;
to cheaply lazy load images. It holds an image’s position so your page doesn’t
jump around as images load. It makes it easy to add a placeholder—either a gray
background or a blurry version of the image.&lt;/p&gt;
&lt;p&gt;Here’s what a really simple Gatsby page component using gatsby-image would look
like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Img &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-image&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;image&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;childImageSharp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fixed&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;So this is all very nice and it’s far better to be able to use this from NPM vs.
implementing it yourself or cobbling together several standalone libraries.&lt;/p&gt;
&lt;p&gt;But if this was all gatsby-image did, it’d be a nice new component to have
around, but it wouldn’t be anything special.&lt;/p&gt;
&lt;h2 id=&quot;reducing-the-complexity-around-the-entire-process-of-building-a-website&quot;&gt;&lt;a href=&quot;#reducing-the-complexity-around-the-entire-process-of-building-a-website&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reducing the complexity around the &lt;em&gt;entire&lt;/em&gt; process of building a website&lt;/h2&gt;
&lt;p&gt;If we think about the process of building for the web, there are many steps
before we get to actually coding the frontend.&lt;/p&gt;
&lt;p&gt;For example, how does a single image typically get on a website?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A page is designed&lt;/li&gt;
&lt;li&gt;Specific images are chosen&lt;/li&gt;
&lt;li&gt;The images are resized (with ideally multiple thumbnails to fit different
devices)&lt;/li&gt;
&lt;li&gt;And finally, the image(s) are included in the HTML/CSS/JS (or React
component) for the page.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What makes gatsby-image really interesting is it’s &lt;em&gt;seamlessly integrated into
Gatsby’s data layer&lt;/em&gt; which has native image processing capabilities.&lt;/p&gt;
&lt;p&gt;Gatsby lets you &lt;em&gt;query your site data&lt;/em&gt; with GraphQL &lt;em&gt;including&lt;/em&gt; querying for
different sizes and shapes of images.&lt;/p&gt;
&lt;p&gt;So not only do we skip all the complexity around setting up lazy-loading images
that hold their place with nice placeholders but we can also skip the complexity
around generating (and regenerating as design requirements change) the right
sized image thumbnails.&lt;/p&gt;
&lt;p&gt;The code I showed above was missing the GraphQL query. A full image component
would look like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Img &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby-image&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello gatsby&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;image&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;childImageSharp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fixed&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; query &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query GatsbyImageSampleQuery {
    file(relativePath: { eq: &quot;images/an-image.jpeg&quot; }) {
      childImageSharp {
        fixed(width: l25, height: 125) {
          src
          srcSet
          width
          height
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;So instead of a long pipeline of tasks to setup optimized images for your site,
the steps now are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install gatsby-image&lt;/li&gt;
&lt;li&gt;Decide what size of image you need (125x125 in the example above)&lt;/li&gt;
&lt;li&gt;Add your query and the gatsby-image component to your page&lt;/li&gt;
&lt;li&gt;And… that’s it!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now playing with images is fun! Want to tweak your design? No problem, just
change your query a bit and see how the page updates. By eliminating the
complexity around adding images, building performant sites with many images
becomes fun again.&lt;/p&gt;
&lt;h2 id=&quot;gatsby-is-a-playground-for-discovering-new-building-blocks-for-the-web&quot;&gt;&lt;a href=&quot;#gatsby-is-a-playground-for-discovering-new-building-blocks-for-the-web&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby is a playground for discovering new building blocks for the web&lt;/h2&gt;
&lt;p&gt;The goal of Gatsby is to make it easy to build incredibly fast websites. Right
now, that’s far too hard to do and
&lt;a href=&quot;/blog/2017-09-13-why-is-gatsby-so-fast/&quot;&gt;most sites fail at it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We’ll make website building fun by creating higher-level components and design
tools that allow us to more easily express our intent.&lt;/p&gt;
&lt;p&gt;We’ll make the web fast again through efforts like gatsby-image where we
re-examine basic building blocks of the web like &lt;code class=&quot;language-text&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and improve their
design through &lt;strong&gt;seamless integration of data processing and React components&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We live at an extraordinary time. We work on the largest platform that has ever
existed. Tools like &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; let us easily experiment with
new syntax.
&lt;a href=&quot;https://medium.com/seek-blog/a-unified-styling-language-d0c208de2660&quot;&gt;CSS-in-JS&lt;/a&gt;
enables entirely new ways of thinking about styles and theming. Browser vendors
are pushing hard to improve all parts of the web platform. There’s never been a
better time to re-examine old doctrines and try audacious experiments. Radical
improvements to the web are waiting us.&lt;/p&gt;
&lt;p&gt;Gatsby’s claim is that a React website, built with our highly performant React
component building blocks and compiled by Gatsby, is faster than all but the
most tightly tuned, hand-crafted websites and at a &lt;em&gt;tiny&lt;/em&gt; fraction of the
effort.&lt;/p&gt;
&lt;p&gt;And I think we’re just getting started. Come join us and help design and write
the building blocks for the fastest possible websites which take the least
amount of effort.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Rebuilding my portfolio website with the great GatsbyJS and WordPress]]></title><description><![CDATA[Recreating my WordPress portfolio site using GatsbyJS, React and the WordPress REST API]]></description><link>https://www.gatsbyjs.org/blog/2017-10-05-portfolio-site-gatsby-wordpress/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-05-portfolio-site-gatsby-wordpress/</guid><dc:creator><![CDATA[David James]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This article was originally published on
&lt;a href=&quot;http://dfjames.com/blog/site-generating-with-the-great-gatsbyjs&quot;&gt;my portfolio site&lt;/a&gt;
on October 1, 2017.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;site-generating-with-the-great-gatsbyjs&quot;&gt;&lt;a href=&quot;#site-generating-with-the-great-gatsbyjs&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Site generating with the great GatsbyJS&lt;/h1&gt;
&lt;p&gt;When someone mentions static site generation, many people think of
&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. I had heard some good things about it and
noticed it would allow me to build a blog quite easily. I was eager to learn
something new and get something up and running that was more than just my usual
WordPress theme. I was on the verge of rebuilding my portfolio site until a
certain &lt;a href=&quot;https://www.youtube.com/user/LevelUpTuts&quot;&gt;Scott Tolinski&lt;/a&gt; released a
video on
&lt;a href=&quot;https://www.youtube.com/watch?v=b2H7fWhQcdE&amp;#x26;feature=youtu.be&quot;&gt;GatsbyJS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/&quot;&gt;GatsbyJS&lt;/a&gt; is a static site generator, similar to Jekyll, however it is
written using &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; and allows you to write your pages
as React components! It is somewhat similar to create-react-app where almost all
the scary Webpack config has been abstracted away from you and everything is
setup ready to go, so you can get to the important stuff like…building the
site! (If you are a fan of React and not convinced, the
&lt;a href=&quot;https://reactjs.org/&quot;&gt;React website/docs&lt;/a&gt; were just released using Gatsby!)&lt;/p&gt;
&lt;p&gt;I currently work for a &lt;a href=&quot;http://chromatix.com.au&quot;&gt;digital agency&lt;/a&gt; where we create
custom built &lt;a href=&quot;https://wordpress.org/&quot;&gt;WordPress&lt;/a&gt; sites from scratch. I have been
working here for almost 2 years and have only got to use React a few times, and
never with WordPress unfortunately. The Gatsby project caught my eye because I
wanted to create a site that was modern, fast, had blog capabilities, and gave
me the opportunity to learn some more React and JavaScript. Another reason I
ended up going with Gatsby was the promise that your project could be connected
to various APIs or even a CMS of your choice.&lt;/p&gt;
&lt;h2 id=&quot;the-magic-of-graphql-and-gatsby-plugins&quot;&gt;&lt;a href=&quot;#the-magic-of-graphql-and-gatsby-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The magic of GraphQL and Gatsby Plugins&lt;/h2&gt;
&lt;p&gt;Originally, following Scott’s and the official Gatsby tutorial, I had it pulling
my content from good ol’ Markdown files. Then I saw it… too good to be true,
the mention of connecting it to WordPress… I have been writing WordPress
themes for almost 2 years now, so naturally this got me super excited. To have
my back-end as WordPress (including
&lt;a href=&quot;https://www.advancedcustomfields.com/&quot;&gt;ACF&lt;/a&gt;) and the front-end in React… I had
found the perfect place to test my front-end abilities.&lt;/p&gt;
&lt;p&gt;I was skeptical at first: would I have to parse large amounts of JSON to get the
data I needed? I have never even interacted with the WordPress REST API, how
will I query it?&lt;/p&gt;
&lt;p&gt;The answer… &lt;a href=&quot;http://graphql.org/&quot;&gt;GraphQL&lt;/a&gt;. Gatsby ships with it and through
an npm install of a
&lt;a href=&quot;/docs/plugins/&quot;&gt;gatsby-source plugin&lt;/a&gt; of your choice
and a tiny bit of a config, you can start querying in no time. I was amazed with
how simple queries are using GraphQL. You look at them and you go “Huh, that’s
it? Really?“. Gatsby even ships with an in-browser query tester so you can see
exactly what data you are getting from your GraphQL queries. Wanna sort those
blog posts by date? No problem, just add a flag.&lt;/p&gt;
&lt;p&gt;With very little configuration and the installation of a single plugin on my
WordPress site, I began creating pages and pulling data from them using a simple
GraphQL schema. Here is an example of my Projects page which includes pulling
some ACF fields which were originally defined in my Projects page template:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Pull the project page content from Wordpress&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; projectsPageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query projectsPageQuery {
    wordpressPage(slug: { eq: &quot;projects&quot; }) {
      id
      title
      content
      childWordpressAcfField {
        internal {
          content
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Pulling blog posts was even easier! If you’d like to sort them by date, ID,
title etc. you just add a simple flag to the query like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Sort WordPress posts by date&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query getPostQuery {
    allWordpressPost(sort: { fields: [date] }) {
      edges {
        node {
          id
          title
          excerpt
          slug
          date
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;wrap-up-and-future&quot;&gt;&lt;a href=&quot;#wrap-up-and-future&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wrap up and future&lt;/h2&gt;
&lt;p&gt;In just a few weekends I managed to rebuild my portfolio site with the blog I
wanted. I’d highly recommend &lt;a href=&quot;/tutorial/&quot;&gt;Gatsby&lt;/a&gt; for
anyone who has started getting acquainted with React. Before I started this
project I didn’t know a lot about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static site generation/JAMstack&lt;/li&gt;
&lt;li&gt;Creating a Progressive Web App (PWA) and what qualifies as one&lt;/li&gt;
&lt;li&gt;React Router&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;li&gt;WordPress REST API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moving forward with Gatsby, I’d like to extend my site to include pagination
within the blog, use &lt;a href=&quot;https://www.styled-components.com/&quot;&gt;Styled Components&lt;/a&gt; and
ensure the site scores a 90+ overall on
&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse&lt;/a&gt;, Google’s
performance auditing tool.&lt;/p&gt;
&lt;p&gt;Another goal is for my team to start using it with client sites, as the sheer
performance out of the box is amazing. My original WordPress (PHP based theme)
was scoring around 70 for Performance, however without any optimizations, my
Gatsby based site scored 94. Later it scored 99 with some minor optimizations.
We have recently had many clients ask for highly performant websites and
Progressive Web App’s. Gatsby will be perfect to bridge the gaps between
WordPress and React and allow my team to achieve these goals with ease.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why we choose Gatsby over Next.js and Wintersmith]]></title><description><![CDATA[At smartive we always saw the potential of static site generators. We recently made the switch to Gatsby.js for our company site. A decision we don’t regret. Here’s why.]]></description><link>https://www.gatsbyjs.org/blog/2017-10-03-smartive-goes-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-03-smartive-goes-gatsby/</guid><dc:creator><![CDATA[Moreno Feltscher]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This article was originally published on
&lt;a href=&quot;https://blog.smartive.ch/smartive-ch-goes-gatsby-js-27a056b3b817&quot;&gt;our company blog&lt;/a&gt;
on September 27, 2017.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;smartivech-goes-gatsby&quot;&gt;&lt;a href=&quot;#smartivech-goes-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;smartive.ch goes Gatsby&lt;/h1&gt;
&lt;p&gt;At smartive, a Swiss-based web agency, we always saw the potential of static
site generators. After using Wintersmith and Next.js we recently made the switch
to Gatsby for our company site. A decision we don’t regret. Here’s why.&lt;/p&gt;
&lt;h2 id=&quot;back-in-the-days&quot;&gt;&lt;a href=&quot;#back-in-the-days&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Back in the Days..&lt;/h2&gt;
&lt;p&gt;As mentioned we already built our company website using static site generators
early on. Last year, we finally made the switch from our good old custom PHP
application with little to no logic, which served us for about two years, to
&lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;. At that time this was one of the leading
static site generators based on Node.js. Since most of our applications at that
time were already JavaScript based it seemed to be the perfect fit. The fact
that our company was undergoing a complete rebranding in terms of our corporate
identity came in quite handy as well.&lt;/p&gt;
&lt;p&gt;After running Wintersmith for almost a year we encountered its limits. Some of
the major drawbacks at that time were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No code splitting, resulting in the client having to load a bunch of
unnecessary JavaScript and CSS files&lt;/li&gt;
&lt;li&gt;Pulling in external resources, such as blog posts, was quite unhandy and
sometimes even impossible&lt;/li&gt;
&lt;li&gt;Build process optimization was almost impossible and in our case resulted in a
Webpack setup on top of Wintersmith which was not really maintainable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;react-to-the-rescue&quot;&gt;&lt;a href=&quot;#react-to-the-rescue&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React to the Rescue!&lt;/h2&gt;
&lt;p&gt;Since by the time we encountered the problems described above we already had
deep knowledge of React we started looking for an alternative based on that hot
new thing.&lt;/p&gt;
&lt;p&gt;The first thing that caught our attention was
&lt;a href=&quot;https://github.com/zeit/next.js/&quot;&gt;Next.js&lt;/a&gt;, as seemingly everyone going for a
server-side rendered React app was using it. After some days hacking on our app
we encountered some issues, especially when it came to frontend rendering. We
chose &lt;a href=&quot;https://prismic.io/&quot;&gt;prismic.io&lt;/a&gt; for our backend system which served all
the content. Although this felt right at first but, as all of us are developers,
working around the constraints of it just didn’t feel right.&lt;/p&gt;
&lt;p&gt;Luckily at that time Gatsby version 1.0
&lt;a href=&quot;/blog/gatsby-v1/&quot;&gt;just got released&lt;/a&gt; and we decided to
give it a try during one of our so-called Hackdays. We instantly fell in love
with the simplicity of the system. Our first approach was to just use all the
components which we already had created for Next.js and backed it by simple JSON
files containing the content we wanted to serve using the amazing yet simple
GraphQL-based pull-in mechanism Gatsby provides. This was accomplished by using
the
&lt;a href=&quot;https://www.npmjs.com/package/gatsby-transformer-json&quot;&gt;gatsby-transformer-json plugin&lt;/a&gt;
internally. Keep in mind that our content rarely changes, so this was always the
way we wanted it to be (without knowing for some time as we had to admit to
ourselves).&lt;/p&gt;
&lt;p&gt;One of our main goals all along was to show
&lt;a href=&quot;https://blog.smartive.ch&quot;&gt;our latest blog posts&lt;/a&gt; on Medium. Unfortunately at
that time there was no plugin to achieve this so we decided to write one
ourselves. By the time of writing I’m proud to say we successfully did so and
even
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1907&quot;&gt;contributed it back to the community&lt;/a&gt;.
Make sure to check it out if you’re interested in a similar solution.&lt;/p&gt;
&lt;p&gt;The only thing left was to actually rebuild and deploy our site once a new blog
post gets released on Medium. We chose &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt; for this
task, mainly because of its simplicity. Every time IFTTT picks up a newly
published blog post it triggers a GitLab CI pipeline using a webhook, which then
rebuilds and deploys our application onto our Docker Cloud infrastructure.&lt;/p&gt;
&lt;p&gt;The result of our work using Gatsby is an outstanding
&lt;a href=&quot;https://developers.google.com/speed/pagespeed/insights/?url=https://smartive.ch&amp;#x26;tab=desktop&quot;&gt;Google PageSpeed score&lt;/a&gt;
thanks to the built-in code splitting and cache handling mechanisms. If you’re
interested in how &lt;a href=&quot;https://smartive.ch/&quot;&gt;smartive.ch&lt;/a&gt; is built you can have a
look at our code &lt;a href=&quot;https://github.com/smartive/smartive.ch&quot;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are really looking forward to build other cool stuff for our customers using
Gatsby!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If you have any questions about the way we built
&lt;a href=&quot;https://smartive.ch&quot;&gt;smartive.ch&lt;/a&gt; feel free to contact me on
&lt;a href=&quot;https://twitter.com/luagsh_mrn&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Special thanks goes to my co-worker [Robert Vogt](&lt;a href=&quot;https://twitter.com/&quot;&gt;https://twitter.com/&lt;/a&gt;&lt;/em&gt;deniaz)
who did most of the work on our website and contributed the Medium plugin
mentioned above._&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Migrating My Blog From Hexo To Gatsby]]></title><description><![CDATA[How I migrated my blog to Gatsby and how you can do the same.]]></description><link>https://www.gatsbyjs.org/blog/2017-10-01-migrating-my-blog-from-hexo-to-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-10-01-migrating-my-blog-from-hexo-to-gatsby/</guid><dc:creator><![CDATA[Ian Sinnott]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;This article was originally posted on
&lt;a href=&quot;https://blog.iansinnott.com/migrating-a-blog-to-gatsby-part-2-of-gatsby-migration/&quot;&gt;my blog (original link)&lt;/a&gt;.
I’m reposting here in the hopes that it helps more people get started with
Gatsby!&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;migrating-a-blog-to-gatsby&quot;&gt;&lt;a href=&quot;#migrating-a-blog-to-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating a blog to Gatsby&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Abstract:&lt;/strong&gt; Gatsby is a great tool for building a blog. In part 1 I did the
more basic task of migrating an existing React site to Gatsby. This time I
migrated my blog, which was a lot more involved and required a lot more
Gatsby-specific knowledge.&lt;/p&gt;
&lt;p&gt;Here’s the gist of what I’m going to cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preparing an existing blog for migration&lt;/li&gt;
&lt;li&gt;Configuring Gatsby to handle markdown&lt;/li&gt;
&lt;li&gt;Querying your markdown files using GraphQL&lt;/li&gt;
&lt;li&gt;Adding custom data to the generated GraphQL schema&lt;/li&gt;
&lt;li&gt;Turning all your markdown files into static pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s jump in.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;preparing-your-existing-blog-for-migration&quot;&gt;&lt;a href=&quot;#preparing-your-existing-blog-for-migration&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preparing your existing blog for migration&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you &lt;em&gt;don’t&lt;/em&gt; already have a blog or want to create one from scratch
there’s a
&lt;a href=&quot;/blog/2017-07-19-creating-a-blog-with-gatsby/&quot;&gt;tutorial for exactly that right here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let’s move some files around. Gatsby gives you a good amount of flexibility when
it comes to file structure, but for consistency with the docs I’m going to use
the suggested file structure for migrating my blog. How you handle this step
will depend on what you’re migrating from. I am migrating form Hexo, which is
very similar to Jekyll in how it structures files.&lt;/p&gt;
&lt;h3 id=&quot;clean-up-your-source-repo&quot;&gt;&lt;a href=&quot;#clean-up-your-source-repo&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clean up your source repo&lt;/h3&gt;
&lt;p&gt;For the first step, clear everything other than your actual post content out of
the repo. For me, this meant everything that wasn’t under the &lt;code class=&quot;language-text&quot;&gt;source/&lt;/code&gt;
directory (that’s a Hexo convention). One way to do this is to take everything
not relevant to the upcoming Gatsby blog and move it into its own directory that
doesn’t interfere with anything. I chose to create &lt;code class=&quot;language-text&quot;&gt;hexo.bak/&lt;/code&gt; where all my old
blog files would live (except for the content).&lt;/p&gt;
&lt;p&gt;You could also simply delete everything other than your raw content. It’s up to
you. But once your done with this cleanup you should have made a decision on
where to hold your content, and moved everything else away or removed it.&lt;/p&gt;
&lt;p&gt;Here’s what that looks like for me:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.
├── content
│   ├── _drafts
│   │   └── [ Draft markdown files ... ]
│   └── _posts
│       └── [ Post markdown files ... ]
└── hexo.bak
    └── [ All my old hexo related files ... ]&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;For the rest of this post I’ll ignore the &lt;code class=&quot;language-text&quot;&gt;hexo.bak/&lt;/code&gt; directory because it’s not
relevant to Gatsby.&lt;/p&gt;
&lt;h2 id=&quot;set-up-gatsby&quot;&gt;&lt;a href=&quot;#set-up-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Set up Gatsby&lt;/h2&gt;
&lt;p&gt;You need to copy all the standard Gatsby boilerplate into your directory. There
are many ways you could do this but I’ll go over what I did.&lt;/p&gt;
&lt;p&gt;To get all the Gatsby files you can use the Gatsby CLI.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;yaml&quot;&gt;
      &lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;npm install &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;g gatsby&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;cli   &lt;span class=&quot;token comment&quot;&gt;# Install gatsby CLI&lt;/span&gt;
gatsby new temp&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gatsby&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;files &lt;span class=&quot;token comment&quot;&gt;# Initialize gatsby in a temp directory&lt;/span&gt;
cp &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;R temp&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gatsby&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;files/* ./ &lt;span class=&quot;token comment&quot;&gt;# Copy all the files into your root directory&lt;/span&gt;
rm &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;rf temp&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gatsby&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;files     &lt;span class=&quot;token comment&quot;&gt;# Remove the temp directory&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;However you get Gatsby initialized in your repository root, afterwards you
should have a file structure that looks something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.
├── content
│   └── [ Markdown files ... ]
├── public
│   └── index.html
├── src
│   ├── layouts
│   │   ├── index.css
│   │   └── index.js
│   └── pages
│       ├── 404.js
│       ├── index.js
│       └── page-2.js
├── gatsby-config.js
└── package.json&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now run the Gatsby dev server to make sure everything works:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm run develop&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you open up &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; you can see what the &lt;code class=&quot;language-text&quot;&gt;develop&lt;/code&gt; script is
doing.&lt;/p&gt;
&lt;p&gt;Boom 💥! The default site is up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dropsinn.s3.amazonaws.com/Screen%20Shot%202017-08-26%20at%2012.57.40%20PM.png&quot; alt=&quot;Gatsby Default Screen&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;rendering-a-list-of-posts&quot;&gt;&lt;a href=&quot;#rendering-a-list-of-posts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rendering a list of posts&lt;/h2&gt;
&lt;p&gt;Let’s customize that landing page to render a list of posts. You will also
probably want to customize the header and overall layout.&lt;/p&gt;
&lt;h3 id=&quot;customizing-the-layout&quot;&gt;&lt;a href=&quot;#customizing-the-layout&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the layout&lt;/h3&gt;
&lt;p&gt;This is pretty simple. Just modify the primary layout file that was generated:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;src/layouts/index.js&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;You can also customize the styles in &lt;code class=&quot;language-text&quot;&gt;src/layouts/index.css&lt;/code&gt;. Stylus, Sass,
Less, etc are also supported if you add the appropriate plugin.
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages&quot;&gt;Here’s the list&lt;/a&gt;
(there’s a page on the website too, but the source is more up to date).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sidenote:&lt;/strong&gt; You can also create your own plugin to do whatever you want, which
I talked about in part 1.&lt;/p&gt;
&lt;h3 id=&quot;customizing-the-landing-page&quot;&gt;&lt;a href=&quot;#customizing-the-landing-page&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the landing page&lt;/h3&gt;
&lt;p&gt;Also straightforward, just edit:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This file is where we’ll actually render out the list of posts. So where the
hell does that data come from??&lt;/p&gt;
&lt;h3 id=&quot;querying-data-with-graphql&quot;&gt;&lt;a href=&quot;#querying-data-with-graphql&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying data with GraphQL&lt;/h3&gt;
&lt;p&gt;Now we’re getting in to the meat of Gatsby and one of the areas where it really
shines: Data sources. You can pull in data from anywhere to be rendered in your
blog, but for our use case the only data source will be the file system (aka the
markdown files stored on your hard drive).&lt;/p&gt;
&lt;p&gt;But first, let’s check out &lt;a href=&quot;https://github.com/graphql/graphiql&quot;&gt;GraphiQL&lt;/a&gt;. It’s an excellent playground for
testing out GraphQL queries in any GraphQL project. Gatsby ships with it enabled
by default, thank goodness. GraphQL can actually be oddly opaque without this
excellent tool.&lt;/p&gt;
&lt;p&gt;Visit &lt;a href=&quot;http://localhost:8000/___graphql&quot;&gt;http://localhost:8000/___graphql&lt;/a&gt; in the browser and you’ll be greeted
with this lovely dev tool:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://dropsinn.s3.amazonaws.com/Screen%20Shot%202017-08-26%20at%201.31.08%20PM.png&quot; alt=&quot;Gatsby Graphiql&quot;&gt;&lt;/p&gt;
&lt;p&gt;I recommend getting to know this tool if you’re not already familiar. You will
be coming back to this often to find the right query to pull data for your
pages.&lt;/p&gt;
&lt;h3 id=&quot;querying-the-file-system&quot;&gt;&lt;a href=&quot;#querying-the-file-system&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying the file system&lt;/h3&gt;
&lt;p&gt;If you play around with GraphiQL you’ll notice there’s not that much there.
Let’s fix that. We need to teach Gatsby how to query the file system. Luckily
this is so common it’s been done for you. Install the file system source plugin:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm i --save gatsby-source-filesystem&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now modify &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt; to both use the plugin and tell it what directory
to source files from. Add this to the &lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt; array:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-source-filesystem&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;posts&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Name this source&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;./content/_posts&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Tell it where to find the files&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;As you can see on my system I keep all my markdown files under &lt;code class=&quot;language-text&quot;&gt;content/_posts/&lt;/code&gt;
which is reflected in the &lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; option for the plugin.&lt;/p&gt;
&lt;p&gt;Now restart the dev server and open GraphiQL up again. You should have access to
the &lt;code class=&quot;language-text&quot;&gt;allFile&lt;/code&gt; root type. Try running this query:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;graphql&quot;&gt;
      &lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  allFile &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    edges &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      node &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ext
        name
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This will list all the files in the directory you specified to the plugin. You
can query all sorts of information about the files. Just investigate the fields
available to you under &lt;code class=&quot;language-text&quot;&gt;node&lt;/code&gt; in GraphQL.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro tip:&lt;/strong&gt; Hit &lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;space&lt;/kbd&gt; to trigger autocomplete and
bring up the list of all available fields.&lt;/p&gt;
&lt;h3 id=&quot;handling-markdown&quot;&gt;&lt;a href=&quot;#handling-markdown&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handling Markdown&lt;/h3&gt;
&lt;p&gt;Being able to query files is a big win, and if you have a directory of HTML
files this is all you will need. But if you want to render markdown files as
HTML you will need another plugin. Let’s add that now:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm i --save gatsby-transformer-remark&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;As before, add it to the &lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt; field in &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-transformer-remark&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This particular plugin can also take &lt;em&gt;its own&lt;/em&gt; plugins via the &lt;code class=&quot;language-text&quot;&gt;plugins&lt;/code&gt; option.
I’ve left it empty but this is where you can add things like syntax highlighting
or auto-linking of headers. Here’s the current list:
&lt;a href=&quot;https://www.npmjs.com/search?q=gatsby-remark&quot;&gt;https://www.npmjs.com/search?q=gatsby-remark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Save and restart your dev server, then go into GraphiQL and try out the new
&lt;code class=&quot;language-text&quot;&gt;allMarkdownRemark&lt;/code&gt; field:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;graphql&quot;&gt;
      &lt;pre class=&quot;language-graphql&quot;&gt;&lt;code class=&quot;language-graphql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  allMarkdownRemark &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    edges &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      node &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        html
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This query gives you the full HTML for all your markdown files. If you are using
frontmatter you can also access that here. I’m assuming you have a &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; field
in your frontmatter:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;query {
  allMarkdownRemark {
    edges {
      node {
        frontmatter {
          title
        }
        html
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Now you have access to the full HTML of your posts as well as the titles. With
this we have enough information to render a list of posts on the front page.&lt;/p&gt;
&lt;h3 id=&quot;getting-graphql-data-into-your-components&quot;&gt;&lt;a href=&quot;#getting-graphql-data-into-your-components&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting GraphQL data into your components&lt;/h3&gt;
&lt;p&gt;Gatsby has the concept of the &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;. For every page you create you can
specify a &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; that will pass data into the default export of that page.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/pages/index.js&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogIndex&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Handle graphql errors&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; message &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`BlogIndex render errr: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;message&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Errors found&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Check the console &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; details&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Some things &lt;span class=&quot;token constant&quot;&gt;I&lt;/span&gt; wrote&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query {
    allMarkdownRemark {
      edges {
        node {
          frontmatter {
            title
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is a simplified example, but there are a few things going on that might not
be intuitive.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the render method we first check for errors, and return early if any are
found&lt;/li&gt;
&lt;li&gt;If no error are found we render a link for each item in the array:
&lt;code class=&quot;language-text&quot;&gt;this.props.data.allMarkdownRemark.edges&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;We export a &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; variable that is constructed using the magic &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt;
global&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The error handling is pretty straightforward, if a bit verbose, as long as you
know what graphql responses look like. In case you didn’t know, if you get an
error in a graphql query the response will contain the &lt;code class=&quot;language-text&quot;&gt;errors&lt;/code&gt; array. We check
for this array and handle it accordingly.&lt;/p&gt;
&lt;p&gt;Now let’s looks specifically at where we render a link for each blog post:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Notice that the data shape is exactly what we specified in the GraphQL query.
This may seem like a lot of nesting just to get at an array of data, but GraphQL
emphasizes &lt;em&gt;clarity&lt;/em&gt; over conciseness. You’ll notice that if you run your
GraphQL query in GraphiQL the data will have the exact shape described above.&lt;/p&gt;
&lt;p&gt;And that brings us finally to the page query:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query {
    allMarkdownRemark {
      edges {
        node {
          frontmatter {
            title
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is how you get data from Gatsby into your react components. Make sure you
don’t misspell &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; otherwise you won’t get what you want.&lt;/p&gt;
&lt;p&gt;Also note that &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; is just some magic global variable. Your linter will
probably complain about it being undefined and you will just have to ignore it.
Personally I think it would be more clear if &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; was imported from Gatsby,
but the project is still young so the API could change at some point ¯\&lt;em&gt;( ツ
)&lt;/em&gt;/¯&lt;/p&gt;
&lt;h3 id=&quot;linking-to-blog-posts&quot;&gt;&lt;a href=&quot;#linking-to-blog-posts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linking to blog posts&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;But the links don’t link anywhere… where’s that &lt;code class=&quot;language-text&quot;&gt;href&lt;/code&gt;?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let’s remedy that. Import the &lt;code class=&quot;language-text&quot;&gt;Link&lt;/code&gt; component and swap it for the simple
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag that was in there before:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogIndex&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Handle graphql errors&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; message &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`BlogIndex render errr: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;message&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Errors found&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Check the console &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; details&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Some things &lt;span class=&quot;token constant&quot;&gt;I&lt;/span&gt; wrote&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;/* ??? */&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;But what does it link to? What is the URL of each blog post?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That’s an open question because it depends on your data and how you structured
it before. For example, if you included the intended URL in the frontmatter of
each post it’s a simple matter of updating your query to include that:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query {
    allMarkdownRemark {
      edges {
        node {
          frontmatter {
            title
            url # &amp;lt;-------------  New!
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Many existing Gatsby examples use &lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; within each markdown file’s frontmatter
to designate the url. For example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;md&quot;&gt;
      &lt;pre class=&quot;language-md&quot;&gt;&lt;code class=&quot;language-md&quot;&gt;---
title: My Post
path: my-post
---

# My post&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;In this case &lt;code class=&quot;language-text&quot;&gt;node.frontmatter.path&lt;/code&gt; would be used to construct URLs. If this is
the case for you then you’re probably all set for the index page.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But what if the URL for each post is &lt;strong&gt;NOT&lt;/strong&gt; in the frontmatter?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was exactly my situation. The URL was actually derived from the title of
the post so I had to figure out how to augment the GraphQL fields with my own
data. Namely the URL of the post derived from the post title.&lt;/p&gt;
&lt;h2 id=&quot;adding-custom-data-to-the-graphql-schema&quot;&gt;&lt;a href=&quot;#adding-custom-data-to-the-graphql-schema&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding custom data to the GraphQL schema&lt;/h2&gt;
&lt;p&gt;If I have a post named “Isn’t this a fun title” then I want the URL to be
“isnt-this-a-fun-title”. Notice that spaces turn into hyphens and special
characters are removed. This is simple enough to do in JavaScript, but it felt
wrong to do it on the fly when rendering components. This is &lt;em&gt;data&lt;/em&gt; so I wanted
to be able to query it through GraphQL.&lt;/p&gt;
&lt;p&gt;Enter &lt;code class=&quot;language-text&quot;&gt;setFieldsOnGraphQLNodeType&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aside:&lt;/strong&gt; Gatsby is super extensible. It’s the primary reason I switched from
Hexo which worked well enough for my use case.&lt;/p&gt;
&lt;p&gt;In order to extend this particular part of Gatsby you need to create a
&lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file. This file let’s you work with all of Gatsby’s plugin
hooks that are run in node. The GraphQL server is run in node, so this is where
we add custom fields. Example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// gatsby-node.js&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; GraphQLString &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;gatsby/graphql&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getURL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; node &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;/* See the source link below for implementation */&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;setFieldsOnGraphQLNodeType&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; type &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;MarkdownRemark&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    url&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      type&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; GraphQLString&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getURL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Source code for
&lt;a href=&quot;https://github.com/iansinnott/iansinnott.github.io/blob/source/gatsby-node.js&quot;&gt;gatsby-node.js here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you’ve worked with GraphQL before this should look very familiar. In fact, as
you can see the string type is imported directly from GraphQL and not from
Gatsby.&lt;/p&gt;
&lt;p&gt;You check the type of node and if it’s a type youʼre interested in you
resolve with some fields. Fields in GraphQL require a &lt;code class=&quot;language-text&quot;&gt;type&lt;/code&gt; and a way to
&lt;code class=&quot;language-text&quot;&gt;resolve&lt;/code&gt; the value.&lt;/p&gt;
&lt;p&gt;I’ve omitted the implementation of &lt;code class=&quot;language-text&quot;&gt;getURL&lt;/code&gt; here, but you can see the
&lt;a href=&quot;https://github.com/iansinnott/iansinnott.github.io/blob/gatsby-migration/gatsby-node.js#L17&quot;&gt;source code here&lt;/a&gt;
(NOTE: in the source it’s called &lt;code class=&quot;language-text&quot;&gt;getSlug&lt;/code&gt; instead of &lt;code class=&quot;language-text&quot;&gt;getURL&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You can use this technique to add any field you want to your GraphQL schema. Now
you should be all set to render &lt;code class=&quot;language-text&quot;&gt;Link&lt;/code&gt; components that actually point somewhere
interesting 👍.&lt;/p&gt;
&lt;h2 id=&quot;generating-pages-from-markdown-files&quot;&gt;&lt;a href=&quot;#generating-pages-from-markdown-files&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating pages from markdown files&lt;/h2&gt;
&lt;p&gt;This is where it all comes together. If you finished the last section you would
have ended up with a bunch of links that point to the correct URL but when you
tried visiting the URL there was nothing there 😕. This is because Gatsby hasn’t
yet generated an additional pages. It’s still just rendering whatever is in your
&lt;code class=&quot;language-text&quot;&gt;src/pages/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;By default, Gatsby will create a static HTML page for everything under
&lt;code class=&quot;language-text&quot;&gt;src/pages/&lt;/code&gt;. At this point we’ve discussed &lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt; extensively. It
will be the &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; page of your site, and thus your landing page.&lt;/p&gt;
&lt;p&gt;For any stand-alone pages, simply create a corresponding js file in the &lt;code class=&quot;language-text&quot;&gt;pages/&lt;/code&gt;
directory and you are good to go. For example, &lt;code class=&quot;language-text&quot;&gt;src/pages/about.js&lt;/code&gt; would
generate an &lt;code class=&quot;language-text&quot;&gt;about.html&lt;/code&gt; page. Simple.&lt;/p&gt;
&lt;p&gt;But almost everyone will want to generate some pages based on data, not on the
files in the pages directory. Gatsby let’s us do this.&lt;/p&gt;
&lt;h3 id=&quot;generating-custom-pages&quot;&gt;&lt;a href=&quot;#generating-custom-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generating custom pages&lt;/h3&gt;
&lt;p&gt;The key here is again to hook in to one of Gatsby’s many plugin hooks. In this
case, &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt;. In the same &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file as before:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// gatsby-node.js&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// .. other stuff from before...&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./src/templates/custom-page.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Create a custom page!&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/my-custom-page/`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; postTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Context will be passed in to the page query as graphql variables&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;At the most basic level this method of page creation is quite simple: Grab the
&lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; function from the API and call it with some props.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; is required. This is the path that your page will have as a generated
HTML file. It’s the URL of your final page.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;component&lt;/code&gt; is also required. It’s the file containing the react component
that will be used to render this particular page.&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;context&lt;/code&gt; is optional but I’ve included it here because it will be important
soon. This lets you pass data down to the react component specified in the
&lt;code class=&quot;language-text&quot;&gt;component&lt;/code&gt; option as well as the &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; (if any).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The API is actually pretty simple: To generate a new page call &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; with
some props. So in pseudo code:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Get all markdown files&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Call create page for each one&lt;/span&gt;
markdownFiles&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/templates/post.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;I’ve included the pseudo code to highlight the fact that nothing too magical is
going on here. We just need to call create page for every post we want to
create. The implementation is a bit more verbose, but that’s still all it’s
doing.&lt;/p&gt;
&lt;p&gt;So in order to make this work we also need to be able to query GraphQL just like
we do in the page query. Gatsby let’s us do exactly that by giving us access to
the &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; object and letting us return a promise so that we can do async
work.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;
      &lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// NOTE: I&apos;m using async/await to simplify the code since it&apos;s now natively supported&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// in Node 8.x. This means that our function will return a promise&lt;/span&gt;
exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;createPages &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./src/templates/post.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Using async await. Query will likely be very similar to your pageQuery in index.js&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
    query {
      allMarkdownRemark {
        edges {
          node {
            id
            url
          }
        }
      }
    }
  `&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Things broke, see console output above&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Create blog posts pages.&lt;/span&gt;
  result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; postTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Context will be passed in to the page query as graphql vars&lt;/span&gt;
        id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Notice that the query is very similar to the &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; in index.js but it’s
not identical. This time we actually want the &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; because it will allow the
post template to use the ID to query one single blog post.&lt;/p&gt;
&lt;h2 id=&quot;rendering-individual-posts&quot;&gt;&lt;a href=&quot;#rendering-individual-posts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rendering individual posts&lt;/h2&gt;
&lt;p&gt;If you’ve made it to this point rendering individual posts is quite
straightforward. You need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create the &lt;code class=&quot;language-text&quot;&gt;postTemplate&lt;/code&gt; file referenced in &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; above&lt;/li&gt;
&lt;li&gt;Export your template component as the default export&lt;/li&gt;
&lt;li&gt;Add a &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; that will fetch the blog post to render&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here it is in all it’s glory:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/templates/post.js&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogPost&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; post &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;markdownRemark

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;Post&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;
          &lt;span class=&quot;token attr-name&quot;&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;content&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// NOTE: The $id var is passed in via context when calling createPage in gatsby-node.js&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query PostById($id: String!) {
    markdownRemark(id: { eq: $id }) {
      frontmatter {
        title
      }
      html
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;If you’re not used to GraphQL syntax the &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt; might be a little
intimidating, but it’s all standard GraphQL so if you take the time to learn
GraphQL on its own you will be able to use that knowledge here. I.e. it is not
Gatsby-specific.&lt;/p&gt;
&lt;p&gt;The important thing to note here is that &lt;code class=&quot;language-text&quot;&gt;$id&lt;/code&gt; is passed in via &lt;code class=&quot;language-text&quot;&gt;context&lt;/code&gt; in
&lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt;. That’s how the post data and processed HTML string make their
way into props. Then it’s just a matter of rendering as you would with any other
component.&lt;/p&gt;
&lt;h2 id=&quot;where-to-go-from-here&quot;&gt;&lt;a href=&quot;#where-to-go-from-here&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to go from here&lt;/h2&gt;
&lt;p&gt;There’s a lot more you can do with Gatsby and it’s not always obvious how to
proceed, but you have the full power of JavaScript at your disposal. So as long
as you don’t mind reading a bit of source code to figure out how something works
there’s no limit to what you can implement.&lt;/p&gt;
&lt;p&gt;Here are some ideas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add previous and next buttons to each post&lt;/li&gt;
&lt;li&gt;Create a remark plugin to add custom block types&lt;/li&gt;
&lt;li&gt;Aggregate tags from your frontmatter and generate pages for all posts of a
specific tag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these—such as pagination—are implemented on my blog. You can find the
source code here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/iansinnott/iansinnott.github.io/tree/gatsby-migration&quot;&gt;Source code for the blog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;closing-thoughts&quot;&gt;&lt;a href=&quot;#closing-thoughts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;In my opinion Gatsby provides a few killer features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Extensible through a powerful plugin API.&lt;/li&gt;
&lt;li&gt;Supports arbitrary data sources that can be easily queried using GraphQL.&lt;/li&gt;
&lt;li&gt;Splits your code automatically so you don’t have to worry about bundle size
increasing as a function of the number of pages you render.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s not a perfect project (looking at you global &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; object) and it’s
still under heavy development, so you may run in to bugs, but in my view the
pros heavily outweigh the cons. It’s a best-in-class static site generator and
well worth the adoption time if you want to customize your blog.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If anything was unclear or you have more questions feel free to ask me on
&lt;a href=&quot;https://twitter.com/ian_sinn&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Embracing GraphQL — How I migrated React FAQ to Gatsby v1]]></title><description><![CDATA[Moving to Gatsby 1.x and embracing the new GraphQL setup can be daunting but the effort is going to payoff]]></description><link>https://www.gatsbyjs.org/blog/2017-09-26-embracing-graphql/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-09-26-embracing-graphql/</guid><dc:creator><![CDATA[Tim Arney]]></dc:creator><content:encoded>&lt;p&gt;Before I built &lt;a href=&quot;https://reactfaq.site/&quot;&gt;React FAQ&lt;/a&gt;, I went looking for a static
site generator.&lt;/p&gt;
&lt;p&gt;I had a few criteria in mind.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fast (hopefully a given for a static site)&lt;/li&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;React-based&lt;/li&gt;
&lt;li&gt;Easy to update&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gatsby at the time was still pre-1.0 but its workflow met my needs. I loved that
I could drop my existing Markdown files into a &lt;code class=&quot;language-text&quot;&gt;pages&lt;/code&gt; directory and Gatsby
would do the rest.&lt;/p&gt;
&lt;p&gt;Webpack loader —&gt; React.js wrapper component —&gt; static HTML page. Done.&lt;/p&gt;
&lt;p&gt;Well…done until I read this
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/420&quot;&gt;GitHub Issue&lt;/a&gt; … “New GraphQL
data layer”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;issue-420.png&quot; alt=&quot;issue-420&quot;&gt;&lt;/p&gt;
&lt;p&gt;Things in Gatsby were about to change. I read on to see how easy it’d be to
upgrade.&lt;/p&gt;
&lt;p&gt;Having never used GraphQL, the new “routeQuery” in components looked very
foreign.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; routeQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; `
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  allMarkdown &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    edges &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      node &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path
        frontmatter &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          title
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;What happened to my “drop files into a folder and call it a day” setup? What
&lt;em&gt;is&lt;/em&gt; all this weird syntax &lt;a href=&quot;https://twitter.com/kylemathews&quot;&gt;@kylemathews&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Reading the issue, Kyle’s reasoning made sense but this didn’t seem to be simple
at all. 0.x seemed more “automatic” to me. Drop in your files and go.&lt;/p&gt;
&lt;h2 id=&quot;10-released&quot;&gt;&lt;a href=&quot;#10-released&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0 Released&lt;/h2&gt;
&lt;p&gt;When 1.0 landed, I waited for a while before trying to update my website. The
reviews were solid but I was still stuck on my pre-1.0 mindset.&lt;/p&gt;
&lt;p&gt;Then three weeks ago I saw this tweet from
&lt;a href=&quot;https://twitter.com/ryanflorence&quot;&gt;@ryanflorence&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;.&lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;@gatsbyjs&lt;/a&gt; is a completely original approach to web development. The mix of static/dynamic and how it handles data is really interesting.&lt;/p&gt;&amp;mdash; Ryan Florence (@ryanflorence) &lt;a href=&quot;https://twitter.com/ryanflorence/status/906233888560758784&quot;&gt;September 8, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Well, that sounded like a pretty good endorsement.&lt;/p&gt;
&lt;h2 id=&quot;taking-the-leap&quot;&gt;&lt;a href=&quot;#taking-the-leap&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Taking the leap&lt;/h2&gt;
&lt;p&gt;With the &lt;a href=&quot;https://github.com/gatsbyjs/gatsby-starter-blog&quot;&gt;gatsby-starter-blog&lt;/a&gt;
in hand as a solid example, I started converting my website over to v1.0.&lt;/p&gt;
&lt;p&gt;There were a few bumps into the road but thanks to the starter example, I pieced
things together quickly. Quickly as in “I have no idea how this GraphQL stuff
works, but I have it working, so cool”. Easy to update — check.&lt;/p&gt;
&lt;h2 id=&quot;digging-deeper&quot;&gt;&lt;a href=&quot;#digging-deeper&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Digging Deeper&lt;/h2&gt;
&lt;p&gt;I’m not the type of person to settle on “It’s working so don’t touch anything”.
So I started digging into how Gatsby 1.x works—particular the
&lt;a href=&quot;/tutorial/part-four/#data-in-gatsby&quot;&gt;data layer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Things really clicked when I read this part about the GraphiQL IDE and watched
how to drill down on the data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;graphiql.gif&quot; alt=&quot;GraphiQL&quot;&gt;&lt;/p&gt;
&lt;p&gt;Prior to reading / seeing that part in the documentation, looking at the code I
could understand roughly what was going on but it didn’t feel familiar. Like
anything new, there’s that “I don’t know what I’m doing” stage. I know what I
want to do, but I don’t understand the syntax enough to make it happen. Seeing
the docs and how you can explore the schema in GraphiQL (autocomplete is 👌) to
see what data is available really helped in my “play around and break stuff”
phase.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From the docs:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You first sketch out the data query by playing in GraphiQL, then copy this to
a React page component to start building the UI.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;“Sketch &amp;#x26; Copy” using the GraphiQL was a revelation. I was thinking it’s going
to be tricky to manually write the queries until I become more familiar with the
syntax. Using GraphiQL helped me make a quick leap forward with the learning
curve. “Aha this is amazing”. I have lots to learn still but the comfort level
is going up.&lt;/p&gt;
&lt;h2 id=&quot;thats-a-wrap&quot;&gt;&lt;a href=&quot;#thats-a-wrap&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;That’s a wrap&lt;/h2&gt;
&lt;p&gt;With my 1.x update complete, I’m feeling that not only was GatsbyJS a solid
pick, but it’s something that is going to evolve the way I build websites. It’s
a nice starter push into GraphQL and many other advanced features the websites
of the future will need to be performant.&lt;/p&gt;
&lt;p&gt;Sometimes we don’t do things because they are unfamiliar to us. Sometimes we
need a little push. Thanks for the push GatsbyJS. The learning curve may seem
daunting but the payoff is huge. GatsbyJS has become a powerful tool in my
arsenal and I’m happy to have extended my development skills.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Community Roundup #1]]></title><description><![CDATA[It’s been a wild 77 days since Gatsby 1.0.0 was released into the world on July
6th, 2017. By the numbers we’ve seen: 3150 new GitHub stars…]]></description><link>https://www.gatsbyjs.org/blog/2017-09-21-community-roundup-1/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-09-21-community-roundup-1/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;It’s been a wild 77 days since Gatsby 1.0.0 was released into the world on July
6th, 2017.&lt;/p&gt;
&lt;p&gt;By the numbers we’ve seen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3150 new GitHub stars&lt;/li&gt;
&lt;li&gt;~380,000 new NPM downloads&lt;/li&gt;
&lt;li&gt;110 new contributors (hey y’all!)&lt;/li&gt;
&lt;li&gt;~400 merged PRs&lt;/li&gt;
&lt;li&gt;dozens of new plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;new-gatsby-sites-launched-recently&quot;&gt;&lt;a href=&quot;#new-gatsby-sites-launched-recently&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Gatsby sites launched recently&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sourcegraph, a startup that helps developers discover and understand code,
&lt;a href=&quot;https://about.sourcegraph.com/&quot;&gt;relaunched their site on Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The customer data platform startup mParticle
&lt;a href=&quot;https://docs.mparticle.com/&quot;&gt;launched their docs site on Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The hip new Ocaml-based programming language ReasonML
&lt;a href=&quot;https://reasonml.github.io/&quot;&gt;built their new website on Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Freelancer web developer &lt;a href=&quot;https://twitter.com/oliverbenns/&quot;&gt;Oliver Benns’&lt;/a&gt;
&lt;a href=&quot;https://oliverbenns.com/&quot;&gt;portfolio site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/danistefanovic&quot;&gt;Daniel Stefanovic&lt;/a&gt; launched his online
book &lt;a href=&quot;http://digitalpsychology.io/&quot;&gt;http://digitalpsychology.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;new-tutorials&quot;&gt;&lt;a href=&quot;#new-tutorials&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New tutorials!&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The official tutorial has been growing slowly. The first four parts are
finished covering the basics of starting new projects, exploring styling
options, how to use Gatsby plugins, and the basics of Gatsby’s GraphQL data
layer. &lt;a href=&quot;/tutorial/&quot;&gt;Check them out!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Level Up Tutorials is working on a new Gatsby video tutorial series! It’s
fantastic!
&lt;a href=&quot;https://www.youtube.com/watch?v=b2H7fWhQcdE&amp;#x26;list=PLLnpHn493BHHfoINKLELxDch3uJlSapxg&quot;&gt;Check out the first 7 tutorials on YouTube!&lt;/a&gt;.
Scott Tolinski also recorded two other videos on Gatsby, his
&lt;a href=&quot;https://www.youtube.com/watch?v=CSemYFzHAtU&quot;&gt;“first look” at Gatsby&lt;/a&gt; shortly
after its 1.0 release as well as a
&lt;a href=&quot;https://www.youtube.com/watch?v=xqaThBnesfY&quot;&gt;recording of him moving his personal site to Gatsby&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLAZ4kZ9dFpMXuwazIt4mWtTuqOHdjRlk&quot;&gt;Giraffe Academy launched a new Gatsby tutorial series&lt;/a&gt;!
13 tutorials so far covering everything from setting up Gatsby on your
computer to building with React components to working with different types of
data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;notable-plugins-launched&quot;&gt;&lt;a href=&quot;#notable-plugins-launched&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notable plugins launched&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The WordPress plugin recently got a big revamp and hit 2.0.0! Checkout the
&lt;a href=&quot;https://using-wordpress.gatsbyjs.org/&quot;&gt;new example site&lt;/a&gt; and the
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-source-wordpress&quot;&gt;README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Several new CSS plugins have been added,
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-less&quot;&gt;Less&lt;/a&gt;,
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-emotion&quot;&gt;Emotion&lt;/a&gt;,
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-styled-jsx&quot;&gt;Styled JSX&lt;/a&gt;,
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-jss&quot;&gt;JSS&lt;/a&gt;,
and
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-stylus&quot;&gt;Stylus&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tumblbug.com/&quot;&gt;Tumblbug&lt;/a&gt;, a startup in South Korea, built a
&lt;a href=&quot;https://github.com/tumblbug/gatsby-source-workable&quot;&gt;source plugin for Workable&lt;/a&gt;
so they could easily load job listings into their website.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/ryanflorence&quot;&gt;Ryan Florence&lt;/a&gt; built a
&lt;a href=&quot;https://github.com/ReactTraining/gatsby-source-firebase&quot;&gt;source plugin for Firebase&lt;/a&gt;
so he could easily query data stored there while rebuilding his company
website!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-remark-katex&quot;&gt;gatsby-remark-katex&lt;/a&gt;
lets you write math equations in your markdown and
&lt;a href=&quot;https://using-remark.gatsbyjs.org/katex/&quot;&gt;see them beautifully rendered&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rongierlach/gatsby-plugin-purify-css&quot;&gt;gatsby-plugin-purify-css&lt;/a&gt;
adds drop-in support for removing unused CSS during Gatsby builds! It uses
&lt;a href=&quot;https://github.com/purifycss/purifycss&quot;&gt;PurifyCSS&lt;/a&gt; and can lead to huge
reductions in CSS weight.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Modern static site generation with Gatsby]]></title><description><![CDATA[In this post, I will talk about static site generators -- how they have evolved and why I switched from a Ghost powered site to Gatsby.js, a modern static site generator.]]></description><link>https://www.gatsbyjs.org/blog/2017-09-18-gatsby-modern-static-generation/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-09-18-gatsby-modern-static-generation/</guid><dc:creator><![CDATA[Kostas Bariotis]]></dc:creator><content:encoded>&lt;p&gt;In this post, I will talk about static site generators — how they have evolved
and why I switched from a &lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt; powered site to
&lt;a href=&quot;/&quot;&gt;Gatsby.js&lt;/a&gt;, a modern static site generator.&lt;/p&gt;
&lt;h2 id=&quot;static-site-generators-as-we-know-them&quot;&gt;&lt;a href=&quot;#static-site-generators-as-we-know-them&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Static site generators as we know them&lt;/h2&gt;
&lt;p&gt;Jekyll, my tool of preference for quite a few years, helped me build
&lt;a href=&quot;http://devastation.tv&quot;&gt;robust&lt;/a&gt; &lt;a href=&quot;http://devitconf.org&quot;&gt;professional&lt;/a&gt;
&lt;a href=&quot;http://skgtech.io&quot;&gt;web presences&lt;/a&gt; that content managers can update with the
click of a button. It helped me quickly move a project of mine from idea to
production by creating a landing page very fast.&lt;/p&gt;
&lt;p&gt;Static site generators like Jekyll all work pretty similarly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Describe your content in some common templating language (&lt;a href=&quot;http://pugjs.org&quot;&gt;Pug&lt;/a&gt;,
&lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt;, etc)&lt;/li&gt;
&lt;li&gt;While in development, start a local web server and add file “watchers” that
will listen for content changes and re-render the site&lt;/li&gt;
&lt;li&gt;Finally, render the whole site in static HTML and deploy. The generator will
combine your files and produce a well formed HTML content.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s say you navigate to the good old site example.com:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The browser requests the page at example.com&lt;/li&gt;
&lt;li&gt;The server responds with the HTML content&lt;/li&gt;
&lt;li&gt;The browser renders the page and loads the asset related to the script tag&lt;/li&gt;
&lt;li&gt;JS will instruct the browser to manipulate the DOM, for example, to show a
“welcome to this page” popup dialog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A caveat here is that you have to keep the client side logic separated from the
backend. The client side JS file that shows the modal dialog has nothing to do
with the PUG file you wrote and eventually became HTML. The client side logic
only manipulates directly the DOM.&lt;/p&gt;
&lt;p&gt;This architecture is fairly similar to a Wordpress site. A Wordpress engine also
generates the HTML and serve it to the browser, after which the client side JS
you wrote kicks in and starts manipulating the DOM. Wordpress’s responses can be
cached, of course, and served to the client; that setup effectively makes it
another static site generator with a GUI text editor.&lt;/p&gt;
&lt;p&gt;So to recap, the nice part of the static site setup is that your website is just
static assets that are sitting somewhere ready to be served to user requests. No
need to maintain a runtime, a database, application code, or complex optimized
web servers.&lt;/p&gt;
&lt;p&gt;But the downside is you have to keep separate template files that will
eventually rendered as HTML on the browser, and JavaScript file that will
eventually manipulate that HTML again on the browser (and CSS assets too).&lt;/p&gt;
&lt;h2 id=&quot;enter-the-new-world-order&quot;&gt;&lt;a href=&quot;#enter-the-new-world-order&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enter the new world order&lt;/h2&gt;
&lt;p&gt;I &lt;a href=&quot;https://kostasbariotis.com/hands-on-react-js/&quot;&gt;started experimenting&lt;/a&gt; with
React two years ago. It came with so many features out of the box that no one
ever has seen except the guys working internally on Facebook’s codebase. But the
thing that stood out immediately was the way which React was handling the DOM,
aka the Virtual DOM.&lt;/p&gt;
&lt;p&gt;To change a page’s display, you have to change the DOM — but changing the DOM
is computationally expensive, so — slow. React is smart, and analyzes the
changes you want to make so it applies only required changes, thus making the
rendering much faster.&lt;/p&gt;
&lt;p&gt;If you use React with
&lt;a href=&quot;https://facebook.github.io/react/docs/react-dom-server.html&quot;&gt;server-side rendering&lt;/a&gt;,
your flow looks something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A browser requests a page&lt;/li&gt;
&lt;li&gt;The server responds with static HTML&lt;/li&gt;
&lt;li&gt;The browser immediately renders the page so the user can see it&lt;/li&gt;
&lt;li&gt;The browser loads additional JS in the background&lt;/li&gt;
&lt;li&gt;The client takes some action, like navigating to a different route.&lt;/li&gt;
&lt;li&gt;The browser uses the additional JS to handle this action.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On your end, the development flow looks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Describe your content in React.js Components&lt;/li&gt;
&lt;li&gt;During development, write code like a boss (hot reloading, modularized code,
webpack plugins, etc…)&lt;/li&gt;
&lt;li&gt;Use React.js Server Side Rendering API to convert this code to static HTML
content, and JavaScript code, on your server&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s really that easy? Well, sort of.&lt;/p&gt;
&lt;p&gt;There is the need for a strong abstraction that will…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;track your links across your components&lt;/li&gt;
&lt;li&gt;parse content written in another format, like blog posts written in Markdown&lt;/li&gt;
&lt;li&gt;generate code that will not bloat the client and will efficiently serve the
content to the user.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thankfully, there are a few projects that took the initiative on this:
&lt;a href=&quot;/&quot;&gt;Gatsby.js&lt;/a&gt;, &lt;a href=&quot;https://phenomic.io&quot;&gt;Phenomic&lt;/a&gt;, and
&lt;a href=&quot;https://nextein.now.sh&quot;&gt;nextein&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the time that I started following them, early 2017, all of them were in a
very early stage and none of them could generate my site’s content the way I
wanted.&lt;/p&gt;
&lt;p&gt;I wanted to make the generated site, exactly like the old one, in terms of both
user experience and keeping my old routes and paths so I don’t have weird 404s.&lt;/p&gt;
&lt;p&gt;Gatsby came with client side routing out of the box and an extensive API that
you can use to generate your content exactly like you need. And once Gatsby.js
hit major version 1, I started using it and the result…you can
&lt;a href=&quot;https://kostasbariotis.com/&quot;&gt;look at it&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&quot;what-exactly-am-i-looking-at&quot;&gt;&lt;a href=&quot;#what-exactly-am-i-looking-at&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What exactly am I looking at?&lt;/h2&gt;
&lt;p&gt;First, if you navigate around my blog (or around this site!), you will notice
that the browser doesn’t fully re-render the site. Gatsby will generate a JSON
file for each route, so the browser can request only that file and React.js will
render only the appropriate components.&lt;/p&gt;
&lt;p&gt;(Previously to do this required a lot of customization — I was using a
technique called
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com__ghost-theme/blob/master/src/js/app.js#L11&quot;&gt;pjax&lt;/a&gt;
to create the same effect. While it looked the same, it was more hack-ish;
Gatsby provides this out of the box)&lt;/p&gt;
&lt;p&gt;Second, you can take a look at the
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com&quot;&gt;source code&lt;/a&gt;. Let me give you
a sense of how this site is being generated. You can find all my blog posts and
the main pages(&lt;code class=&quot;language-text&quot;&gt;/&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;/about&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;/drafts&lt;/code&gt;) of this site at
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com/tree/master/src/pages&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/src/pages&lt;/code&gt;&lt;/a&gt;.
Common components can be found at
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com/tree/master/src/components&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/src/components&lt;/code&gt;&lt;/a&gt;.
At
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com/tree/master/gatsby-node.js&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/gatsby-node.js&lt;/code&gt;&lt;/a&gt;
you can find the route it takes in order to render the site. First, it loads all
posts using the GraphQL api which queries all &lt;code class=&quot;language-text&quot;&gt;.md&lt;/code&gt; files. Then it creates a
page for each one, using the
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com/tree/master/src/templates/blog-post.js&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;/src/templates/blog-post.js&lt;/code&gt;&lt;/a&gt;
template and before that it creates a page, with pagination, for all posts and
tags again using the appropriate template file.&lt;/p&gt;
&lt;p&gt;During development, Gatsby will generate all of these in memory and fire up a
development server that I can use to preview my site.&lt;/p&gt;
&lt;p&gt;You can try it yourself by cloning the
&lt;a href=&quot;https://github.com/kbariotis/kostasbariotis.com&quot;&gt;source code&lt;/a&gt; and after
installing dependencies, run:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm run develop&lt;/code&gt; to fire up the development server&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;npm run build&lt;/code&gt; to build the site (check the &lt;code class=&quot;language-text&quot;&gt;/public&lt;/code&gt; folder after it’s done)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;an-alternative-to-html-caching&quot;&gt;&lt;a href=&quot;#an-alternative-to-html-caching&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An alternative to HTML caching&lt;/h2&gt;
&lt;p&gt;Now let’s bring these threads together. Let’s say you have a Wordpress site.
You’re caching the content, which is nice for performance, but you’re building
on it now and want to move to a more modern web development experience.&lt;/p&gt;
&lt;p&gt;One path is the one I took — for the last three years, I was using a similar
system called &lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt;. While it served me well, I really got
tired of updating it, ssh-ing to the server, doing migrations and doing other
ops required by such a stack. (There are paid hosting options, of course, but
that comes with a different set of problems). So I switched to Gatsby.&lt;/p&gt;
&lt;p&gt;Another option, if you want to keep Wordpress’ Admin UI is to maintain your
content, is to separate the backend from the frontend.&lt;/p&gt;
&lt;p&gt;Imagine that instead of having &lt;a href=&quot;https://memcached.org/&quot;&gt;memcached&lt;/a&gt; caching your
HTML in front of your WordPress site, you trigger a hook each time your database
changes that will re-generate the frontend using Gatsby’s
&lt;a href=&quot;/packages/gatsby-source-wordpress/&quot;&gt;Wordpress plugin&lt;/a&gt;. Yes, Gatsby supports
multiple backend sources to load your content. Instead of storing them inside
your version control like me, you can just as well load them from your
Wordpress’s MySQL database.&lt;/p&gt;
&lt;p&gt;To conclude, Gatsby will allow us to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serve static content without maintaining complex stacks&lt;/li&gt;
&lt;li&gt;keep a clear separation between content and the presentation layer&lt;/li&gt;
&lt;li&gt;have cool features like client side routing and hot reload on development, out
of the box&lt;/li&gt;
&lt;li&gt;reuse the same code that is being used to generate the backend content at our
visitors’ browsers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope you will experiment with Gatsby, and let me know what you think!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Web Performance 101—also, why is Gatsby so fast?]]></title><description><![CDATA[I gave this talk last weekend at  ReactNext  in Tel
Aviv. I spoke on the basics of measuring and improving web performance and how
Gatsby is…]]></description><link>https://www.gatsbyjs.org/blog/2017-09-13-why-is-gatsby-so-fast/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-09-13-why-is-gatsby-so-fast/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;&lt;em&gt;I gave this talk last weekend at &lt;a href=&quot;http://react-next.com/&quot;&gt;ReactNext&lt;/a&gt; in Tel
Aviv. I spoke on the basics of measuring and improving web performance and how
Gatsby is designed so sites built with it are always very very fast.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Slides to follow interspersed with notes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.001.png&quot; alt=&quot;reactnext-gatsby-performance.001&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.003.png&quot; alt=&quot;reactnext-gatsby-performance.003&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.004-5314265.png&quot; alt=&quot;reactnext-gatsby-performance.004&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.008.png&quot; alt=&quot;reactnext-gatsby-performance.008&quot;&gt;&lt;/p&gt;
&lt;p&gt;I open sourced the initial prototype of Gatsby in mid-2015. A year later, post
failed startup, I went full-time on Gatsby as it seemed the most interesting and
potentially fruitful thing I could do. After ten months of work, I, along with
the 40 other contributors, released Gatsby v1. I’m currently working on a
Gatsby-related startup.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.007.png&quot; alt=&quot;reactnext-gatsby-performance.007&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;why-is-site-speed-so-important&quot;&gt;&lt;a href=&quot;#why-is-site-speed-so-important&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is site speed so important?&lt;/h2&gt;
&lt;p&gt;DoubleClick ran a study on how site loading performance affected how people used
websites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.011.png&quot; alt=&quot;reactnext-gatsby-performance.011&quot;&gt;&lt;/p&gt;
&lt;p&gt;In other words, PEOPLE LEAVE YOUR SITE IF IT IS SLOW. Which, I’ll guess, is not
what you want.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.012.png&quot; alt=&quot;reactnext-gatsby-performance.012&quot;&gt;&lt;/p&gt;
&lt;p&gt;Slow loading sites tend to have many related performance problems.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.013.png&quot; alt=&quot;reactnext-gatsby-performance.013&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;how-to-think-about--measure-performance&quot;&gt;&lt;a href=&quot;#how-to-think-about--measure-performance&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to think about &amp;#x26; measure performance?&lt;/h2&gt;
&lt;p&gt;Ok, I’ve convinced you that site performance is important. You perhaps already
have a site that you know is too slow. How to do you go about improving things?&lt;/p&gt;
&lt;p&gt;Our first task is to understand how to measure website performance. Only then
can we make changes that we’re confident are improving things.&lt;/p&gt;
&lt;p&gt;Let’s discuss two key website performance metrics that summarize the most
important parts of website performance. How quickly is your website visible
(Speed Index) and how quickly is your site usable (Time to Interactive—TTI).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.015.png&quot; alt=&quot;reactnext-gatsby-performance.015&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.016-5314582.png&quot; alt=&quot;reactnext-gatsby-performance.016&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://webpagetest.org&quot;&gt;webpagetest.org&lt;/a&gt; is &lt;em&gt;so&lt;/em&gt; good. I’ve run 100s if not
1000s of performance tests while working on sites and optimizing Gatsby.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.021.png&quot; alt=&quot;reactnext-gatsby-performance.021&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;performance-tests-on-real-websites&quot;&gt;&lt;a href=&quot;#performance-tests-on-real-websites&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tests on real websites&lt;/h2&gt;
&lt;p&gt;Let’s dive into some tests I ran on webpagetest.org and see the Speed Index
score for some well-known sites.&lt;/p&gt;
&lt;p&gt;Each test uses webpagetest’s “Simple Testing” mode and the “Mobile - Regular 3G”
test configuration. This loads a website from a real phone in Virginia USA
(Motorola G gen 4) on a simulated 3G connection.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.022.png&quot; alt=&quot;reactnext-gatsby-performance.022&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.023.png&quot; alt=&quot;reactnext-gatsby-performance.023&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.024.png&quot; alt=&quot;reactnext-gatsby-performance.024&quot;&gt;&lt;/p&gt;
&lt;p&gt;So CNN seems decent. Its Speed Index score is 8098 (these are milliseconds btw
so 8.1 seconds) and it gets some pixels on screen by 6.5 seconds. Not bad. Let’s
look at the next site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.025.png&quot; alt=&quot;reactnext-gatsby-performance.025&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.026.png&quot; alt=&quot;reactnext-gatsby-performance.026&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.027.png&quot; alt=&quot;reactnext-gatsby-performance.027&quot;&gt;&lt;/p&gt;
&lt;p&gt;Hey nice! Its Speed Index score is 5568 so 2.5 seconds or so faster than CNN. It
also gets its first pixels on screen at a zippy 3 seconds but its Speed Index
score is hurt by it taking another &lt;em&gt;12 seconds&lt;/em&gt; to finish loading.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.028-5471130.png&quot; alt=&quot;reactnext-gatsby-performance.028&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.029.png&quot; alt=&quot;reactnext-gatsby-performance.029&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.030.png&quot; alt=&quot;reactnext-gatsby-performance.030&quot;&gt;&lt;/p&gt;
&lt;p&gt;Washingtonpost.com gets its first significant paint at around 5 seconds but it
takes another &lt;em&gt;10 seconds&lt;/em&gt; to finish visually loading which hurts its Speed
Index score some.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.031.png&quot; alt=&quot;reactnext-gatsby-performance.031&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.032.png&quot; alt=&quot;reactnext-gatsby-performance.032&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.033.png&quot; alt=&quot;reactnext-gatsby-performance.033&quot;&gt;&lt;/p&gt;
&lt;p&gt;Woah! &lt;strong&gt;2365&lt;/strong&gt; Speed Index! gatsbyjs.org—stop making everyone look so bad! 😎&lt;/p&gt;
&lt;p&gt;And notice how steep the visual progress line is. Gatsby knows where it’s going
and gets there quick.&lt;/p&gt;
&lt;p&gt;gatsbyjs.org starts rendering 2x faster than cnn.com and washingtonpost.com and
whereas downy.com starts rendering at the same time, its Speed Index is &lt;em&gt;2x&lt;/em&gt;
gatsbyjs.org due to the 12 seconds it takes to finish loading.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.034.png&quot; alt=&quot;reactnext-gatsby-performance.034&quot;&gt;&lt;/p&gt;
&lt;p&gt;I call slow TTIs the “silent killer” because it’s obvious to most people when
your Speed Index is slow. But slow TTI expresses itself in a 100 different UX
frustrations which might not have an obvious source which is why this number is
so important to track.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.035.png&quot; alt=&quot;reactnext-gatsby-performance.035&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.036.png&quot; alt=&quot;reactnext-gatsby-performance.036&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.037.png&quot; alt=&quot;reactnext-gatsby-performance.037&quot;&gt;&lt;/p&gt;
&lt;p&gt;Which is close to 1/2 of an eternity in web browsing time. And makes for a very
frustrating user experience. Tapping on things that don’t respond scores very
high on the Annoying UX metric.&lt;/p&gt;
&lt;h3 id=&quot;lets-review-our-scores&quot;&gt;&lt;a href=&quot;#lets-review-our-scores&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s review our scores&lt;/h3&gt;
&lt;h4 id=&quot;speed-index&quot;&gt;&lt;a href=&quot;#speed-index&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Speed Index&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;8098 — CNN.com&lt;/li&gt;
&lt;li&gt;5568 — downy.com&lt;/li&gt;
&lt;li&gt;7649 — washingtonpost.com&lt;/li&gt;
&lt;li&gt;2365 — gatsbyjs.org&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;time-to-interactive&quot;&gt;&lt;a href=&quot;#time-to-interactive&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Time to Interactive&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;32.1s — CNN.com&lt;/li&gt;
&lt;li&gt;14.2s — downy.com&lt;/li&gt;
&lt;li&gt;31.4s — washingtonpost.com&lt;/li&gt;
&lt;li&gt;4.4s — gatsbyjs.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.038.png&quot; alt=&quot;reactnext-gatsby-performance.038&quot;&gt;&lt;/p&gt;
&lt;p&gt;Let’s discuss some ways to improve performance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.039.png&quot; alt=&quot;reactnext-gatsby-performance.039&quot;&gt;&lt;/p&gt;
&lt;p&gt;Clickable
link—&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/&quot;&gt;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.040.png&quot; alt=&quot;reactnext-gatsby-performance.040&quot;&gt;&lt;/p&gt;
&lt;p&gt;If it doesn’t need done immediately, defer it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.041.png&quot; alt=&quot;reactnext-gatsby-performance.041&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.042.png&quot; alt=&quot;reactnext-gatsby-performance.042&quot;&gt;&lt;/p&gt;
&lt;p&gt;We won’t discuss code splitting in depth but the basic idea is &lt;em&gt;only load
JavaScript&lt;/em&gt; that is needed immediately on the initial landing page. Defer
loading JavaScript for other pages. Defer loading optional JavaScript for the
page (e.g. a widget down the page). And so on. The less JavaScript you load
upfront, the faster your users will able to start using your site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.043.png&quot; alt=&quot;reactnext-gatsby-performance.043&quot;&gt;&lt;/p&gt;
&lt;p&gt;There’s plenty of in-depth resources you can Google for.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.044.png&quot; alt=&quot;reactnext-gatsby-performance.044&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;…perhaps you were wondering when I’d get to this&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.045.png&quot; alt=&quot;reactnext-gatsby-performance.045&quot;&gt;&lt;/p&gt;
&lt;p&gt;What is the magic here? How are Gatsby sites consistently so fast?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.046.png&quot; alt=&quot;reactnext-gatsby-performance.046&quot;&gt;&lt;/p&gt;
&lt;p&gt;Most frameworks leave frontend performance to users to figure out. With Gatsby
it’s fundamental.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.047.png&quot; alt=&quot;reactnext-gatsby-performance.047&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.048.png&quot; alt=&quot;reactnext-gatsby-performance.048&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.049.png&quot; alt=&quot;reactnext-gatsby-performance.049&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.051.png&quot; alt=&quot;reactnext-gatsby-performance.051&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.052.png&quot; alt=&quot;reactnext-gatsby-performance.052&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.053.png&quot; alt=&quot;reactnext-gatsby-performance.053&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.059.png&quot; alt=&quot;reactnext-gatsby-performance.059&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.060.png&quot; alt=&quot;reactnext-gatsby-performance.060&quot;&gt;&lt;/p&gt;
&lt;p&gt;I mean I &lt;em&gt;love&lt;/em&gt; performance but even I really don’t want to be worrying about
this stuff when I’m pushing hard to finish up a project.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.061.png&quot; alt=&quot;reactnext-gatsby-performance.061&quot;&gt;&lt;/p&gt;
&lt;p&gt;As browsers and tooling gets more sophisticated, “best practices” for building
the most performant website changes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.062.png&quot; alt=&quot;reactnext-gatsby-performance.062&quot;&gt;&lt;/p&gt;
&lt;p&gt;Even really large sites with dozens of engineers get things wrong all the time.
For an entertaining &amp;#x26; informative examination of this, checkout
&lt;a href=&quot;http://samsaccone.com&quot;&gt;Sam Saccone’s blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.063.png&quot; alt=&quot;reactnext-gatsby-performance.063&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.064.png&quot; alt=&quot;reactnext-gatsby-performance.064&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.065.png&quot; alt=&quot;reactnext-gatsby-performance.065&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.066.png&quot; alt=&quot;reactnext-gatsby-performance.066&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.067.png&quot; alt=&quot;reactnext-gatsby-performance.067&quot;&gt;&lt;/p&gt;
&lt;p&gt;Gatsby is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Metacompiler&quot;&gt;metacompiler&lt;/a&gt; if you
will. It takes your site and from it compiles an optimized webpack/Babel
configuration for building the site. In addition, it generates a client runtime
to efficiently prefetch resources in the client so clicking around your site is
lightning fast.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.068.png&quot; alt=&quot;reactnext-gatsby-performance.068&quot;&gt;&lt;/p&gt;
&lt;p&gt;As I was prepping for my talk, Tom Dale of Ember, conveniently made similar
points in
&lt;a href=&quot;https://tomdale.net/2017/09/compilers-are-the-new-frameworks/&quot;&gt;his great blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.069.png&quot; alt=&quot;reactnext-gatsby-performance.069&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.070.png&quot; alt=&quot;reactnext-gatsby-performance.070&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.071.png&quot; alt=&quot;reactnext-gatsby-performance.071&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.072.png&quot; alt=&quot;reactnext-gatsby-performance.072&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;reactnext-gatsby-performance.073.png&quot; alt=&quot;reactnext-gatsby-performance.073&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;performance-is-hard-lets-make-gatsby-do-the-work&quot;&gt;&lt;a href=&quot;#performance-is-hard-lets-make-gatsby-do-the-work&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance is hard. Let’s make Gatsby do the work.&lt;/h2&gt;
&lt;p&gt;Building highly performant websites is a science in and of itself. Our goal with
Gatsby is to give you an approachable, highly productive modern development
environment that lets you concentrate on what matters to you—content, design,
and interactions—and we take care of turning your amazing site into the fastest
site possible.&lt;/p&gt;
&lt;p&gt;If you’ve been waiting to try out React, Gatsby is a great place to start! If
you’re struggling to make your React app fast, try switching to Gatsby! If
you’re tired of using technology X to build websites and have a huge secret
crush on React, well, Gatsby is waiting with open arms 🤗&lt;/p&gt;
&lt;p&gt;And lastly, &lt;em&gt;if you’re a performance-obsessed engineer like me, come help build
Gatsby&lt;/em&gt; and improve the performance of thousands (numbers growing quickly) of
Gatsby sites on the internet.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Creating a Blog with Gatsby]]></title><description><![CDATA[In this post, we'll take a deep dive into Gatsby and some of the new 1.0 features by creating a static blog. Let's get on it!]]></description><link>https://www.gatsbyjs.org/blog/2017-07-19-creating-a-blog-with-gatsby/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/2017-07-19-creating-a-blog-with-gatsby/</guid><dc:creator><![CDATA[Dustin Schau]]></dc:creator><content:encoded>&lt;p&gt;Gatsby is an incredible static site generator that allows for React to be used
as the underlying rendering engine to scaffold out a static site that truly has
all the benefits expected in a modern web application. It does this by rendering
dynamic React components into static HTML content via &lt;a href=&quot;https://facebook.github.io/react/docs/react-dom-server.html&quot;&gt;server side
rendering&lt;/a&gt; at build time. This means that your users get all
the benefits of a static site such as the ability to work without JavaScript,
search engine friendliness, speedy load times, etc. without losing the dynamism
and interactivity that is expected of the modern web. Once rendered to static
HTML, client-site React/JavaScript &lt;em&gt;can&lt;/em&gt; take over (if creating stateful
components or logic in &lt;code class=&quot;language-text&quot;&gt;componentDidMount&lt;/code&gt;) and add dynamism to the statically
generated content.&lt;/p&gt;
&lt;p&gt;Gatsby &lt;a href=&quot;/blog/gatsby-v1/&quot;&gt;recently released&lt;/a&gt; a v1.0.0 with a bunch of new
features, including (but not limited to) the ability to create content queries
with GraphQL, integration with various CMSs—including WordPress, Contentful,
Drupal, etc., and route based code splitting to keep the end-user experience as
snappy as possible. In this post, we’ll take a deep dive into Gatsby and some of
these new features by creating a static blog. Let’s get on it!&lt;/p&gt;
&lt;h2 id=&quot;getting-started&quot;&gt;&lt;a href=&quot;#getting-started&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;h3 id=&quot;installing-the-cli&quot;&gt;&lt;a href=&quot;#installing-the-cli&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing the CLI&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;npm install -g gatsby-cli&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Gatsby ships with a great CLI (command line interface) that contains the
functionality of scaffolding out a working site, as well as commands to help
develop the site once created.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby new personal-blog &amp;amp;&amp;amp; cd $_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command will create the folder &lt;code class=&quot;language-text&quot;&gt;personal-blog&lt;/code&gt; and then change into that
directory. A working &lt;code class=&quot;language-text&quot;&gt;gatsby&lt;/code&gt; statically generated application can now be
developed upon. The Gatsby CLI includes many common development features such as
&lt;code class=&quot;language-text&quot;&gt;gatsby build&lt;/code&gt; (build a production, statically generated version of the
project), &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt; (launch a hot-reload enabled web development server),
etc.&lt;/p&gt;
&lt;p&gt;We can now begin the exciting task of &lt;em&gt;actually&lt;/em&gt; developing on the site, and
creating a functional, modern blog. You’ll generally want to use &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt; to launch the local development server to validate functionality as we
progress through the steps.&lt;/p&gt;
&lt;h2 id=&quot;adding-necessary-plugins&quot;&gt;&lt;a href=&quot;#adding-necessary-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding necessary plugins&lt;/h2&gt;
&lt;p&gt;Gatsby supports a &lt;a href=&quot;/docs/plugins/&quot;&gt;rich plugin interface&lt;/a&gt;, and many incredibly
useful plugins have been authored to make accomplishing common tasks a breeze.
Plugins can be broken up into three main categories: &lt;strong&gt;functional&lt;/strong&gt; plugins,
&lt;strong&gt;source&lt;/strong&gt; plugins, and &lt;strong&gt;transformer&lt;/strong&gt; plugins.&lt;/p&gt;
&lt;h3 id=&quot;functional-plugins&quot;&gt;&lt;a href=&quot;#functional-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functional plugins&lt;/h3&gt;
&lt;p&gt;Functional plugins either implement some functionality (e.g. offline support,
generating a sitemap, etc.) &lt;em&gt;or&lt;/em&gt; they extend Gatsby’s webpack configuration
adding support for typescript, sass, etc.&lt;/p&gt;
&lt;p&gt;For this particular blog post, we want a single page app-like feel (without page
reloads), as well as the ability to dynamically change the &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; tag within
the &lt;code class=&quot;language-text&quot;&gt;head&lt;/code&gt; tags. As noted, the Gatsby plugin ecosystem is rich, vibrant, and
growing, so oftentimes a plugin already exists that solves the particular
problem you’re trying to solve. To address the functionality we want for &lt;em&gt;this&lt;/em&gt;
blog, we’ll use the following plugins:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/packages/gatsby-plugin-catch-links/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-catch-links&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;implements the history &lt;code class=&quot;language-text&quot;&gt;pushState&lt;/code&gt; API, and does not require a page reload
on navigating to a different page in the blog&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/packages/gatsby-plugin-react-helmet/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-react-helmet&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nfl/react-helmet&quot;&gt;react-helmet&lt;/a&gt; is a tool that allows for modification of the
&lt;code class=&quot;language-text&quot;&gt;head&lt;/code&gt; tags; Gatsby statically renders any of these &lt;code class=&quot;language-text&quot;&gt;head&lt;/code&gt; tag changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with the following command:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add gatsby-plugin-catch-links gatsby-plugin-react-helmet&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We’re using &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;yarn&lt;/a&gt;, but npm can just as easily be used with &lt;code class=&quot;language-text&quot;&gt;npm i --save [deps]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After installing each of these functional plugins, we’ll edit
&lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, which Gatsby loads at build-time to implement the exposed
functionality of the specified plugins.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Your Name - Blog`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    author&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Your Name`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-catch-links&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-react-helmet&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Without any additional work besides a &lt;code class=&quot;language-text&quot;&gt;yarn install&lt;/code&gt; and editing a config file,
we now have the ability to edit our site’s head tags, as well as implement a
single page app feel without reloads. Now let’s enhance the base functionality
by implementing a source plugin which can load blog posts from our local file
system.&lt;/p&gt;
&lt;h3 id=&quot;source-plugins&quot;&gt;&lt;a href=&quot;#source-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source plugins&lt;/h3&gt;
&lt;p&gt;Source plugins create &lt;em&gt;nodes&lt;/em&gt; which can then be transformed into a usable format
(if not already usable) by a transformer plugin. For instance, a typical
workflow often involves using
&lt;a href=&quot;/packages/gatsby-source-filesystem/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-filesystem&lt;/code&gt;&lt;/a&gt;, which loads files off of
disk—e.g. Markdown files—and then specifying a Markdown transformer to
transform the Markdown into HTML.&lt;/p&gt;
&lt;p&gt;Since the bulk of the blog’s content, and each article, will be authored in
Markdown, let’s add that &lt;a href=&quot;/packages/gatsby-source-filesystem/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-source-filesystem&lt;/code&gt;&lt;/a&gt;
plugin. Similarly to our previous step, we’ll install the plugin and then inject
into our &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;, like so:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add gatsby-source-filesystem&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// previous configuration&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-catch-links&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-react-helmet&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-filesystem`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;__dirname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pages&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Some explanation will be helpful here! An &lt;code class=&quot;language-text&quot;&gt;options&lt;/code&gt; object can be passed to a
plugin, and we’re passing the filesystem &lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; (i.e. where our Markdown files
will be located), and then a &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; for the source files. Now that Gatsby knows
about our source files, we can begin applying some useful transformers to
convert those files into usable data!&lt;/p&gt;
&lt;h3 id=&quot;transformer-plugins&quot;&gt;&lt;a href=&quot;#transformer-plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transformer plugins&lt;/h3&gt;
&lt;p&gt;As mentioned, a transformer plugin takes some underlying data format that is not
inherently usable in its current form (e.g. Markdown, json, yaml, etc.), and
transforms it into a format that Gatsby can understand, and that we can query
against with GraphQL. Jointly, the filesystem source plugin will load file nodes
(as Markdown) off of our filesystem, and then the Markdown transformer will take
over and convert to usable HTML.&lt;/p&gt;
&lt;p&gt;We’ll only be using one transformer plugin (for Markdown), so let’s get that
installed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;/packages/gatsby-transformer-remark/&quot;&gt;gatsby-transformer-remark&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uses the &lt;a href=&quot;https://github.com/wooorm/remark&quot;&gt;remark&lt;/a&gt; Markdown parser to transform .md files on disk
into HTML; additionally this transformer can optionally take plugins to
further extend functionality—e.g. add syntax highlighting with
&lt;code class=&quot;language-text&quot;&gt;gatsby-remark-prismjs&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;gatsby-remark-copy-linked-files&lt;/code&gt; to copy relative
files specified in markdown, &lt;code class=&quot;language-text&quot;&gt;gatsby-remark-images&lt;/code&gt; to compress images and
add responsive images with &lt;code class=&quot;language-text&quot;&gt;srcset&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The process should be familiar by now, install and then add to config.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;yarn add gatsby-transformer-remark&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;and editing &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// previous setup&lt;/span&gt;
    plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-catch-links&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-plugin-react-helmet&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-filesystem`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;__dirname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/src/pages`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;pages&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby-transformer-remark&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// just in case those previously mentioned remark plugins sound cool :)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Whew! Seems like a lot of set up, but collectively these plugins are going to
super charge Gatsby, and give us an incredibly powerful (yet relatively simple!)
development environment. We have one more set up step and it’s an easy one.
We’re simply going to create a Markdown file that will contain the content of
our first blog post. Let’s get to it.&lt;/p&gt;
&lt;h2 id=&quot;writing-our-first-markdown-blog-post&quot;&gt;&lt;a href=&quot;#writing-our-first-markdown-blog-post&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing our first Markdown blog post&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;gatsby-source-filesystem&lt;/code&gt; plugin we configured earlier expects our content
to be in &lt;code class=&quot;language-text&quot;&gt;src/pages&lt;/code&gt;, so that’s exactly where we’ll put it!&lt;/p&gt;
&lt;p&gt;Gatsby is not at all prescriptive in naming conventions, but a typical practice
for blog posts is to name the folder something like &lt;code class=&quot;language-text&quot;&gt;MM-DD-YYYY-title&lt;/code&gt;, e.g.
&lt;code class=&quot;language-text&quot;&gt;07-12-2017-hello-world&lt;/code&gt;. Let’s do just that, and create the folder
&lt;code class=&quot;language-text&quot;&gt;src/pages/07-12-2017-getting-started&lt;/code&gt;, and place an &lt;code class=&quot;language-text&quot;&gt;index.md&lt;/code&gt; inside!&lt;/p&gt;
&lt;p&gt;The content of this Markdown file will be our blog post, authored in Markdown
(of course!). Here’s what it’ll look like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;
      &lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token hr punctuation&quot;&gt;---&lt;/span&gt;
path: &quot;/hello-world&quot;
date: &quot;2017-07-12T17:12:33.962Z&quot;
&lt;span class=&quot;token title important&quot;&gt;title: &quot;My First Gatsby Post&quot;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/span&gt;

Oooooh-weeee, my first blog post!&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;&lt;em&gt;Fairly&lt;/em&gt; typical stuff, except for the block surrounded in dashes. What is that?
That is what is referred to as &lt;a href=&quot;https://jekyllrb.com/docs/frontmatter/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;frontmatter&lt;/code&gt;&lt;/a&gt;, and the contents of
the block can be used to inject React components with the specified data, e.g.
path, date, title, etc. Any piece of data can be injected here (e.g. tags,
sub-title,draft, etc.), so feel free to experiment and find what necessary
pieces of frontmatter are required to achieve an ideal blogging system for your
usage. One important note is that &lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; will be used when we dynamically create
our pages to specify the URL/path to render the file (in a later step!). In this
instance, &lt;code class=&quot;language-text&quot;&gt;http://localhost:8000/hello-world&lt;/code&gt; will be the path to this file.&lt;/p&gt;
&lt;p&gt;Now that we have created a blog post with frontmatter and some content, we can
begin actually writing some React components that will display this data!&lt;/p&gt;
&lt;h2 id=&quot;creating-the-react-template&quot;&gt;&lt;a href=&quot;#creating-the-react-template&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the (React) template&lt;/h2&gt;
&lt;p&gt;As Gatsby supports server side rendering (to string) of React components, we can
write our template in… you guessed it, React! (Or
&lt;a href=&quot;/packages/gatsby-plugin-preact/&quot;&gt;Preact&lt;/a&gt;, if that’s more your style)&lt;/p&gt;
&lt;p&gt;We’ll want to create the file &lt;code class=&quot;language-text&quot;&gt;src/templates/blog-post.js&lt;/code&gt; (please create the
&lt;code class=&quot;language-text&quot;&gt;src/templates&lt;/code&gt; folder if it does not yet exist!).&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-helmet&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// import &apos;../css/blog-post.css&apos;; // make it pretty!&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// this prop will be injected by the GraphQL query we&apos;ll write in a bit&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data &lt;span class=&quot;token comment&quot;&gt;// data.markdownRemark holds our post data&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post-container&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Helmet title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Your Blog Name - &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
          className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post-content&quot;&lt;/span&gt;
          dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Whoa, neat! This React component will be rendered to a static HTML string (for
each route/blog post we define), which will serve as the basis of our
routing/navigation for our blog.&lt;/p&gt;
&lt;p&gt;At this point, there is a reasonable level of confusion and “magic” occuring,
particularly with the props injection. What is &lt;code class=&quot;language-text&quot;&gt;markdownRemark&lt;/code&gt;? Where is this
&lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; prop injected from? All good questions, so let’s answer them by writing a
GraphQL query to seed our &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Template /&amp;gt;&lt;/code&gt; component with content!&lt;/p&gt;
&lt;h3 id=&quot;writing-the-graphql-query&quot;&gt;&lt;a href=&quot;#writing-the-graphql-query&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing the GraphQL query&lt;/h3&gt;
&lt;p&gt;Below the &lt;code class=&quot;language-text&quot;&gt;Template&lt;/code&gt; declaration, we’ll want to add a GraphQL query. This is an
incredibly powerful utility provided by Gatsby which lets us pick and choose
very simply the pieces of data that we want to display for our blog post. Each
piece of data our query selects will be injected via the &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; property we
specified earlier.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react-helmet&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;gatsby&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// import &apos;../css/blog-post.css&apos;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  data
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post-container&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Helmet title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Your Blog Name - &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post-content&quot;&lt;/span&gt; dangerouslySetInnerHTML&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  query BlogPostByPath($path: String!) {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    markdownRemark(frontmatter: { path: { eq: $path } }) {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      html
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      frontmatter {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        date(formatString: &quot;MMMM DD, YYYY&quot;)
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        path
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        title
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  }
&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;If you’re not familar with GraphQL, this may seem slightly confusing, but we can
break down what’s going down here piece by piece.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: To learn more about GraphQL, consider this &lt;a href=&quot;https://www.howtographql.com&quot;&gt;excellent
resource&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The underlying query name &lt;code class=&quot;language-text&quot;&gt;BlogPostByPath&lt;/code&gt; (note: these query names need to be
unique!) will be injected with the current path, e.g. the specific blog post we
are viewing. This path will be available as &lt;code class=&quot;language-text&quot;&gt;$path&lt;/code&gt; in our query. For instance,
if we were viewing our previously created blog post, the path of the file that
data will be pulled from will be &lt;code class=&quot;language-text&quot;&gt;/hello-world&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;markdownRemark&lt;/code&gt; will be the injected property available via the prop &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt;, as
named in the GraphQL query. Each property we pull via the GraphQL query will be
available under this &lt;code class=&quot;language-text&quot;&gt;markdownRemark&lt;/code&gt; property. For example, to access the
transformed HTML we would access the &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; prop via &lt;code class=&quot;language-text&quot;&gt;data.markdownRemark.html&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;frontmatter&lt;/code&gt;, is of course our data structure we provided at the beginning of
our Markdown file. Each key we define there will be available to be injected
into the query.&lt;/p&gt;
&lt;p&gt;At this point, we have a bunch of plugins installed to load files off of disk,
transform Markdown to HTML, and other utilities. We have a single, lonely
Markdown file that will be rendered as a blog post. Finally, we have a React
template for blog posts, as well as a wired up GraphQL query to query for a blog
post and inject the React template with the queried data. Next up:
programmatically creating the necessary static pages (and injecting the
templates) with Gatsby’s Node API. Let’s get down to it.&lt;/p&gt;
&lt;p&gt;An important note to make at this point is that the GraphQL query takes place at
&lt;strong&gt;build&lt;/strong&gt; time. The component is injected with the &lt;code class=&quot;language-text&quot;&gt;data&lt;/code&gt; prop that is seeded by
the GraphQL query. Unless anything dynamic (e.g. logic in &lt;code class=&quot;language-text&quot;&gt;componentDidMount&lt;/code&gt;,
state changes, etc.) occurs, this component will be pure, rendered HTML
generated via the React rendering engine, GraphQL, and Gatsby!&lt;/p&gt;
&lt;h2 id=&quot;creating-the-static-pages&quot;&gt;&lt;a href=&quot;#creating-the-static-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the static pages&lt;/h2&gt;
&lt;p&gt;Gatsby exposes a powerful Node API, which allows for functionality such as
creating dynamic pages (blog posts!), extending the babel or webpack configs,
modifying the created nodes or pages, etc. This API is exposed in the
&lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file in the root directory of your project—e.g. at the same
level as &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;. Each export found in this file will be parsed by
Gatsby, as detailed in its &lt;a href=&quot;/docs/node-apis/&quot;&gt;Node API specification&lt;/a&gt;. However, we only
care about one particular API in this instance, &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogPostTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/blog-post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Nothing super complex yet! We’re using the &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API (which Gatsby will
call at build time with injected parameters). We’re also grabbing the &lt;em&gt;path&lt;/em&gt; to
our blogPostTemplate we created earlier. Finally, we’re using the &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt;
action creator/function made available in boundActionCreators. Gatsby uses Redux
internally to manage its state, and &lt;code class=&quot;language-text&quot;&gt;boundActionCreators&lt;/code&gt; are simply the exposed
action creators of Gatsby, of which &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; is one of the action creators!
For the full list of exposed action creators, check out &lt;a href=&quot;/docs/bound-action-creators/&quot;&gt;Gatsby’s
documentation&lt;/a&gt;. We can now construct the GraphQL
query, which will fetch all of our Markdown posts.&lt;/p&gt;
&lt;h3 id=&quot;querying-for-posts&quot;&gt;&lt;a href=&quot;#querying-for-posts&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying for posts&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;path&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogPostTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/blog-post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`{
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    allMarkdownRemark(
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      sort: { order: DESC, fields: [frontmatter___date] }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      limit: 1000
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    ) {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      edges {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        node {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;          frontmatter {
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            path
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;          }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    }
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;  }`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We’re using GraphQL to get all Markdown nodes and making them available under
the &lt;code class=&quot;language-text&quot;&gt;allMarkdownRemark&lt;/code&gt; GraphQL property. Each exposed property (on &lt;code class=&quot;language-text&quot;&gt;node&lt;/code&gt;) is
made available for querying against. We’re effectively seeding a GraphQL
“database” that we can then query against via page-level GraphQL queries. One
note here is that the &lt;code class=&quot;language-text&quot;&gt;exports.createPages&lt;/code&gt; API expects a Promise to be
returned, so it works seamlessly with the &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; function, which returns a
Promise (although note a callback API is also available if that’s more your
thing).&lt;/p&gt;
&lt;p&gt;One cool note here is that the &lt;code class=&quot;language-text&quot;&gt;gatsby-plugin-remark&lt;/code&gt; plugin exposes some useful
data for us to query with GraphQL, e.g. &lt;code class=&quot;language-text&quot;&gt;excerpt&lt;/code&gt; (a short snippet to display as
a preview), &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; (a unique identifier for each post), etc.&lt;/p&gt;
&lt;p&gt;We now have our query written, but we haven’t yet programmatically created the
pages (with the &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; action creator). Let’s do that!&lt;/p&gt;
&lt;h3 id=&quot;creating-the-pages&quot;&gt;&lt;a href=&quot;#creating-the-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the pages&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;path&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blogPostTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/blog-post.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`{
    allMarkdownRemark(
      sort: { order: DESC, fields: [frontmatter___date] }
      limit: 1000
    ) {
      edges {
        node {
          frontmatter {
            path
          }
        }
      }
    }
  }`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

      result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; blogPostTemplate&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;            context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// additional data can be passed via context&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gatsby-highlight-code-line&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;We’ve now tied into the Promise chain exposed by the &lt;code class=&quot;language-text&quot;&gt;graphql&lt;/code&gt; query. The actual
posts are available via the path &lt;code class=&quot;language-text&quot;&gt;result.data.allMarkdownRemark.edges&lt;/code&gt;. Each
edge contains an internal node, and this node holds the useful data that we will
use to construct a page with Gatsby. Our GraphQL “shape” is directly reflected
in this data object, so each property we pulled from that query will be
available when we are querying in our GraphQL blog post template.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; API accepts an object which requires &lt;code class=&quot;language-text&quot;&gt;path&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;component&lt;/code&gt;
properties to be defined, which we have done above. Additionally, an optional
property &lt;code class=&quot;language-text&quot;&gt;context&lt;/code&gt; can be used to inject data and make it available to the blog
post template component via injected props (log out props to see each available
prop!). Each time we build with Gatsby, &lt;code class=&quot;language-text&quot;&gt;createPage&lt;/code&gt; will be called, and Gatsby
will create a static HTML file of the path we specified in the post’s
frontmatter—the result of which will be our stringified and parsed React
template injected with the data from our GraphQL query. Whoa, it’s actually
starting to come together!&lt;/p&gt;
&lt;p&gt;We can run &lt;code class=&quot;language-text&quot;&gt;yarn develop&lt;/code&gt; at this point, and then navigate to
&lt;code class=&quot;language-text&quot;&gt;http://localhost:8000/hello-world&lt;/code&gt; to see our first blog post, which should
look something like below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./my-first-blog-post.png&quot; alt=&quot;My first blog post with Gatsby&quot;&gt;&lt;/p&gt;
&lt;p&gt;At this point, we’ve created a single static blog post as an HTML file, which
was created by a React component and several GraphQL queries. However, this
isn’t a blog! We can’t expect our users to guess the path of each post, we need
to have an index or listing page, where we display each blog post, a short
snippet, and a link to the full blog post. Wouldn’t you know it, we can do this
incredibly easily with Gatsby, using a similar strategy as we used in our blog
template, e.g. a React component and a GraphQL query.&lt;/p&gt;
&lt;h2 id=&quot;creating-the-blog-listing&quot;&gt;&lt;a href=&quot;#creating-the-blog-listing&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating the Blog Listing&lt;/h2&gt;
&lt;p&gt;I won’t go into quite as much detail for this section, because we’ve already
done something very similar for our blog template! Look at us, we’re pro
Gatsby-ers at this point!&lt;/p&gt;
&lt;p&gt;Gatsby has a standard for “listing pages,” and they’re placed in the root of our
filesystem we specified in &lt;code class=&quot;language-text&quot;&gt;gatsby-source-filesystem&lt;/code&gt;, e.g.
&lt;code class=&quot;language-text&quot;&gt;src/pages/index.js&lt;/code&gt;. So create that file if it does not exist, and let’s get it
working! Additionally note that any static JavaScript files (that export a React
component!) will get a corresponding static HTML file. For instance, if we
create &lt;code class=&quot;language-text&quot;&gt;src/pages/tags.js&lt;/code&gt;, the path &lt;code class=&quot;language-text&quot;&gt;http://localhost:8000/tags/&lt;/code&gt; will be
available within the browser and the statically generated site.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; graphql &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Helmet &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-helmet&quot;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// import &apos;../css/index.css&apos;; // add some style if you want!&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;Index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; data &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; edges&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; posts &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allMarkdownRemark
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-posts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;posts
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;post &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; node&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; post &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;blog-post-preview&quot;&lt;/span&gt; key&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
                &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h2&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
              &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;excerpt&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query IndexQuery {
    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {
      edges {
        node {
          excerpt(pruneLength: 250)
          id
          frontmatter {
            title
            date(formatString: &quot;MMMM DD, YYYY&quot;)
            path
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;OK! So we’ve followed a similar approach to our blog post template, so this
should hopefully seem pretty familiar. Once more we’re exporting &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;
which contains a GraphQL query. Note that we’re pulling a slightly different
data set, specifically we are pulling an &lt;code class=&quot;language-text&quot;&gt;excerpt&lt;/code&gt; of 250 characters rather than
the full HTML, as well as we are formatting the pulled date with a format
string! GraphQL is awesome.&lt;/p&gt;
&lt;p&gt;The actual React component is fairly trivial, but one important note should be
made. It’s important that when linking to internal content, i.e. other blog
links, that you should always use &lt;code class=&quot;language-text&quot;&gt;Link&lt;/code&gt; from &lt;code class=&quot;language-text&quot;&gt;gatsby&lt;/code&gt;. Gatsby does not work if pages
are not routed via this utility. Additionally, this utility also works with
&lt;code class=&quot;language-text&quot;&gt;pathPrefix&lt;/code&gt;, which allows for a Gatsby site to be deployed a non-root domain.
This is useful if this blog will be hosted on something like GitHub Pages, or
perhaps hosted at &lt;code class=&quot;language-text&quot;&gt;/blog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now this is getting exciting and it feels like we’re finally getting somewhere!
At this point, we have a fully functional blog generated by Gatsby, with real
content authored in Markdown, a blog listing, and the ability to navigate around
in the blog. If you run &lt;code class=&quot;language-text&quot;&gt;yarn develop&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;http://localhost:8000&lt;/code&gt; should display a
preview of each blog post, and each post title links to the content of the blog
post. A real blog!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./blog-listing.png&quot; alt=&quot;Blog listing&quot;&gt;&lt;/p&gt;
&lt;p&gt;It’s now on you to make something incredible with the knowledge you’ve gained in
following along with this tutorial! You can not only make it pretty and style
with CSS (or &lt;a href=&quot;https://github.com/styled-components/styled-components&quot;&gt;styled-components&lt;/a&gt;!), but you could improve it
functionally by implementing some of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add a tag listing and tag search page&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hint: the &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API in &lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file is useful here, as is
frontmatter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;adding navigation between a specific blog post and past/present blog posts
(the &lt;code class=&quot;language-text&quot;&gt;context&lt;/code&gt; API of &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; is useful here), etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With our new found knowledge of Gatsby and its API, you should feel empowered to
begin to utilize Gatsby to its fullest potential. A blog is just the starting
point; Gatsby’s rich ecosystem, extensible API, and advanced querying
capabilities provide a powerful toolset for building truly incredible,
performant sites.&lt;/p&gt;
&lt;p&gt;Now go build something great.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./dream-bigger.jpeg&quot; alt=&quot;Dream Bigger&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;links&quot;&gt;&lt;a href=&quot;#links&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dschau/gatsby-blog-starter-kit&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;@dschau/gatsby-blog-starter-kit&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A working repo demonstrating all of the aforementioned functionality of
Gatsby&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/DSchau/create-gatsby-blog-post&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;@dschau/create-gatsby-blog-post&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A utility and CLI I created to scaffold out a blog post following the
predefined Gatsby structure with frontmatter, date, path, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/dschau/blog&quot;&gt;Source code for my blog&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The source code for my blog, which takes the gatsby-starter-blog-post
(previous link), and expands upon it with a bunch of features and some more
advanced functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Announcing Gatsby 1.0.0 🎉🎉🎉]]></title><description><![CDATA[Gatsby is your friendly, blazing fast static site generator for React. And after nearly a year of research, prototyping, and testing, Gatsby v1 is ready for action.]]></description><link>https://www.gatsbyjs.org/blog/gatsby-v1/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/gatsby-v1/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;Gatsby is your friendly, blazing fast static site generator for React. And after
nearly a year of research, prototyping, and testing, Gatsby v1 is ready for
action.&lt;/p&gt;
&lt;p&gt;Static site generators offer many benefits over traditional dynamic website
frameworks — &lt;em&gt;better performance, higher security, lower cost of scaling, and a
better developer experience.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In v1, Gatsby blazes new ground for static site generators by enabling rich
integrations with CMSs like Contentful, Wordpress, and Drupal, and a suite of
features, on by default, that make your sites startlingly fast — route-based
code splitting, service workers, offline support, and more.&lt;/p&gt;
&lt;p&gt;Gatsby means no more compromising between developers, designers, and authors.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;😲Gatsby now integrates multiple data sources, splits code, supports offline, lots new plugins... amazing!!  &lt;a href=&quot;https://twitter.com/hashtag/reactjs?src=hash&quot;&gt;#reactjs&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/staticsitegenerator?src=hash&quot;&gt;#staticsitegenerator&lt;/a&gt; &lt;a href=&quot;https://t.co/i80wYgnwhb&quot;&gt;https://t.co/i80wYgnwhb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Christian Mund (@krist) &lt;a href=&quot;https://twitter.com/krist/status/882953204119556097&quot;&gt;July 6, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I made this website with &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;@gatsbyjs&lt;/a&gt; and I&amp;#39;m totally in love with it &lt;a href=&quot;https://t.co/TZA064O3s0&quot;&gt;https://t.co/TZA064O3s0&lt;/a&gt; React SSGs are the future&lt;/p&gt;&amp;mdash; Charlotte Dann (@charlotte_dann) &lt;a href=&quot;https://twitter.com/charlotte_dann/status/882596284116480000&quot;&gt;July 5, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Super excited about the next version of &lt;a href=&quot;https://twitter.com/gatsbyjs&quot;&gt;@gatsbyjs&lt;/a&gt;. The first GraphQL-powered static site generator as far as I know! &lt;a href=&quot;https://t.co/poh4S9RSJH&quot;&gt;https://t.co/poh4S9RSJH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sacha Greif (@SachaGreif) &lt;a href=&quot;https://twitter.com/SachaGreif/status/841058065856192512&quot;&gt;March 12, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;gatsby-is-growing-like-crazy&quot;&gt;&lt;a href=&quot;#gatsby-is-growing-like-crazy&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby is growing like crazy&lt;/h2&gt;
&lt;p&gt;In the last year, Gatsby community and usage have exploded. Milestones reached:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;196 code contributors on GitHub (with many more helping in
&lt;a href=&quot;https://discord.gg/0ZcbPKXt5bVoxkfV&quot;&gt;our chat room on Discord&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;10,000 stars on GitHub&lt;/li&gt;
&lt;li&gt;1000 followers on Twitter&lt;/li&gt;
&lt;li&gt;500,000 NPM downloads (100,000 in the last month!!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;./images/gatsby-npm-downloads.png&quot; alt=&quot;Gatsby npm downloads year over year&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;cool-sites-built-with-gatsby&quot;&gt;&lt;a href=&quot;#cool-sites-built-with-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cool sites built with Gatsby&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Segment &lt;a href=&quot;https://segment.com/blog/&quot;&gt;relaunched their blog on Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The life insurance startup Fabric built their
&lt;a href=&quot;https://meetfabric.com/&quot;&gt;marketing site &lt;em&gt;and&lt;/em&gt; web app using Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JavaScript consultancy
&lt;a href=&quot;https://formidable.com/&quot;&gt;Formidable built their website on Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;images/site-screenshots.png&quot; alt=&quot;screenshots of above sites&quot;&gt;&lt;/p&gt;
&lt;p&gt;And you’re on of course a Gatsby website 😛&lt;/p&gt;
&lt;h2 id=&quot;the-three-questions-that-guide-gatsbys-design&quot;&gt;&lt;a href=&quot;#the-three-questions-that-guide-gatsbys-design&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The three questions that guide Gatsby’s design&lt;/h2&gt;
&lt;p&gt;Gatsby started, like all the best projects do, as a spark of curiosity — “I
wonder if I could create a tool for building static websites with React?“.&lt;/p&gt;
&lt;p&gt;I’d been using React to build web apps for 1.5 years at that point and loved how
easy React’s component model made it to build complex apps and wanted that same
model for building websites.&lt;/p&gt;
&lt;p&gt;In a week of intense coding, I prototyped the first version of Gatsby
(&lt;a href=&quot;https://www.youtube.com/watch?v=RFkNRKL6ZoE&quot;&gt;see my talk at React conf to hear more of the story&lt;/a&gt;)
and open sourced this 2 years ago.&lt;/p&gt;
&lt;p&gt;1000s of sites and 10,000 stars later, it seems clear that tools for building
static React sites are useful.&lt;/p&gt;
&lt;p&gt;But in many conversations among community members building Gatsby sites, two
more questions kept coming up.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How could we &lt;em&gt;query&lt;/em&gt; data from &lt;em&gt;anywhere&lt;/em&gt; and have that data show up in our
pages &lt;strong&gt;without&lt;/strong&gt; any custom scripting?&lt;/li&gt;
&lt;li&gt;How should a website framework work for an &lt;em&gt;internet dominated by smartphones
on unreliable networks&lt;/em&gt; — an internet vastly different and larger than the
one frameworks were designed for a decade ago?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;plugin-system&quot;&gt;&lt;a href=&quot;#plugin-system&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin system&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;./images/container-ship-leaving.jpg&quot; alt=&quot;container ship leaving port symbolizing of course GATSBY 1.0 HAS SHIPPED!!!&quot;&gt;&lt;em&gt;Gatsby
v1 heads out to sea delivering components to ports far and wide&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The first building block for answering to these questions was a
&lt;a href=&quot;/docs/plugins/&quot;&gt;plugin system&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Wordpress &amp;#x26; Jekyll are both great examples of open source communities with
robust plugins ecosystems.&lt;/p&gt;
&lt;p&gt;Plugins help accelerate developing websites as you can build on what others have
done and help collaborate with others on basic building blocks&lt;/p&gt;
&lt;p&gt;Gatsby’s plugin system lets you hook into
&lt;a href=&quot;/docs/gatsby-lifecycle-apis/&quot;&gt;Gatsby’s lifecycle APIs&lt;/a&gt; everywhere from events
during the bootstrap and build processes and in the browser.&lt;/p&gt;
&lt;p&gt;There are already many
&lt;a href=&quot;/docs/plugins/#official-plugins&quot;&gt;official Gatsby plugins&lt;/a&gt; built—all distributed
as individual NPM packages. It is easy to create your own plugins for internal
projects and for contributing back to Gatsby.&lt;/p&gt;
&lt;p&gt;Plugins can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add support for webpack loaders such as Sass, Less&lt;/li&gt;
&lt;li&gt;add drop-in support for lightweight React-compatible frameworks
&lt;a href=&quot;https://preactjs.com/&quot;&gt;Preact&lt;/a&gt; and &lt;a href=&quot;https://infernojs.org/&quot;&gt;Inferno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;add a sitemap or RSS feed&lt;/li&gt;
&lt;li&gt;add &lt;a href=&quot;/packages/gatsby-plugin-google-analytics/&quot;&gt;Google Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…and much more!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;graphql-based-data-processing-layer&quot;&gt;&lt;a href=&quot;#graphql-based-data-processing-layer&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GraphQL-based data processing layer&lt;/h2&gt;
&lt;p&gt;Plugins also drive the new GraphQL data processing layer. This new system
enables rich integrations with CMSs like Contentful, Wordpress, and Drupal along
with other remote and local sources.&lt;/p&gt;
&lt;p&gt;In Gatsby v0, (like pretty much every static site generator) data was processed
then &lt;em&gt;pushed&lt;/em&gt; into templates to be rendered into HTML. This is a straight-forward pattern
and works great for many use cases. But when you start working on more complex
sites, you really start to miss the flexibility of a database-driven site. With
a database, all your data is available to query against in any fashion you’d
like. Whatever bits of data you need to assemble a page, you can &lt;em&gt;pull&lt;/em&gt; in. You
want to create author pages showing their bio and last 5 posts? It’s just a
query away.&lt;/p&gt;
&lt;p&gt;We wanted this same flexibility for Gatsby. So for 1.0, the Gatsby data team has
built a new data processing layer which converts your data (whether from local
files or remote sources) into a &lt;em&gt;GraphQL schema&lt;/em&gt; which you can query against
like a database.&lt;/p&gt;
&lt;p&gt;Every Gatsby page can have a GraphQL query which tells Gatsby what data is
required for that page. The data layer runs the GraphQL queries during
development and at build time and writes out a JSON file with the result of the
query. This JSON file is then loaded alongside React code and injected into the
React component as props.&lt;/p&gt;
&lt;p&gt;Because we know at build-time what data is needed for every page, we can easily
pre-fetch page data meaning even very complex, data-heavy pages load almost
instantly.&lt;/p&gt;
&lt;p&gt;This pattern of &lt;em&gt;colocating&lt;/em&gt; your queries next to your views is copied from the
&lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay data framework from Facebook&lt;/a&gt;.
Colocation makes it easy to fully understand your views as everything necessary
for that view is fully defined there.&lt;/p&gt;
&lt;p&gt;An example of how this works in practice.&lt;/p&gt;
&lt;p&gt;Say we had a markdown file that looked like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;markdown&quot;&gt;
      &lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token hr punctuation&quot;&gt;---&lt;/span&gt;
title: A sweet post
&lt;span class=&quot;token title important&quot;&gt;date: &quot;2017-02-23&quot;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/span&gt;

This is my sweet blog post. &lt;span class=&quot;token bold&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;**&lt;/span&gt;Cool!&lt;span class=&quot;token punctuation&quot;&gt;**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;In our site, we would write a React component which acts as a template for all
the blog posts. Included with the component is an exported &lt;code class=&quot;language-text&quot;&gt;pageQuery&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// A basic React component for rendering a blog page.&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BlogPostTemplate&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;frontmatter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;small&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;
          &lt;span class=&quot;token attr-name&quot;&gt;dangerouslySetInnerHTML&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            __html&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;markdownRemark&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; BlogPostTemplate

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; graphql&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query BlogPost($slug: String!) {
    markdownRemark(slug: { eq: $slug }) {
      # Get the markdown body compiled to HTML.
      html
      frontmatter {
        title
        # Transform the date at build time!
        date(formatString: &quot;MMM D, YYYY&quot;)
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;All data sourcing and transforming is plugin-driven. So in time, any imaginable
data source and potential ways of transforming its data will be an &lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt;
away.&lt;/p&gt;
&lt;p&gt;For the markdown ecosystem there’s already a robust set of plugins including
&lt;a href=&quot;/packages/gatsby-remark-prismjs/&quot;&gt;adding syntax highlighting with PrismJS&lt;/a&gt; and
&lt;a href=&quot;/packages/gatsby-remark-images/&quot;&gt;resizing images referenced in markdown files&lt;/a&gt;
so they’re mobile ready.&lt;/p&gt;
&lt;p&gt;There’s also source plugins written for
&lt;a href=&quot;/packages/gatsby-source-contentful/&quot;&gt;Contentful&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-source-wordpress/&quot;&gt;Wordpress&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-source-drupal/&quot;&gt;Drupal&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-source-hacker-news/&quot;&gt;Hacker News&lt;/a&gt; (really 😛), and more as
well as transformer plugins for
&lt;a href=&quot;/packages/gatsby-transformer-remark/&quot;&gt;markdown&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-transformer-json/&quot;&gt;JSON&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-transformer-yaml/&quot;&gt;YAML&lt;/a&gt;,
&lt;a href=&quot;/packages/gatsby-transformer-documentationjs/&quot;&gt;JSDoc&lt;/a&gt;, React prop-types, and
&lt;a href=&quot;/packages/gatsby-plugin-sharp/&quot;&gt;images&lt;/a&gt;. We’re collecting a list of additional
source/transformer plugins that’d be useful to have over at
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/1199&quot;&gt;https://github.com/gatsbyjs/gatsby/issues/1199&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These plugins are easy to write (somewhat similar to webpack loaders) so we
expect to see the list of plugins grow rapidly.&lt;/p&gt;
&lt;h2 id=&quot;building-for-the-next-billion-internet-users&quot;&gt;&lt;a href=&quot;#building-for-the-next-billion-internet-users&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building for the next billion internet users&lt;/h2&gt;
&lt;p&gt;As
&lt;a href=&quot;http://ben-evans.com/benedictevans/2015/5/13/the-smartphone-and-the-sun&quot;&gt;Benedict Evans has noted&lt;/a&gt;,
the next billion people poised to come online will be using the internet almost
exclusively through smartphones.&lt;/p&gt;
&lt;p&gt;Smartphones with decent specs (as good or better than the Moto G4), a great
browser, but &lt;em&gt;without&lt;/em&gt; a reliable internet connection.&lt;/p&gt;
&lt;p&gt;Gatsby uses modern web performance ideas (e.g. the
&lt;a href=&quot;/docs/prpl-pattern/&quot;&gt;PRPL Pattern&lt;/a&gt;) developed by the Google Chrome Developer
Relations team and others to help websites work well on modern browsers with
unreliable networks.&lt;/p&gt;
&lt;p&gt;Sites built with Gatsby run as much as possible in the client so regardless of
the network conditions—good, bad, or nonexistent—things will keep working. When
a page loads, Gatsby immediately starts prefetching resources for pages nearby
so that when a user clicks on a link, the new page loads instantly.&lt;/p&gt;
&lt;p&gt;Many of the top e-commerce websites in areas where people are coming online for
the first time are developing their websites using these techniques.&lt;/p&gt;
&lt;p&gt;Read Google’s case studies on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/flipkart&quot;&gt;Flipkart (India)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/konga&quot;&gt;Konga (Nigeria)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/housing&quot;&gt;Housing.com (India)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;service-worker-and-offline-support&quot;&gt;&lt;a href=&quot;#service-worker-and-offline-support&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service worker and offline support&lt;/h2&gt;
&lt;p&gt;Service workers are perhaps the most exciting technology that’s come to the web
in the past several years. It makes possible (finally!) sophisticated client
caching plus true offline support. We’ve added excellent support to Gatsby for
Service Workers and a great offline experience. If you’re using Chrome or
Firefox, this site loads and works offline! &lt;em&gt;Service workers make your site much
more resilient against bad networks&lt;/em&gt;. If someone loads your site on a train and
goes through a tunnel, you won’t lose them as they’ll still be able to keep
clicking around.&lt;/p&gt;
&lt;h2 id=&quot;route-based-code-splitting&quot;&gt;&lt;a href=&quot;#route-based-code-splitting&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Route-based code splitting&lt;/h2&gt;
&lt;p&gt;Many sites generate one JavaScript bundle for the &lt;em&gt;entire&lt;/em&gt; site. Which means
someone loading your frontpage loads far more code than is necessary which is
bad then users get frustrated when site isn’t responsive to their clicks and
touches while the code loads.&lt;/p&gt;
&lt;p&gt;Gatsby 1.0 initially only loads the code necessary for the page you’re on. As
you navigate around, Gatsby loads in the code needed for each route.&lt;/p&gt;
&lt;p&gt;This means that one page with heavy imports:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; d3 &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;d3&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; threejs &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react-threejs&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;…won’t affect the performance of the rest of the site.&lt;/p&gt;
&lt;p&gt;This is particularly helpful for teams of people collaborating on a site with
pages with very different technical and business requirements. Different parts
of the site can evolve independently of each other.&lt;/p&gt;
&lt;p&gt;One client I’m working with on Gatsby 1.0 (a stealth startup in San Francisco)
is using Gatsby to build both their marketing site &lt;em&gt;and&lt;/em&gt; SaaS app within the
&lt;em&gt;same Gatsby codebase&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The marketing pages of their site are built using markdown and React components
along with a modern css-in-js library
&lt;a href=&quot;https://github.com/threepointone/glamor&quot;&gt;Glamor&lt;/a&gt; for styling. The SaaS portion
uses &lt;a href=&quot;http://redux.js.org/&quot;&gt;Redux&lt;/a&gt; to communicate with their Django API.&lt;/p&gt;
&lt;p&gt;The marketing portion of the site loads quickly with minimal JavaScript. When a
potential customer goes to sign-up for the app, there’s no &lt;em&gt;awkward jump from
the marketing website to the web app&lt;/em&gt;—just a simple page change which seamlessly
loads in the needed JavaScript. The &lt;em&gt;team is sharing components and styles
across the site&lt;/em&gt; without stepping on each others shoes as they rapidly iterate
on features.&lt;/p&gt;
&lt;h2 id=&quot;ending-note&quot;&gt;&lt;a href=&quot;#ending-note&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ending note&lt;/h2&gt;
&lt;p&gt;Gatsby is just getting started. We’re really looking forward to working with
you! &lt;a href=&quot;https://github.com/gatsbyjs/gatsby&quot;&gt;See you on GitHub!&lt;/a&gt; 👋&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Gatsby's first beta release]]></title><description><![CDATA[We shipped today Gatsby's first beta for 1.0! Gatsby is a modern blazing-fast static site generator for React.js…]]></description><link>https://www.gatsbyjs.org/blog/gatsby-first-beta-release/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/gatsby-first-beta-release/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;We shipped today Gatsby’s first beta for 1.0! Gatsby is a modern blazing-fast
static site generator for React.js.&lt;/p&gt;
&lt;p&gt;Ten months and one day ago
&lt;a href=&quot;https://www.bricolage.io/gatsby-open-source-work/&quot;&gt;I announced I was now working full-time on Gatsby&lt;/a&gt;
followed a month later by posting
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/issues/419&quot;&gt;an issue kickstarting the rewrite of Gatsby for a 1.0 release&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Since then 40 contributors have pushed 723 commits contributing to 23 alpha
releases before today’s first beta release. It’s been a really enjoyable
experience watching Gatsby v1 take form and helping shape that and the growing
community around it.&lt;/p&gt;
&lt;h3 id=&quot;whats-part-of-v1&quot;&gt;&lt;a href=&quot;#whats-part-of-v1&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What’s part of v1&lt;/h3&gt;
&lt;p&gt;From Gatsby’s initial release just over two years ago, Gatsby has let you build
static websites using React.js components as well as markdown, JSON, and YAML.&lt;/p&gt;
&lt;p&gt;Building on this strong foundation, v1 adds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New plugin architecture (to date 45+ plugins have been written)&lt;/li&gt;
&lt;li&gt;New data layer which lets you integrate data from both remote (CMSs, APIs,
etc.) and local sources&lt;/li&gt;
&lt;li&gt;Progressive web app features such as automatic code and data splitting (by
route), prefetching, and service worker and offline-first support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;special-thanks-to&quot;&gt;&lt;a href=&quot;#special-thanks-to&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special thanks to&lt;/h2&gt;
&lt;p&gt;Getting to this point wouldn’t have happened without the help of many
individuals and companies.&lt;/p&gt;
&lt;h3 id=&quot;individuals&quot;&gt;&lt;a href=&quot;#individuals&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Individuals&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/0x80&quot;&gt;Thijs Koerselman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquense&quot;&gt;Jason Quense&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fabien0102&quot;&gt;Fabien Bernard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/scottyeck&quot;&gt;Scotty Eckenthal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nicholaswyoung&quot;&gt;Nicholas Young&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fk&quot;&gt;Florian Kissling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jbolda&quot;&gt;Jacob Bolda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/noahlange&quot;&gt;Noah Lange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danielfarrell&quot;&gt;Daniel Farrell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mericsson&quot;&gt;Marcus Ericsson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SachaG&quot;&gt;Sacha Greif&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gutenye&quot;&gt;Guten Ye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rstacruz&quot;&gt;Rico Sta. Cruz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;companies-who-sponsored-time-working-on-gatsby-v1&quot;&gt;&lt;a href=&quot;#companies-who-sponsored-time-working-on-gatsby-v1&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Companies who sponsored time working on Gatsby v1.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.thinkmill.com.au/&quot;&gt;Thinkmill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://expo.io/&quot;&gt;Expo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://about.sourcegraph.com/&quot;&gt;Sourcegraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://segment.com&quot;&gt;Segment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://meetfabric.com/&quot;&gt;Meetfabric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://x-team.com/&quot;&gt;X-Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;our-open-source-hostingtesting-infastructure-providers&quot;&gt;&lt;a href=&quot;#our-open-source-hostingtesting-infastructure-providers&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our open source hosting/testing infastructure providers&lt;/h3&gt;
&lt;p&gt;It’d be impossible to write open source code without the generous support of
these infrastructure providers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt; &lt;em&gt;Awesome static site continuous delivery &amp;#x26;
hosting&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt; &lt;em&gt;Test runner in the cloud&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.appveyor.com/&quot;&gt;Appveyor&lt;/a&gt; &lt;em&gt;Windows test runner in the cloud&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;changelog-since-100-alpha20&quot;&gt;&lt;a href=&quot;#changelog-since-100-alpha20&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog since 1.0.0-alpha.20&lt;/h2&gt;
&lt;h3 id=&quot;added&quot;&gt;&lt;a href=&quot;#added&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Added&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Allow for gatsby-remark-smartypants options
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1166&quot;&gt;#1166&lt;/a&gt; @mitchejj&lt;/li&gt;
&lt;li&gt;New design (for gatsbyjs.org) + new home page
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1170&quot;&gt;#1170&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Add ability to locally define plugins
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1126&quot;&gt;#1126&lt;/a&gt; @0x80&lt;/li&gt;
&lt;li&gt;Add rough draft for docs for creating source plugins
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1159&quot;&gt;#1159&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Optimizations around prefetching page resources
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1133&quot;&gt;#1133&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Redux example site &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1081&quot;&gt;#1081&lt;/a&gt;
@scottyeck&lt;/li&gt;
&lt;li&gt;Sitemap Generator Plugin &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1115&quot;&gt;#1115&lt;/a&gt;
@nicholaswyoung&lt;/li&gt;
&lt;li&gt;Add documentation to gatsby-remark-prism @kyleamathews&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changed&quot;&gt;&lt;a href=&quot;#changed&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Move all filter operators for connections under a top-level “filter” field
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1177&quot;&gt;#1177&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Change &lt;code class=&quot;language-text&quot;&gt;linkPrefix&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;pathPrefix&lt;/code&gt; and add an example site
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1155&quot;&gt;#1155&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Make the plugin options for remark plugins the second argument (like
everywhere else) &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1167&quot;&gt;#1167&lt;/a&gt;
@kyleamathews&lt;/li&gt;
&lt;li&gt;Start using next instead of canary in example sites for package versions
@kyleamathews&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixed&quot;&gt;&lt;a href=&quot;#fixed&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fixed&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Fix graphql compiler on typescript
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/949&quot;&gt;#949&lt;/a&gt; @fabien0102&lt;/li&gt;
&lt;li&gt;Replace react.createClass with ES6 classes in examples html.js, add PropTypes
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1169&quot;&gt;#1169&lt;/a&gt; @abachuk&lt;/li&gt;
&lt;li&gt;Fix windows build pull &lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1158&quot;&gt;#1158&lt;/a&gt;
@kyleamathews&lt;/li&gt;
&lt;li&gt;Use custom delimiter when flattening example values for enum fields so easy to
convert back @kyleamathews&lt;/li&gt;
&lt;li&gt;gatsby-remark-responsive-image: use span instead of div
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1151&quot;&gt;#1151&lt;/a&gt; @rstacruz&lt;/li&gt;
&lt;li&gt;Add check that we can actually find a linked image file node @kyleamathews&lt;/li&gt;
&lt;li&gt;Ignore SVGs in gatsby-remark-responsive-image
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1157&quot;&gt;#1157&lt;/a&gt; @fk&lt;/li&gt;
&lt;li&gt;Replace using levelup for caching with lowdb to avoid native dependency
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1142&quot;&gt;#1142&lt;/a&gt; @kyleamathews&lt;/li&gt;
&lt;li&gt;Fix Appveyor bug regarding build all examples on release
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/1118&quot;&gt;#1118&lt;/a&gt; @jbolda&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Gatsbygram Case Study]]></title><description><![CDATA[Gatsbygram  is a clone of Instagram built with
Gatsby v1. The
 source code for Gatsbygram 
lives in the Gatsby monorepo. See the…]]></description><link>https://www.gatsbyjs.org/blog/gatsbygram-case-study/</link><guid isPermaLink="false">https://www.gatsbyjs.org/blog/gatsbygram-case-study/</guid><dc:creator><![CDATA[Kyle Mathews]]></dc:creator><content:encoded>&lt;p&gt;&lt;a href=&quot;https://gatsbygram.gatsbyjs.org&quot;&gt;Gatsbygram&lt;/a&gt; is a clone of Instagram built with
Gatsby v1.&lt;/p&gt;
&lt;p&gt;The
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/tree/master/examples/gatsbygram&quot;&gt;source code for Gatsbygram&lt;/a&gt;
lives in the Gatsby monorepo. See the instructions at the end for how to start
playing with the code!&lt;/p&gt;
&lt;div&gt;
&lt;video controls=&quot;controls&quot; autoplay=&quot;true&quot; loop=&quot;true&quot;&gt;
  &lt;source type=&quot;video/mp4&quot; src=&quot;/gatsbygram.mp4&quot;&gt;&lt;/source&gt;
  &lt;p&gt;Your browser does not support the video element.&lt;/p&gt;
&lt;/video&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-gatsby&quot;&gt;&lt;a href=&quot;#what-is-gatsby&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Gatsby&lt;/h2&gt;
&lt;p&gt;Gatsby is a JavaScript web framework that let’s you build fast, dynamic,
mobile-ready websites &lt;em&gt;without&lt;/em&gt; an advanced degree in JavaScript wizardry.&lt;/p&gt;
&lt;p&gt;It combines the fast performance of static websites with the powerful
abstractions, tools, and client capabilities of the React.js world.&lt;/p&gt;
&lt;h3 id=&quot;gatsby-is-fast&quot;&gt;&lt;a href=&quot;#gatsby-is-fast&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby is fast&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/docs/prpl-pattern/&quot;&gt;Gatsby automatically optimizes your site for the modern web&lt;/a&gt;.
You provide pages and Gatsby stitches them together so they load as fast as
possible.&lt;/p&gt;
&lt;p&gt;As proof of this, Gatsbygram loads &lt;em&gt;2-3x faster&lt;/em&gt; than the real Instagram site.&lt;/p&gt;
&lt;p&gt;I tested Gatsbygram and Instagram on
&lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;webpagetest.org&lt;/a&gt; using a simulated 3G network and
a Moto G4 smartphone—a budget Android typical of many lower-end phones used
today. The median
&lt;a href=&quot;https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index&quot;&gt;speed index&lt;/a&gt;
score for &lt;a href=&quot;http://www.webpagetest.org/result/170310_XP_11AS/&quot;&gt;Gatsbygram&lt;/a&gt; was
3151 vs. 8251 for
&lt;a href=&quot;http://www.webpagetest.org/result/170310_PC_11AZ/&quot;&gt;Instagram&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsbygram-instagram.png&quot; alt=&quot;gatsbygram vs. instagram filmstrip&quot;&gt;&lt;em&gt;Filmstrip of
Gatsbygram (top) and Instagram (bottom) loading on webpagetest.org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The second repeat view is even faster for Gatsbygram as it now loads from its
service worker. It has &lt;em&gt;pixels on the screen in under a 1/2 second on a budget
Android device&lt;/em&gt;! And for both the initial and repeat view, Gatsbygram &lt;em&gt;finishes&lt;/em&gt;
loading a full second before Instagram gets started.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gatsbygram-instagram-repeat-load.png&quot; alt=&quot;gatsbygram vs. instagram filmstrip repeat
load&quot;&gt;&lt;em&gt;Filmstrip
of a repeat view of Gatsbygram (top) and Instagram (bottom) loading on
webpagetest.org&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The difference in Time to Interactivity (TTI) (measure of how long before the
user can actually interact with the page e.g. click on a link) between the sites
is just as dramatic. Gatsbygram’s TTI is 6.1s vs 14.1s for Instagram.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webpagetest.org/result/170310_XP_11AS/&quot;&gt;Gatsbygram’s webpagetest results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webpagetest.org/result/170310_PC_11AZ/&quot;&gt;Instagram’s webpagetest results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;gatsby-is-built-for-the-next-billion-internet-users&quot;&gt;&lt;a href=&quot;#gatsby-is-built-for-the-next-billion-internet-users&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby is built for the next billion internet users&lt;/h3&gt;
&lt;p&gt;As
&lt;a href=&quot;http://ben-evans.com/benedictevans/2015/5/13/the-smartphone-and-the-sun&quot;&gt;Benedict Evans has noted&lt;/a&gt;,
the next billion people poised to come online will be using the internet almost
exclusively through smartphones.&lt;/p&gt;
&lt;p&gt;Smartphones with decent specs (as good or better than the Moto G4), a great
browser, but &lt;em&gt;without&lt;/em&gt; a reliable internet connection.&lt;/p&gt;
&lt;p&gt;Gatsby uses modern web performance ideas (e.g.
&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/prpl-pattern/&quot;&gt;PRPL&lt;/a&gt;)
developed by the Google Chrome Developer Relations team and others to help
websites work well on modern browsers with unreliable networks.&lt;/p&gt;
&lt;p&gt;Sites built with Gatsby run as much as possible in the client so regardless of
the network conditions—good, bad, or nonexistent—things will keep working.&lt;/p&gt;
&lt;p&gt;Many of the top e-commerce websites in areas where people are coming online for
the first time are developing their websites using these techniques.&lt;/p&gt;
&lt;p&gt;Read Google’s case studies on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/flipkart&quot;&gt;Flipkart (India)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/konga&quot;&gt;Konga (Nigeria)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/showcase/2016/housing&quot;&gt;Housing.com (India)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;gatsby-is-simple&quot;&gt;&lt;a href=&quot;#gatsby-is-simple&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gatsby is simple&lt;/h3&gt;
&lt;p&gt;Modern JavaScript websites are too complex to rely on developers always
configuring things correctly. Gatsby simplifies website development by
extracting configuration out of your site and moving it into the framework and
community plugins.&lt;/p&gt;
&lt;p&gt;You give Gatsby React.js components, data, and styles and Gatsby gives you back
an optimized website.&lt;/p&gt;
&lt;p&gt;Gatsbygram is a completely vanilla Gatsby site. Its optimizations are from the
framework.&lt;/p&gt;
&lt;p&gt;Gatsby includes a full modern JavaScript toolchain (Babel/webpack/Uglify) with
optimized production builds and an innovative &lt;em&gt;declarative&lt;/em&gt; asset pipeline.&lt;/p&gt;
&lt;p&gt;For Gatsbygram, Gatsby generates over &lt;em&gt;1000&lt;/em&gt; image thumbnails for responsive
images without &lt;em&gt;any&lt;/em&gt; custom scripting by leveraging the Gatsby image processing
plugin &lt;a href=&quot;/packages/gatsby-transformer-sharp/&quot;&gt;gatsby-transformer-sharp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Stop wasting time and build something!&lt;/p&gt;
&lt;h2 id=&quot;app-structure&quot;&gt;&lt;a href=&quot;#app-structure&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App structure&lt;/h2&gt;
&lt;p&gt;All static site generators create a set of files that determine the routing in
your site. Typically, you define the output file structure (and thus URL
structure) of your site by way of the input structure. For example the input
structure:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;my-site/
  index.md
  blogs/
    blog1.md&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;…would be transformed to:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;my-site/
  index.html
  blogs/
    blog1.html&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;This is fine at first, but can be limiting. For example, in Gatsbygram, we have
a JSON data blob scraped from an Instagram user profile. From this we want to
generate a page for each image. We couldn’t do this with a typical static site
generator, but Gatsby lets you define routes programmatically through the
&lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API using any data you have available.&lt;/p&gt;
&lt;p&gt;Here is how we define pages from our JSON data for Gatsbygram at build time in
the site’s
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/gatsbygram/gatsby-node.js&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gatsby-node.js&lt;/code&gt; file&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; _ &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`lodash`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; Promise &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`bluebird`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`path`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; slug &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`slug`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; slash &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`slash`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Implement the Gatsby API “createPages”. This is&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// called after the Gatsby bootstrap is finished so you have&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// access to any information necessary to programmatically&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// create pages.&lt;/span&gt;
exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;createPages&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; graphql&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; boundActionCreators &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; createPage &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; boundActionCreators

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reject&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// The “graphql” function allows us to run arbitrary&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// queries against this Gatsbygram&apos;s graphql schema. Think of&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// it like Gatsbygram has a built-in database constructed&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// from static data that you can run queries against.&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Post is a data node type derived from data/posts.json&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// which is created when scrapping Instagram. “allPostsJson”&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// is a &quot;connection&quot; (a GraphQL convention for accessing&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// a list of nodes) gives us an easy way to query all&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Post nodes.&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token function&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
          {
            allPostsJson(limit: 1000) {
              edges {
                node {
                  id
                }
              }
            }
          }
        `&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;errors&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// Create image post pages.&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; postTemplate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`src/templates/post-page.js`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// We want to create a detailed page for each&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// Instagram post. Since the scrapped Instagram data&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// already includes an ID field, we just use that for&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// each page&apos;s path.&lt;/span&gt;
        _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;allPostsJson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; edge &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// Gatsby uses Redux to manage its internal state.&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// Plugins and sites can use functions like &quot;createPage&quot;&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// to interact with Gatsby.&lt;/span&gt;
          &lt;span class=&quot;token function&quot;&gt;createPage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// Each page is required to have a `path` as well&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// as a template component. The `context` is&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// optional but is often necessary so the template&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// can query data specific to each page.&lt;/span&gt;
            path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            component&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;slash&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;postTemplate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            context&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              id&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; edge&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;using-templates&quot;&gt;&lt;a href=&quot;#using-templates&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using templates&lt;/h2&gt;
&lt;p&gt;Gatsby uses standard React.js components to render pages. When you define a page
in the &lt;code class=&quot;language-text&quot;&gt;createPages&lt;/code&gt; API, you specify its component. Those components, usually
called templates, get reused with page-specific data to generate the different
pages.&lt;/p&gt;
&lt;p&gt;As you can see above, when defining a page, we can set “context” data, which is
passed as a &lt;code class=&quot;language-text&quot;&gt;prop&lt;/code&gt; to the component and as a
&lt;a href=&quot;http://graphql.org/learn/queries/#variables&quot;&gt;GraphQL variable&lt;/a&gt; in our &lt;code class=&quot;language-text&quot;&gt;GraphQL&lt;/code&gt;
query. For the
”&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/gatsbygram/src/templates/post-page.js&quot;&gt;post template&lt;/a&gt;”,
we pass the id to the post. Below we use that id to query our &lt;code class=&quot;language-text&quot;&gt;GraphQL&lt;/code&gt; schema
and return a fully formed page:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; PostDetail &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../components/post-detail&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PostTemplate&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// PostDetail is used for this detail page and&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// also in the modal.&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;PostDetail&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;posts&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; PostTemplate

&lt;span class=&quot;token comment&quot;&gt;// The post template&apos;s GraphQL query. Notice the “id”&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// variable which is passed in. We set this on the page&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// context in gatsby-node.js.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// All GraphQL queries in Gatsby are run at build-time and&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// loaded as plain JSON files so have minimal client cost.&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; pageQuery &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`
  query PostPage($id: String!) {
    # Select the post which equals this id.
    posts(id: { eq: $id }) {
      # Specify the fields from the post we need.
      username
      avatar
      likes
      id
      text
      # Date fields have special arguments. This one computes
      # how many weeks have passed since the post was created.
      # All calculations like this (like all GraphQL query
      # activity) happens at build-time! So has minimal cost
      # for the client.
      weeksAgo: time(difference: &quot;weeks&quot;)
      image {
        children {
          ... on ImageSharp {
            # Here we query for *multiple* image thumbnails to be
            # created. So with no effort on our part, 100s of
            # thumbnails are created. This makes iterating on
            # designs effortless as we simply change the args
            # for the query and we get new thumbnails.
            big: fluid(maxWidth: 640) {
              src
              srcSet
            }
          }
        }
      }
    }
  }
`&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;creating-reactjs-component-pages&quot;&gt;&lt;a href=&quot;#creating-reactjs-component-pages&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating React.js component pages&lt;/h2&gt;
&lt;p&gt;In addition to creating pages for our Instagram photos, we want to make an index
page for browsing all photos. To build this index page, Gatsby lets us create
pages using React.js components.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;pages/
  index.js
  about.js&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;These React component pages can query the Gatsbygram GraphQL schema for data and
are automatically converted into their own pages at &lt;code class=&quot;language-text&quot;&gt;gatsbygram.gatsbyjs.org/&lt;/code&gt;
and &lt;code class=&quot;language-text&quot;&gt;gatsbygram.gatsbyjs.org/about/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Gatsbygram’s &lt;code class=&quot;language-text&quot;&gt;about.js&lt;/code&gt; is a plain React component with no query. &lt;code class=&quot;language-text&quot;&gt;index.js&lt;/code&gt; is
more complex. It queries for thumbnails for all images and has an infinite
scroll implementation to lazy load in image thumbnails.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/gatsbygram/src/pages/index.js&quot;&gt;Read pages/index.js on GitHub&lt;/a&gt;
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/gatsbygram/src/pages/about.js&quot;&gt;Read pages/about.js on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-layout-component&quot;&gt;&lt;a href=&quot;#the-layout-component&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Layout Component&lt;/h2&gt;
&lt;p&gt;Each Gatsby site has a top-level layout component at &lt;code class=&quot;language-text&quot;&gt;layouts/index.js&lt;/code&gt;. This
layout component is used on every page of your site so can contain things like
your header, footer, and default page structure. It is also used as the
”&lt;a href=&quot;https://developers.google.com/web/updates/2015/11/app-shell&quot;&gt;app shell&lt;/a&gt;” when
loading your site from a service worker.&lt;/p&gt;
&lt;p&gt;A small layout component might look something like this.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Link &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby&quot;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Layout&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Link&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Home&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Link&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;/* Render children pages */&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;props&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; Layout&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Every page will be rendered as children of the &lt;code class=&quot;language-text&quot;&gt;Layout&lt;/code&gt; component:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;Page&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;Layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Gatsbygram’s layout component is somewhat more complicated than most sites as it
has logic to show clicked images in either a modal on larger screens or on their
own page on smaller screens.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/blob/master/examples/gatsbygram/src/layouts/index.js&quot;&gt;Read Gatsbygram’s Layout component on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;client-routing-and-pre-caching&quot;&gt;&lt;a href=&quot;#client-routing-and-pre-caching&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client routing and pre-caching&lt;/h2&gt;
&lt;p&gt;Gatsby loads first a static server-rendered HTML page and then the JavasScript
to convert the site into a web application. Which means that clicking around the
site doesn’t require a page reload. Gatsby &lt;em&gt;pre-caches&lt;/em&gt; code and data needed for
other pages so that clicking on a link loads the next page instantly.&lt;/p&gt;
&lt;p&gt;All the setup for this is handled behind the scenes. Gatsby uses
&lt;a href=&quot;https://github.com/ReactTraining/react-router&quot;&gt;React Router&lt;/a&gt; under the hood but
generates all the configuration for you.&lt;/p&gt;
&lt;p&gt;Normally page resources are pre-cached with a service worker. But as several
browsers (Safari/Microsoft Edge) still don’t support Service Workers, the
&lt;a href=&quot;/packages/gatsby/&quot;&gt;Gatsby &lt;code class=&quot;language-text&quot;&gt;&amp;lt;Link&amp;gt;&lt;/code&gt; component&lt;/a&gt; pre-caches resources for
pages it links to by loading them into memory.&lt;/p&gt;
&lt;h2 id=&quot;plugins&quot;&gt;&lt;a href=&quot;#plugins&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Gatsby has always had a rich set of lifecycle APIs to allow you to hook into
various events during development, building, and in the client.&lt;/p&gt;
&lt;p&gt;Gatsby 1.0 adds new APIs and also adds a
&lt;a href=&quot;/docs/plugins/&quot;&gt;new plugin architecture&lt;/a&gt;. So functionality can now be extracted
from sites and made reusable. Most of the new functionality in Gatsby 1.0 is
powered by plugins.&lt;/p&gt;
&lt;p&gt;Plugins are added to a site in its &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;. Here’s what Gatsbygram’s
config file looks like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;
      &lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Gatsbygram`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  plugins&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;/*
     * Gatsby&apos;s data processing layer begins with “source”
     * plugins.  You can source data nodes from anywhere but
     * most sites, like Gatsbygram, will include data from
     * the filesystem so we start here with
     * “gatsby-source-filesystem”.
     *
     * A site can have as many instances of
     * gatsby-source-filesystem as you need.  Each plugin
     * instance is configured with a root path where it then
     * recursively reads in files and adds them to the data
     * tree.
     */&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-source-filesystem`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`data`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        path&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;__dirname&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/data`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin exposes helper functions for processing&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// images with the NPM package “sharp”. It&apos;s used by&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// several other plugins.&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-sharp`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin identifies file nodes that are images and&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// transforms these to create new “ImageSharp” nodes.&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// With them you can resize images and&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// generate responsive image thumbnails.&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-transformer-sharp`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin transforms JSON file nodes.&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-transformer-json`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin sets up the popular css-in-js library&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Glamor. It handles adding a Babel plugin and webpack&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// configuration as well as setting up optimized server&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// rendering and client re-hydration.&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-glamor`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin takes your configuration and generates a&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// web manifest file so Gatsbygram can be added to your&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// homescreen on Android.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-manifest`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Gatsbygram`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        short_name&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Gatsbygram`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        start_url&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`/`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        background_color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`#f7f7f7`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        theme_color&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`#191919`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        display&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`minimal-ui`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin generates a service worker and AppShell&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// html file so the site works offline and is otherwise&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// resistant to bad networks. Works with almost any&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// site!&lt;/span&gt;
    &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-offline`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// This plugin sets up Google Analytics for you.&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      resolve&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`gatsby-plugin-google-analytics`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      options&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        trackingId&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`UA-91652198-1`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h2 id=&quot;styles&quot;&gt;&lt;a href=&quot;#styles&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Styles&lt;/h2&gt;
&lt;p&gt;Gatsbygram uses two popular and complementary css-in-js libraries,
&lt;a href=&quot;https://github.com/KyleAMathews/typography.js&quot;&gt;Typography.js&lt;/a&gt; and
&lt;a href=&quot;https://github.com/threepointone/glamor&quot;&gt;Glamor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Typography.js is a powerful toolkit for building websites with beautiful design.&lt;/p&gt;
&lt;p&gt;Gatsbygram uses Typography.js to generate the &lt;em&gt;global&lt;/em&gt; styles for the site
helping set the overall feel of the design.&lt;/p&gt;
&lt;p&gt;Glamor lets you write &lt;em&gt;real CSS&lt;/em&gt; in JavaScript inline in your React.js
components. It is used for &lt;em&gt;component&lt;/em&gt; styles.&lt;/p&gt;
&lt;p&gt;Typography.js exposes two helper JavaScript functions, &lt;code class=&quot;language-text&quot;&gt;rhythm&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;scale&lt;/code&gt; to
help keep your design in sync as you make changes. Instead of using hard-coded
spacing values (which break as soon as you change your global theme), you use
the Typography.js helper functions e.g.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;
      &lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; rhythm&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; scale &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;../utils/typography&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SampleComponent&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token comment&quot;&gt;/* The “css” prop works the same as the built-in “style” prop */&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        css&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// 1 rhythm is equal to the height of the line-height of&lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// normal body text.&lt;/span&gt;
          padding&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rhythm&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;
          &lt;span class=&quot;token attr-name&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// Make this h1 slightly larger than normal.&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// By default, h1 is set to a scale value of 1.&lt;/span&gt;
            &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          My sweet title
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello friends&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Together they allow you to quickly iterate on designs.&lt;/p&gt;
&lt;p&gt;They also contribute to Gatsbygram’s excellent loading speed. The holy grail of
CSS performance is &lt;em&gt;inlined critical CSS&lt;/em&gt;. Meaning a) only ship a page with the
CSS necessary to render that page and b) inline it in the &lt;code class=&quot;language-text&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; instead of
putting it in a separate file. There are various tools to make this happen but
they tend to involve extensive configuration and heavy post-processing.&lt;/p&gt;
&lt;p&gt;But with Typography.js and Glamor you get optimized CSS with no tedious,
error-prone bookkeeping. Typography.js (by definition) generates only global
styles so its styles are included on every page. Glamor includes some
&lt;a href=&quot;https://github.com/threepointone/glamor/blob/master/docs/server.md&quot;&gt;clever server-rendering optimizations&lt;/a&gt;
which I’ve implemented in the
&lt;a href=&quot;/packages/gatsby-plugin-glamor/&quot;&gt;Gatsby Glamor plugin&lt;/a&gt; where it automatically
extracts out the CSS used &lt;em&gt;in components on the page being server rendered&lt;/em&gt; and
automatically inlines those styles in the generated HTML page.&lt;/p&gt;
&lt;p&gt;Super fast CSS by default. 👏👏👏&lt;/p&gt;
&lt;h2 id=&quot;creating-your-own-gatsbygram&quot;&gt;&lt;a href=&quot;#creating-your-own-gatsbygram&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating your own Gatsbygram&lt;/h2&gt;
&lt;p&gt;It’s easy to create your own “Gatsbygram” site from an Instagram account.&lt;/p&gt;
&lt;h3 id=&quot;instructions-on-setting-up-your-own-gatsbygram-site&quot;&gt;&lt;a href=&quot;#instructions-on-setting-up-your-own-gatsbygram-site&quot; aria-hidden=&quot;true&quot; class=&quot;anchor&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instructions on setting up your own Gatsbygram site.&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Clone the Gatsby repo.&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone -b 1.0 git@github.com:gatsbyjs/gatsby.git
&lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; gatsby/examples/gatsbygram
&lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Remove the committed scrapped Instagram data&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;rm&lt;/span&gt; -r data

&lt;span class=&quot;token comment&quot;&gt;# Scrape a new account&lt;/span&gt;
node scrape.js INSTAGRAM_USERNAME

&lt;span class=&quot;token comment&quot;&gt;# Wait for pictures to download...&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Start the Gatsby development server. The initial&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# run will take extra time as it processes&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# images the first time.&lt;/span&gt;
gatsby develop&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;While writing this post I scraped a few accounts and published their resulting
“Gatsbygram” sites:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://iceland-gatsbygram.netlify.com&quot;&gt;https://iceland-gatsbygram.netlify.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tinyhouses-gatsbygram.netlify.com&quot;&gt;https://tinyhouses-gatsbygram.netlify.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;With thanks to Sam Bhagwatt, Sunil Pai, Nolan Lawson, Nik Graf, Jeff Posnick,
and Addy Osmani for their reviews.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;And a special thanks to Kristo Jorgenson for his
&lt;a href=&quot;https://github.com/gatsbyjs/gatsby/pull/708&quot;&gt;refactor of the “App structure” section&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content:encoded></item></channel></rss>