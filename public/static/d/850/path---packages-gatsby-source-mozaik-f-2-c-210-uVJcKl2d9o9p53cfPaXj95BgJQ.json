{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-source-mozaik","description":"Gatsby source plugin for building static websites using Mozaik CMS as a data source.","keywords":["data","gatsby","gatsby-plugin","mozaik","mozaikio","graphql","source"],"lastPublisher":{"name":"frikille","avatar":"https://gravatar.com/avatar/cbfd08a2a9c62b5e69b9747a50a29002"},"repository":{"url":"https://github.com/mozaikio/gatsby-source-mozaik"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-source-mozaik\"><a href=\"#gatsby-source-mozaik\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-mozaik</h1>\n<p>Source plugin for pulling data from a <a href=\"https://www.mozaik.io\">Mozaik</a> endpoint into <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<ol>\n<li><code class=\"language-text\">yarn add gatsby-source-mozaik</code> or <code class=\"language-text\">npm i gatsby-source-mozaik</code></li>\n<li>Add reference in your Gatsby config plugins section to <code class=\"language-text\">gatsby-source-mozaik</code>. See example below.</li>\n<li>Run <code class=\"language-text\">gatsby develop</code></li>\n</ol>\n<h2 id=\"usage\"><a href=\"#usage\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Make sure that <code class=\"language-text\">gatsby-source-mozaik</code> plugin is referenced in you <code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-mozaik`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      endpoint<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`https://api.mozaik.io/[your-project-name]`</span></span><span class=\"token punctuation\">,</span>\n      accessToken<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`your-access-token`</span></span><span class=\"token punctuation\">,</span>\n      query<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`\n        query documentsQuery($types: [DocumentContentTypeEnum] $pageSize: Int $page: Int) {\n          documents(types: $types pageSize: $pageSize page: $page) {\n            pagination {\n              page\n              pageCount\n            }\n            items {\n              id\n              contentType\n              slug\n            }\n          }\n        }\n      `</span></span><span class=\"token punctuation\">,</span>\n      variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        types<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        pageSize<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        page<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      fragments<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre>\n      </div>\n<h3 id=\"plugin-options\"><a href=\"#plugin-options\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Plugin options</h3>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Value</th>\n<th>Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">endpoint</code></td>\n<td>Your mozaik api endpoint: <code class=\"language-text\">https://api.mozaik.io/[your-project-name]</code></td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">accessToken</code></td>\n<td>The access token for authorizing against the api</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">query</code></td>\n<td>The graphql query to execute. You should use the sample documents query and only amend it.</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">variables</code></td>\n<td>Variables to use in the graphql query</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">variables.types</code></td>\n<td>An array of string that defines the content types you want to get from the api</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">variables.pageSize</code></td>\n<td>Number of items to download in one batch</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">variables.page</code></td>\n<td>The page number</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">fragments</code></td>\n<td>An array of string that defines the fields you want to query on each content type</td>\n<td>No</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"how-to-write-a-query\"><a href=\"#how-to-write-a-query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to write a query</h2>\n<p>Letâ€™s say you have created a blog project using the sample blog template on Mozaik. You will have 3 different content types (the enum name in your GraphQL schema):</p>\n<ul>\n<li>Homepage (HOMEPAGE)</li>\n<li>Post (POST)</li>\n<li>Author (AUTHOR)</li>\n</ul>\n<p>And you only implement the homepage and the post page components.</p>\n<p>To create the query you have to add the following plugin options:</p>\n<h3 id=\"variables\"><a href=\"#variables\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variables</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">variables<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  types<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'HOMEPAGE'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  page<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  pageSize<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h3 id=\"query-and-fragments\"><a href=\"#query-and-fragments\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query and Fragments</h3>\n<p>In Mozaik each document implements the <code class=\"language-text\">DocumentInterface</code> type, and because of this the result of the <code class=\"language-text\">documents</code> query returns an array of <code class=\"language-text\">DocumentInterface</code> object. To be able to query specific fields on each document, you have to define a <code class=\"language-text\">fragment</code> for each content type. Although you can do this by inlining the fragments in the query itself, we highly recommend to add every fragment in the <code class=\"language-text\">fragments</code> plugin option in you config. You can read more about interfaces and fragments in the <a href=\"http://graphql.org/learn/schema/#interfaces\">GraphQL documentation</a></p>\n<p>First letâ€™s add the fragment definitions:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">fragments<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token template-string\"><span class=\"token string\">`fragment HomepageDetails on HomepageDocument {\n    title\n    tagline\n    headerImage {\n      ...HeaderImageFragment\n    }\n    topPosts {\n      items {\n        ...PostDetails\n      }\n    }\n  }`</span></span>\n  <span class=\"token template-string\"><span class=\"token string\">`fragment PostDetails on PostDocument {\n    title\n    slug\n    date\n    postContent {\n      html\n    }\n    postAuthor {\n      name\n    }\n    headerImage {\n      ...HeaderImageFragment\n    }\n  }`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token string\">`fragment HeaderImageFragment on Asset {\n    url\n    thumbnailUrl\n    caption\n  }`</span></span>\n<span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<p>Update the default query to add the fragments above:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> documentsQuery<span class=\"token punctuation\">(</span><span class=\"token variable\">$types</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>DocumentContentTypeEnum<span class=\"token punctuation\">]</span> <span class=\"token variable\">$pageSize</span><span class=\"token punctuation\">:</span> Int <span class=\"token variable\">$page</span><span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  documents<span class=\"token punctuation\">(</span><span class=\"token attr-name\">types</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$types</span> <span class=\"token attr-name\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$pageSize</span> <span class=\"token attr-name\">page</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pagination <span class=\"token punctuation\">{</span>\n      page\n      pageCount\n    <span class=\"token punctuation\">}</span>\n    items <span class=\"token punctuation\">{</span>\n      id\n      contentType\n      slug\n      <span class=\"token operator\">...</span>PostDetails\n      <span class=\"token operator\">...</span>HomepageDetails\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>And thatâ€™s it! Youâ€™re ready to run <code class=\"language-text\">gatsby develop</code> and load all your documents. If you open the graphql ide that comes with Gatsby you can query your Post documents by running the <code class=\"language-text\">allPosts</code> query (or the <code class=\"language-text\">allHomepage</code> query for the Homepage document).</p>\n<h2 id=\"contributing\"><a href=\"#contributing\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contributing</h2>\n<ol>\n<li><code class=\"language-text\">cd</code> to the Gatsby project youâ€™ve set up in which you want to test your changes of the plugin code, or clone <a href=\"https://github.com/mozaikio/mozaik-gatsby-example\"><code class=\"language-text\">mozaikio/mozaik-gatsby-example</code></a></li>\n<li>If you cloned the example or previously installed the plugin through <code class=\"language-text\">yarn</code> or <code class=\"language-text\">npm</code>, run <code class=\"language-text\">yarn remove gatsby-source-mozaik</code> or <code class=\"language-text\">npm r gatsby-source-mozaik</code></li>\n<li><code class=\"language-text\">mkdir plugins</code> if it does not exist in your Gatsby project yet and <code class=\"language-text\">cd</code> into it</li>\n<li>The path should now be similar to this: <code class=\"language-text\">~/projects/mozaik-gatsby-website/plugins/</code></li>\n<li>run <code class=\"language-text\">git clone https://github.com/mozaikio/gatsby-source-mozaik.git</code></li>\n<li><code class=\"language-text\">cd gatsby-source-mozaik</code></li>\n<li>run <code class=\"language-text\">yarn</code> or <code class=\"language-text\">yarn &amp;&amp; yarn watch</code> in <code class=\"language-text\">gatsby-source-mozaik</code> pluginâ€™s folder for auto-rebuilding the plugin after you make changes to it (you need to do this only during development)</li>\n<li>Make sure plugin is referenced in your Gatsby config (see above at <a href=\"#usage\">Usage</a>)</li>\n<li>From there you can <code class=\"language-text\">cd ../.. &amp;&amp; yarn &amp;&amp; yarn develop</code> to test</li>\n</ol>","timeToRead":4}}}},"pageContext":{"slug":"/packages/gatsby-source-mozaik/","id":"fd32e62b-6466-5b57-a71b-04a10b72c983"}}