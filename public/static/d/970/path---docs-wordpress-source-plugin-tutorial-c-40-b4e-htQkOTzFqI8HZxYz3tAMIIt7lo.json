{"data":{"markdownRemark":{"html":"<h2 id=\"how-to-create-a-site-with-data-pulled-from-wordpress\"><a href=\"#how-to-create-a-site-with-data-pulled-from-wordpress\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to create a site with data pulled from WordPress</h2>\n<h3 id=\"what-this-tutorial-covers\"><a href=\"#what-this-tutorial-covers\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What this tutorial covers:</h3>\n<p>In this tutorial, you will install the <code class=\"language-text\">gatsby-source-wordpress</code> plugin in order to pull blog and image data from a WordPress install into your Gatsby site and render that data. This <a href=\"https://github.com/gatsbyjs/gatsby/tree/master/examples/using-wordpress\">Gatsby + WordPress demo site</a> shows you the source code for an example site similar to what you’re going to be building in this tutorial, although it’s missing the cool images you’ll be adding in the next part of this tutorial, <a href=\"/docs/image-tutorial/\">Adding Images to a WordPress Site</a>. :D</p>\n<h4 id=\"but-do-you-prefer-graphql\"><a href=\"#but-do-you-prefer-graphql\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>But do you prefer GraphQL?</h4>\n<p>If you prefer using GraphQL, there’s a <a href=\"https://github.com/wp-graphql/wp-graphql\">wp-graphql</a> plugin to easily expose both default and custom data in WordPress.</p>\n<p>The same authentication schemes supported by the WP-API are supported in wp-graphql, which can be used with the <a href=\"/packages/gatsby-source-graphql/\">gatsby-source-graphql</a> plugin.</p>\n<h2 id=\"why-go-through-this-tutorial\"><a href=\"#why-go-through-this-tutorial\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why go through this tutorial?</h2>\n<p>While each source plugin may operate differently from others, it’s worth going through this tutorial because you will almost definitely be using a source plugin in most Gatsby sites you build. This tutorial will walk you through the basics of connecting your Gatsby site to a CMS, pulling in data, and using React to render that data in beautiful ways on your site.</p>\n<p>If you’d like to look at the growing number source plugins available to you, search for “source” in the <a href=\"/plugins/?=source\">Gatsby plugin library</a>.</p>\n<h3 id=\"creating-a-site-with-the-code-classlanguage-textgatsby-source-wordpresscode-plugin\"><a href=\"#creating-a-site-with-the-code-classlanguage-textgatsby-source-wordpresscode-plugin\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a site with the <code class=\"language-text\">gatsby-source-wordpress</code> plugin</h3>\n<p>Create a new Gatsby project and change directories into the new project you just created:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">gatsby new wordpress-tutorial-site\n<span class=\"token function\">cd</span> wordpress-tutorial-site</code></pre>\n      </div>\n<p>Install the <code class=\"language-text\">gatsby-source-wordpress</code> plugin. For extra reading on the plugin’s features and examples of GraphQL queries not included in this tutorial, see the <a href=\"/packages/gatsby-source-wordpress/?=wordpress\"><code class=\"language-text\">gatsby-source-wordpress</code> plugin’s READme file</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save gatsby-source-wordpress</code></pre>\n      </div>\n<p>Add the <code class=\"language-text\">gatsby-source-wordpress</code> plugin to <code class=\"language-text\">gatsby-config.js</code> using the following code, which you can also find in the <a href=\"https://github.com/gatsbyjs/gatsby/blob/master/examples/using-wordpress/gatsby-config.js\">demo site’s source code</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"> module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Gatsby Wordpress Tutorial'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// https://public-api.wordpress.com/wp/v2/sites/gatsbyjsexamplewordpress.wordpress.com/pages/</span>\n    <span class=\"token comment\">/*\n     * Gatsby's data processing layer begins with “source”\n     * plugins. Here the site sources its data from Wordpress.\n     */</span>\n<span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">{</span>\n</span><span class=\"gatsby-highlight-code-line\">      resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-wordpress`</span></span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">/*\n</span><span class=\"gatsby-highlight-code-line\">        * The base URL of the Wordpress site without the trailingslash and the protocol. This is required.\n</span><span class=\"gatsby-highlight-code-line\">        * Example : 'gatsbyjswpexample.wordpress.com' or 'www.example-site.com'\n</span><span class=\"gatsby-highlight-code-line\">        */</span>\n</span><span class=\"gatsby-highlight-code-line\">        baseUrl<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`dev-gatbsyjswp.pantheonsite.io`</span></span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// The protocol. This can be http or https.</span>\n</span><span class=\"gatsby-highlight-code-line\">        protocol<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`http`</span></span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// Indicates whether the site is hosted on wordpress.com.</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// If false, then the asumption is made that the site is self hosted.</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// If true, then the plugin will source its content on wordpress.com using the JSON REST API V2.</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// If your site is hosted on wordpress.org, then set this to false.</span>\n</span><span class=\"gatsby-highlight-code-line\">        hostingWPCOM<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// If useACF is true, then the source plugin will try to import the Wordpress ACF Plugin contents.</span>\n</span><span class=\"gatsby-highlight-code-line\">        <span class=\"token comment\">// This feature is untested for sites hosted on Wordpress.com</span>\n</span><span class=\"gatsby-highlight-code-line\">        useACF<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span><span class=\"gatsby-highlight-code-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</span>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h3 id=\"creating-graphql-queries-that-pull-data-from-wordpress\"><a href=\"#creating-graphql-queries-that-pull-data-from-wordpress\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating GraphQL queries that pull data from WordPress</h3>\n<p>Now you are ready to create a GraphQL query to pull in some data from the WordPress site. You will create a query that pulls in the title of the blogposts, date they were posted, and blogpost content.</p>\n<p>Run:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">gatsby develop</code></pre>\n      </div>\n<p>In your browser, open localhost:8000 to see your site, and open localhost:8000/___graphql so that you can create your GraphQL queries.</p>\n<p>As an exercise, try re-creating the following queries in your GraphiQL explorer. This first query will pull in the blogpost content from WordPress:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">{</span>\n  allWordpressPage <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        id\n        title\n        excerpt\n        slug\n        date<span class=\"token punctuation\">(</span><span class=\"token attr-name\">formatString</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MMMM DD, YYYY\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>This next query will pull in a sorted list of the blogposts:</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  allWordpressPost<span class=\"token punctuation\">(</span><span class=\"token attr-name\">sort</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    edges <span class=\"token punctuation\">{</span>\n      node <span class=\"token punctuation\">{</span>\n        title\n        excerpt\n        slug\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"rendering-the-blogposts-to-code-classlanguage-textindexjscode\"><a href=\"#rendering-the-blogposts-to-code-classlanguage-textindexjscode\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendering the blogposts to <code class=\"language-text\">index.js</code></h2>\n<p>Now that you’ve created GraphQL queries that pull in the data you want, we’ll use that second query to create a list of sorted blogpost titles on your site’s homepage. Here is what your <code class=\"language-text\">index.js</code> should look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> graphql <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>My WordPress Blog<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Posts<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>allWordpressPost<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">dangerouslySetInnerHTML</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> __html<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>excerpt <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query {\n    allWordpressPost(sort: { fields: [date] }) {\n      edges {\n        node {\n          title\n          excerpt\n          slug\n        }\n      }\n    }\n  }\n`</span></span></code></pre>\n      </div>\n<p>Save these changes and look at localhost:8000 to see your new homepage with list of sorted blogposts!</p>\n<blockquote>\n<p><strong>NOTE:</strong> to future editors: it would be useful to also have examples of how to load blogposts to their own individual pages. And helpful to insert a screenshot of the final result here</p>\n</blockquote>\n<h3 id=\"create-slugs-for-each-blogpost\"><a href=\"#create-slugs-for-each-blogpost\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create slugs for each blogpost</h3>\n<p><a href=\"/tutorial/part-seven/\">Part 7</a> of the foundational tutorial goes through this process.</p>","excerpt":"How to create a site with data pulled from WordPress What this tutorial covers: In this tutorial, you will install the   plugin in order to…","timeToRead":4,"fields":{"slug":"/docs/wordpress-source-plugin-tutorial/","anchor":"wordpress-source-plugin-tutorial"},"frontmatter":{"title":"WordPress Source Plugin Tutorial"},"parent":{"__typename":"File","relativePath":"docs/wordpress-source-plugin-tutorial.md"}}},"pageContext":{"slug":"/docs/wordpress-source-plugin-tutorial/"}}