{"data":{"markdownRemark":{"html":"<p>Gatsby allows a build to be traced, enabling you to find which plugins or parts of the build are taking the longest. The trace information can be viewed in any <a href=\"http://opentracing.io/\">open tracing</a> compatible tool such as <a href=\"https://www.jaegertracing.io/\">https://www.jaegertracing.io/</a>. You can also use Zipkin compatible tools such as <a href=\"https://zipkin.io/\">Zipkin</a> or <a href=\"https://www.honeycomb.io/\">Honeycomb</a>.</p>\n<p><img src=\"./images/zipkin-trace.png\" alt=\"Example Zipkin Trace\"></p>\n<h2 id=\"running-gatsby-with-tracing-turned-on\"><a href=\"#running-gatsby-with-tracing-turned-on\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running Gatsby with tracing turned on</h2>\n<p>Gatsby code is instrumented with Open Tracing, which is a general tracing API that is implementation agnostic. Therefore, you’ll need to include and configure an open tracing compatible library in your application, as well as a backend to collect the trace data.</p>\n<p>The steps required to add tracing are below. Including an <a href=\"/docs/performance-tracing/#local-zipkin-with-docker\">example</a> of how to get tracing working with zipkin locally using docker</p>\n<h3 id=\"1-library-dependency\"><a href=\"#1-library-dependency\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Library dependency</h3>\n<p>Add an <a href=\"https://github.com/opentracing\">open-tracing compatible library</a> to your site’s <code class=\"language-text\">package.json</code> dependencies.</p>\n<h3 id=\"2-library-configuration-file\"><a href=\"#2-library-configuration-file\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Library configuration file</h3>\n<p>Each open tracing library must be configured. For example, what is the URL of the tracing backend? How often should spans be sent to the backend? What service name should the trace be recorded under? Etc.</p>\n<p>The configuration file is a javascript file that exports two functions. <code class=\"language-text\">create</code> and <code class=\"language-text\">stop</code></p>\n<ul>\n<li><strong>create</strong>: Create and return an <a href=\"https://github.com/opentracing/opentracing-javascript/blob/master/src/tracer.ts\">open tracing compatible Tracer</a>. It is called at the start of the build</li>\n<li><strong>stop</strong>: Called at the end of the build. Any cleanup required by the tracer should be performed here. Such as clearing out any span queues and sending them to the tracing backend.</li>\n</ul>\n<h3 id=\"3-start-gatsby-with-tracing-turned-on\"><a href=\"#3-start-gatsby-with-tracing-turned-on\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Start Gatsby with tracing turned on</h3>\n<p>The above configuration file can be passed to Gatsby with the <code class=\"language-text\">--open-tracing-config-file</code> command-line option. When Gatsby is started with this option, it will load the supplied tracing configuration file, and call its <code class=\"language-text\">create</code> function. The returned Tracer will be used for tracing the build. Once the build has stopped, the configuration file’s <code class=\"language-text\">stop</code> method will be called, allowing the tracing implementation to perform any cleanup.</p>\n<h2 id=\"tracing-backend-examples\"><a href=\"#tracing-backend-examples\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tracing backend examples</h2>\n<p>There are many open tracing compatible backends available. Below is an example of how to hook zipkin into Gatsby</p>\n<h3 id=\"local-zipkin-with-docker\"><a href=\"#local-zipkin-with-docker\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>local Zipkin with Docker</h3>\n<p><a href=\"https://zipkin.io/\">Zipkin</a> is an open source Tracing system that can be run locally using docker.</p>\n<ol>\n<li>\n<p>Add following dependencies to your site’s <code class=\"language-text\">package.json</code></p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/zipkin\">zipkin</a></li>\n<li><a href=\"https://www.npmjs.com/package/zipkin-javascript-opentracing\">zipkin-javascript-opentracing</a></li>\n<li><a href=\"https://www.npmjs.com/package/zipkin-transport-http\">zipkin-transport-http</a></li>\n</ul>\n</li>\n<li>\n<p>Run Zipkin all-in-one docker instance with <code class=\"language-text\">docker run -d -p 9411:9411 openzipkin/zipkin</code>. See <a href=\"https://zipkin.io/pages/quickstart.html\">Zipkin Getting Started</a> for more information.</p>\n</li>\n<li>\n<p>Start Gatsby <code class=\"language-text\">build</code> or <code class=\"language-text\">develop</code> with <code class=\"language-text\">--open-tracing-config-file</code> pointing at the Zipkin configuration file. An example file is provided in the gatsby project under <code class=\"language-text\">node_modules/gatsby/dist/utils/tracer/zipkin-local.js</code> that will send tracing spans to your local docker instance. E.g</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">gatsby build --open-tracing-config-file node_modules/gatsby/dist/utils/tracer/zipkin-local.js</code></pre>\n      </div>\n</li>\n<li>\n<p>Once the build is complete, view your tracing information at <a href=\"http://localhost:9411\">http://localhost:9411</a></p>\n</li>\n</ol>","excerpt":"Gatsby allows a build to be traced, enabling you to find which plugins or parts of the build are taking the longest. The trace information…","timeToRead":3,"fields":{"slug":"/docs/performance-tracing/","anchor":"performance-tracing"},"frontmatter":{"title":"Performance tracing"},"parent":{"__typename":"File","relativePath":"docs/performance-tracing.md"}}},"pageContext":{"slug":"/docs/performance-tracing/"}}