{"data":{"markdownRemark":{"html":"<p>Gatsby’s <code class=\"language-text\">build</code> and <code class=\"language-text\">develop</code> steps run as a Node.js application which you can debug using standard tools for Node.js applications.</p>\n<p>In this guide you will learn how to debug some code using:</p>\n<ul>\n<li><a href=\"#chrome-devtools-for-node\">Chrome DevTools for Node</a></li>\n<li><a href=\"#vs-code-debugger\">VS Code debugger</a></li>\n</ul>\n<p>As an example let’s use the following code snippet in a <code class=\"language-text\">gatsby-node.js</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createFilePath <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gatsby-source-filesystem\"</span><span class=\"token punctuation\">)</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onCreateNode</span> <span class=\"token operator\">=</span> args <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> actions<span class=\"token punctuation\">,</span> Node <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> args\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Node<span class=\"token punctuation\">.</span>internal<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">\"MarkdownRemark\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createNodeField <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> actions\n\n    <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token function\">createFilePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">,</span> getNode <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">createNodeField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`slug`</span></span><span class=\"token punctuation\">,</span>\n      node<span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>There is a bug in this code and using it will produce the error below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">TypeError: Cannot read property &#39;internal&#39; of undefined\n\n  - gatsby-node.js:6 Object.exports.onCreateNode.args [as onCreateNode]\n    D:/dev/blog-v2/gatsby-node.js:6:12</code></pre>\n      </div>\n<h2 id=\"chrome-devtools-for-node\"><a href=\"#chrome-devtools-for-node\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chrome DevTools for Node</h2>\n<h3 id=\"running-gatsby-with-the-code-classlanguage-textinspectcode-flag\"><a href=\"#running-gatsby-with-the-code-classlanguage-textinspectcode-flag\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running Gatsby with the <code class=\"language-text\">inspect</code> flag</h3>\n<p>In your project directory instead of running <code class=\"language-text\">gatsby develop</code> run the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\"language-shell\"><code class=\"language-shell\">node --inspect-brk --no-lazy node_modules/gatsby/dist/bin/gatsby develop</code></pre>\n      </div>\n<ul>\n<li><code class=\"language-text\">--inspect-brk</code> will enable Node’s inspector agent which will allow you to connect a debugger. It will also pause execution until the debugger is connected and then wait for you to resume it.</li>\n<li><code class=\"language-text\">--no-lazy</code> - this will force Node’s V8 engine to disable lazy compilation and will help with using breakpoints.</li>\n</ul>\n<h3 id=\"connecting-devtools\"><a href=\"#connecting-devtools\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connecting DevTools</h3>\n<p>Open <code class=\"language-text\">chrome://inspect</code> in Chrome browser and connect to a “Remote Target” by clicking the <code class=\"language-text\">inspect</code> link:</p>\n<p><img src=\"./images/chrome-devtools-inspect.png\" alt=\"Chrome inspect page\"></p>\n<p>You should see Chrome DevTools start and that code execution is paused at the start of the <code class=\"language-text\">gatsby.js</code> entry file:</p>\n<p><img src=\"./images/chrome-devtools-init.png\" alt=\"Paused Chrome DevTools\"></p>\n<h3 id=\"setting-up-code-classlanguage-textsourcescode\"><a href=\"#setting-up-code-classlanguage-textsourcescode\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up <code class=\"language-text\">Sources</code></h3>\n<p>Right now you can’t see your files in Sources. You need to add those using the “Add folder to workspace” button and pick the directory with the code you want to debug. If you want to debug code in your <code class=\"language-text\">gatsby-node.js</code> or your local plugins, pick your project directory. If you want debug the <code class=\"language-text\">gatsby</code> package you will have to pick the <code class=\"language-text\">gatsby</code> directory inside <code class=\"language-text\">node_modules</code>.</p>\n<p>This example has problematic code in your local <code class=\"language-text\">gatsby-node.js</code> file, so let’s add the directory containing it to Sources. You should have a directory with your code in the left pane:</p>\n<p><img src=\"./images/chrome-devtools-files.png\" alt=\"Files added to Sources tab\"></p>\n<h3 id=\"using-devtools\"><a href=\"#using-devtools\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using DevTools</h3>\n<p>Let’s go ahead and add a breakpoint just before the place that the error is thrown. To add a breakpoint navigate to <code class=\"language-text\">gatsby-node.js</code> and left click on a line number:</p>\n<p><img src=\"./images/chrome-devtools-new-breakpoint.png\" alt=\"Added breakpoint\"></p>\n<p>Now you can resume code execution by clicking the “resume” icon in the DevTools debug toolbar (or press F8 on your keyboard). Gatsby will start running and pause once it reaches a breakpoint, allowing you to inspect variables:</p>\n<p><img src=\"./images/chrome-devtools-breakpoint-hit.png\" alt=\"Breakpoint hit\"></p>\n<p>To inspect variables you can hover your mouse over them or go to the <code class=\"language-text\">Scope</code> section in the right-hand pane (either collapse the “Call Stack” section or scroll through it to the bottom).</p>\n<p>In the example <code class=\"language-text\">Node</code> is <code class=\"language-text\">undefined</code> and to figure out why, let’s go backwards. <code class=\"language-text\">Node</code> is extracted from <code class=\"language-text\">args</code> so let’s examine that by hovering <code class=\"language-text\">args</code>:</p>\n<p><img src=\"./images/chrome-devtools-examine-var.png\" alt=\"Examine variable\"></p>\n<p>We can now see the problem - <code class=\"language-text\">args</code> doesn’t contain <code class=\"language-text\">Node</code> - it contains <code class=\"language-text\">node</code>. So this small typographic mistake was causing our code to fail. Adjusting our code to use a lowercase <code class=\"language-text\">node</code> fixes the problem and we did that without adding tons of <code class=\"language-text\">console.log</code> output!</p>\n<h3 id=\"finishing-thoughts-on-devtools\"><a href=\"#finishing-thoughts-on-devtools\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Finishing thoughts on DevTools</h3>\n<p>You can succussfully debug your code using Chrome DevTools but using it isn’t really that convenient. There are a lot of steps you need to do manually every time you want to use debugger, so in the next section you’ll learn how to use the built-in debugging capabilities of VS Code.</p>\n<p>“Why did we go through all those steps only to find out that there are better options?” you might ask. That’s a great question and here are couple of reasons:</p>\n<ul>\n<li>This was an introduction to Node.js debugging. Using information from this section you can setup debugging in your code editor or IDE of choice (if it supports node debugging).</li>\n<li>You don’t <em>need</em> a code editor or IDE to debug Node.js applications. Using Chrome DevTools is usually a safe fallback.</li>\n<li>Debugging isn’t the only thing you can do in Chrome DevTools. Once you connect to DevTools you can use CPU or memory profilers. Check the <code class=\"language-text\">Profiler</code> and <code class=\"language-text\">Memory</code> tabs in DevTools.</li>\n</ul>\n<h2 id=\"vs-code-debugger\"><a href=\"#vs-code-debugger\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VS Code debugger</h2>\n<p>Using built in debuggers in code editors is very convenient. You will be able to skip a lot of setup needed to use Chrome DevTools. You will also be able to put breakpoints in the same view you write your code.</p>\n<p>We won’t go in depth here about how to debug in VS Code - for that you can check the <a href=\"https://code.visualstudio.com/docs/editor/debugging\">excellent VS Code documentation</a>. We will however share a launch configuration needed to run and debug Gatsby:</p>\n<p><code class=\"language-text\">launch.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gatsby develop\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"inspector\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}/node_modules/gatsby/dist/bin/gatsby\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"develop\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"stopOnEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"runtimeArgs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--nolazy\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sourceMaps\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Gatsby build\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"protocol\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"inspector\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"${workspaceRoot}/node_modules/gatsby/dist/bin/gatsby\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"build\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"stopOnEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"runtimeArgs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--nolazy\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sourceMaps\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>After putting a breakpoint in <code class=\"language-text\">gatsby-node.js</code> and using the <code class=\"language-text\">Start debugging</code> command from VS Code you can see the final result:</p>\n<p><img src=\"./images/vscode-debug.png\" alt=\"VSCode breakpoint hit\"></p>\n<h2 id=\"additional-resources\"><a href=\"#additional-resources\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Additional resources</h2>\n<ul>\n<li><a href=\"https://nodejs.org/en/docs/guides/debugging-getting-started/\">Debugging - Getting Started | Node.js</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Xb_0awoShR8\">Debugging with Node.js - Paul Irish talk at Node Summit 2017</a></li>\n</ul>","excerpt":"Gatsby’s   and   steps run as a Node.js application which you can debug using standard tools for Node.js applications. In this guide you…","timeToRead":5,"fields":{"slug":"/docs/debugging-the-build-process/","anchor":"debugging-the-build-process"},"frontmatter":{"title":"Debugging the build process"},"parent":{"__typename":"File","relativePath":"docs/debugging-the-build-process.md"}}},"pageContext":{"slug":"/docs/debugging-the-build-process/"}}