{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-plugin-mailchimp","description":"A simple, lightweight Gatsby plugin to subscribe email addresses to your Mailchimp list","keywords":["gatsby","gatsby-plugin","gatsbyjs","mailchimp","mailchimp api"],"lastPublisher":{"name":"benjamin88","avatar":"https://gravatar.com/avatar/e85e24db1b76227f8219cb50a50e5414"},"repository":{"url":"https://github.com/benjaminhoffman/gatsby-plugin-mailchimp"},"readme":{"childMarkdownRemark":{"html":"<p>üéâüçæ <strong>Now officially used in Gatsby ºs website! (<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/www/src/components/email-capture-form.js#L45\">link</a>)</strong></p>\n<p>This Gatsby plugin helps you subscribe new email addresses to your Mailchimp list.  Mailchimp does not provide much direction on making clientside requests so the setup to achieve this with a static website (i.e. Gatsby) is quite cumbersome.</p>\n<p>Although the setup and configuration below may seem long, I assure you it ºs easier than doing it yourself from scratch.</p>\n<p>There are two primary steps involved.  First, you have to set your global Mailchimp settings (account ID, user ID, list ID) via your project ºs <code class=\"language-text\">gatsby-config.js</code>.  Second, you import this plugin into the React components and pass an email and any other attributes (i.e. Mailchimp List Fields) you ºd like to save alongside the user.</p>\n<h2 id=\"how-it-works-under-the-hood\"><a href=\"#how-it-works-under-the-hood\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How It Works Under The Hood</h2>\n<p>What this plugin does is scan your <code class=\"language-text\">gatsby-config</code> for your MC settings.  Then, once you import and invoke the <code class=\"language-text\">addToMailchimp</code> method in your React component, it makes a jsonp request of the email/attributes to MC‚Äôs server using your settings.</p>\n<h2 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<p>You ºll first have to add your Mailchimp account and list settings to your <code class=\"language-text\">gatsby-config.js</code> file.  Next, you ºll have to import this plugin into each file you ºd like to use it with.  </p>\n<p>This plugin exports one method ‚Äî <code class=\"language-text\">addToMailchimp</code> ‚Äî that accepts two params: <code class=\"language-text\">email</code> and <code class=\"language-text\">listFields</code>, where <code class=\"language-text\">email</code> is a valid email string and <code class=\"language-text\">listFields</code> is an object of attributes you ºd like to save with the email address.  More detailed instructions below.</p>\n<p>In your terminal, type:\n<code class=\"language-text\">$ yarn add gatsby-plugin-mailchimp</code></p>\n<h2 id=\"gatsby-config-instructions\"><a href=\"#gatsby-config-instructions\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby Config Instructions</h2>\n<p>You need to provide this plugin with your Mailchimp account and list details in order for it to know which endpoint to save the email address to.  Follow these directions:</p>\n<p>In your <code class=\"language-text\">gatsby-config.js</code> file, add the following code to the plugin section:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token string\">'gatsby-plugin-mailchimp'</span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      endpoint<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// see instructions section below</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<h3 id=\"mailchimp-endpoint\"><a href=\"#mailchimp-endpoint\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mailchimp Endpoint</h3>\n<ol>\n<li>Login to your Mailchimp account</li>\n<li>Click ‚ÄúLists‚Äù tab at the top</li>\n<li>Locate the Mailchimp list you want to save email addresses to</li>\n<li>Click that list</li>\n<li>Click the subtab ‚ÄúSignup forms‚Äù</li>\n<li>Click ‚ÄúEmbedded forms‚Äù</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/benjaminhoffman/gatsby-plugin-mailchimp/master/img/mailchimp_list.png\" alt=\"screenshot of how to locate your Mailchimp &#x60;u&#x60; settings\"></p>\n<ol start=\"7\">\n<li>\n<p>Scroll down to the section with all the HTML code</p>\n</li>\n<li>\n<p>Locate the HTML form element.  Copy the entire URL listed under the form ‚Äúaction‚Äù attribute*</p>\n</li>\n<li>\n<p>Paste that URL into your <code class=\"language-text\">gatsby-config</code> ºs <code class=\"language-text\">option.endpoint</code> field</p>\n</li>\n<li>\n<p>Usually this URL value will look something like: <em><a href=\"https://example.us10.list-manage.com/subscribe/post?u=b9ef2fdd3edofhec04ba9b930&#x26;id=3l948gkt1d\">https://example.us10.list-manage.com/subscribe/post?u=b9ef2fdd3edofhec04ba9b930&#x26;id=3l948gkt1d</a></em></p>\n</li>\n</ol>\n<p><img src=\"https://raw.githubusercontent.com/benjaminhoffman/gatsby-plugin-mailchimp/master/img/mailchimp_form_action.png\" alt=\"screenshot of how to copy/paste your list settings URL\"></p>\n<p>‚Ä¶ that‚Äôs all!</p>\n<h2 id=\"gatsby-import-plugin-instructions\"><a href=\"#gatsby-import-plugin-instructions\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby Import Plugin Instructions</h2>\n<p>Next, navigate to the file where you collect email addresses (ie, the file you want to import this plugin into).  When a user submits a form and includes at least their email address, invoke the <code class=\"language-text\">addToMailchimp</code> method like you would any other method.  Here is an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> addToMailchimp <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-plugin-mailchimp'</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGatsbyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Since `addToMailchimp` returns a promise, you</span>\n  <span class=\"token comment\">// can handle the response in two different ways:</span>\n\n  <span class=\"token comment\">// Note that you need to send an email &amp; optionally, listFields</span>\n  <span class=\"token comment\">// these values can be pulled from React state, form fields,</span>\n  <span class=\"token comment\">// or wherever.  (Personally, I recommend storing in state).</span>\n\n  <span class=\"token comment\">// 1. via `.then`</span>\n  <span class=\"token function-variable function\">_handleSubmit</span> <span class=\"token operator\">=</span> e <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span>preventDefault<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addToMailchimp</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> listFields<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>data <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// I recommend setting data to React state</span>\n      <span class=\"token comment\">// but you can do whatever you want</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// unnecessary because Mailchimp only ever</span>\n      <span class=\"token comment\">// returns a 200 status code</span>\n      <span class=\"token comment\">// see below for how to handle errors</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 2. via `async/await`</span>\n  _handleSubmit <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    e<span class=\"token punctuation\">.</span>preventDefault<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">addToMailchimp</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> listFields<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// I recommend setting `result` to React state</span>\n    <span class=\"token comment\">// but you can do whatever you want</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_handleSubmit</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>listFields<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">...</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"returns\"><a href=\"#returns\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Returns</h2>\n<p>This plugin returns a promise that resolves to the object that is return by Mailchimp ºs API.  The Mailchimp API will always return a status of 200.  In order to know if your submission was a success or error, you must read the returned object, which has a <code class=\"language-text\">result</code> and <code class=\"language-text\">msg</code> property:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  result<span class=\"token punctuation\">:</span> string <span class=\"token comment\">// either `success` or `error` (helpful to use this key to update your state)</span>\n  msg<span class=\"token punctuation\">:</span> string <span class=\"token comment\">// a user-friendly message indicating details of your submissions (usually something like \"thanks for subscribing!\" or \"this email has already been added\")</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"example\"><a href=\"#example\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h2>\n<p>To see an example usage, look no further than Gatsby ºs website.  Here are some helpful links:</p>\n<ul>\n<li>Add Mailchimp settings via gatsby-config (<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/www/gatsby-config.js#L175-L180\">link</a>)</li>\n<li>Use React state to show success, error, and sending messages in the UI (<a href=\"https://github.com/gatsbyjs/gatsby/blob/master/www/src/components/email-capture-form.js#L45-L84\">link</a>)</li>\n</ul>\n<h2 id=\"gotchas\"><a href=\"#gotchas\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gotchas</h2>\n<ol>\n<li>\n<p><em>email address</em>: pass in the email as normal (ie, <em>you@gmail.com</em>); do <em>not</em> encode or transform the email, as our plugin will do that for you!</p>\n</li>\n<li>\n<p><em>listFields</em>: many times you want to collect more than just an email address (first/last name, birthday, page pathname).  I like to store this info in React state and pass it in as list fields.  See below.</p>\n</li>\n<li>\n<p>I like to save the returned data to React state so I can then display a success/error message to the user.</p>\n</li>\n</ol>\n<h2 id=\"mailchimp-list-fields\"><a href=\"#mailchimp-list-fields\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mailchimp List Fields</h2>\n<p>Sometimes you want to send to Mailchimp more than just an email address.  It ºs very common to also send a first name, last name, pathname, etc.  Honestly, you can send whatever you want to store alongside the email address.  Instructions below on how to create new list fields but once you ºve set them up in Mailchimp, you send them alongside the email like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">addToMailchimp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email@example.com'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">PATHNAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/blog-post-1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">FNAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Ben'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">LNAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Bordeaux'</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3 id=\"create-remove-or-edit-mailchimp-list-fields\"><a href=\"#create-remove-or-edit-mailchimp-list-fields\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create, Remove, or Edit Mailchimp List Fields</h3>\n<p>To setup or modify Mailchimp list fields, navigate to your MC list, click ‚ÄúSettings‚Äù, then click ‚ÄúList fields‚Äù.  Then add, remove, or edit fields as you wish.  Make sure to update your <code class=\"language-text\">addToMailchimp</code> listFields object after you ºve made changes in Mailchimp.</p>\n<p><img src=\"https://raw.githubusercontent.com/benjaminhoffman/gatsby-plugin-mailchimp/master/img/mailchimp_list_fields.png\" alt=\"screenshot of Mailchimp list fields settings screen\"></p>\n<h2 id=\"to-do\"><a href=\"#to-do\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>To do</h2>\n<ul>\n<li>ensure MC endpoint is valid</li>\n<li>create basic MC field form (name, email, submit button)</li>\n<li>spec</li>\n<li>test what happens when config is missing values</li>\n<li>test what happens when email is malformed</li>\n</ul>","timeToRead":5}}}},"pageContext":{"slug":"/packages/gatsby-plugin-mailchimp/","id":"9c30ef31-4d8f-54a3-8b86-c2c879c8d73d"}}