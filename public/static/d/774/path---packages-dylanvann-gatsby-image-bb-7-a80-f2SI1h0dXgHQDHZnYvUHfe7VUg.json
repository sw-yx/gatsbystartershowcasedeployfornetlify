{"data":{"markdownRemark":null,"npmPackage":{"name":"@dylanvann/gatsby-image","description":"Lazy-loading React image component with optional support for the blur-up effect.","keywords":["gatsby","gatsby-component","react-component"],"lastPublisher":{"name":"dylanvann","avatar":"https://gravatar.com/avatar/320cc10c5cc60d722fac86f3babc6324"},"repository":{"url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-image"},"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-image\"><a href=\"#gatsby-image\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-image</h1>\n<p>Speedy, optimized images without the work.</p>\n<p><code class=\"language-text\">gatsby-image</code> is a React component specially designed to work seamlessly with\nGatsby’s GraphQL queries. It combines\n<a href=\"https://image-processing.gatsbyjs.org/\">Gatsby’s native image processing</a>\ncapabilities with advanced image loading techniques to easily and completely\noptimize image loading for your sites. <code class=\"language-text\">gatsby-image</code> uses\n<a href=\"/packages/gatsby-plugin-sharp/\">gatsby-plugin-sharp</a>\nto power its image transformations.</p>\n<p><em>Warning: gatsby-image is <strong>not</strong> a drop-in replacement for <code class=\"language-text\">&lt;img/&gt;</code>. It’s\noptimized for fixed width/height images and images that stretch the full-width\nof a container. Some ways you can use <code class=\"language-text\">&lt;img/&gt;</code> won’t work with gatsby-image.</em></p>\n<p><strong><a href=\"https://using-gatsby-image.gatsbyjs.org\">Demo</a></strong></p>\n<h2 id=\"problem\"><a href=\"#problem\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problem</h2>\n<p>Large, unoptimized images dramatically slow down your site.</p>\n<p>But creating optimized images for websites has long been a thorny problem.\nIdeally you would:</p>\n<ul>\n<li>Resize large images to the size needed by your design</li>\n<li>Generate multiple smaller images so smartphones and tablets don’t download\ndesktop-sized images</li>\n<li>Strip all unnecessary metadata and optimize JPEG and PNG compression</li>\n<li>Efficiently lazy load images to speed initial page load and save bandwidth</li>\n<li>Use the “blur-up” technique or a\n”<a href=\"https://github.com/gatsbyjs/gatsby/issues/2435\">traced placeholder</a>” SVG to\nshow a preview of the image while it loads</li>\n<li>Hold the image position so your page doesn’t jump while images load</li>\n</ul>\n<p>Doing this consistently across a site feels like sisyphean labor. You manually\noptimize your images and then… several images are swapped in at the last minute\nor a design-tweak shaves 100px of width off your images.</p>\n<p>Most solutions involve a lot of manual labor and bookkeeping to ensure every\nimage is optimized.</p>\n<p>This isn’t ideal. Optimized images should be easy and the default.</p>\n<h2 id=\"solution\"><a href=\"#solution\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<p>With Gatsby, we can make images way <em>way</em> better.</p>\n<p><code class=\"language-text\">gatsby-image</code> is designed to work seamlessly with Gatsby’s native image\nprocessing capabilities powered by GraphQL and Sharp. To produce perfect images,\nyou need only:</p>\n<ol>\n<li>Import <code class=\"language-text\">gatsby-image</code> and use it in place of the built-in <code class=\"language-text\">img</code></li>\n<li>Write a GraphQL query using one of the included GraphQL “fragments”\nwhich specify the fields needed by <code class=\"language-text\">gatsby-image</code>.</li>\n</ol>\n<p>The GraphQL query creates multiple thumbnails with optimized JPEG and PNG\ncompression. The <code class=\"language-text\">gatsby-image</code> component automatically sets up the “blur-up”\neffect as well as lazy loading of images further down the screen.</p>\n<h2 id=\"install\"><a href=\"#install\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install</h2>\n<p><code class=\"language-text\">npm install --save gatsby-image</code></p>\n<p>Depending on the gatsby starter you used, you may need to include <a href=\"/packages/gatsby-transformer-sharp/\">gatsby-transformer-sharp</a> and <a href=\"/packages/gatsby-plugin-sharp/\">gatsby-plugin-sharp</a> as well, and make sure they are installed and included in your gatsby-config.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">npm install --save gatsby-transformer-sharp\nnpm install --save gatsby-plugin-sharp</code></pre>\n      </div>\n<p>Then in your <code class=\"language-text\">gatsby-config.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">plugins: [\n  `gatsby-transformer-sharp`,\n  `gatsby-plugin-sharp`\n];</code></pre>\n      </div>\n<h2 id=\"how-to-use\"><a href=\"#how-to-use\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to use</h2>\n<p>This is what a component using <code class=\"language-text\">gatsby-image</code> looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> Img <span class=\"token keyword\">from</span> <span class=\"token string\">\"gatsby-image\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Hello gatsby<span class=\"token operator\">-</span>image<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Img</span> <span class=\"token attr-name\">fixed</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>childImageSharp<span class=\"token punctuation\">.</span>fixed<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query GatsbyImageSampleQuery {\n    file(relativePath: { eq: \"blog/avatars/kyle-mathews.jpeg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fixed(width: 125, height: 125) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n  }\n`</span></span></code></pre>\n      </div>\n<p>For another explanation of how to get started with gatsby-image, see this blog post by community member Kyle Gill <a href=\"https://medium.com/@kyle.robert.gill/ridiculously-easy-image-optimization-with-gatsby-js-59d48e15db6e\">Image Optimization Made Easy with Gatsby.js</a></p>\n<h2 id=\"two-types-of-responsive-images\"><a href=\"#two-types-of-responsive-images\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Two types of responsive images</h2>\n<p>There are two types of responsive images supported by gatsby-image.</p>\n<ol>\n<li>Images that have a <em>fixed</em> width and height</li>\n<li>Images that stretch across a <em>fluid</em> container</li>\n</ol>\n<p>In the first scenario, you want to vary the image’s size for different screen\nresolutions — in other words, create retina images.</p>\n<p>For the second scenario, you want to create multiple sizes of thumbnails for\ndevices with widths stretching from smartphone to wide desktop monitors.</p>\n<p>To decide between the two, ask yourself: “do I know the exact size this image\nwill be?” If yes, it’s the first type. If no and its width and/or height need to\nvary depending on the size of the screen, then it’s the second type.</p>\n<p>In Gatsby’s GraphQL implementation, you query for the first type by querying a\nchild object of an image called <code class=\"language-text\">fixed</code> — which you can see in the sample\ncomponent above. For the second type, you do a similar query but for a child\nobject called <code class=\"language-text\">fluid</code>.</p>\n<h2 id=\"fragments\"><a href=\"#fragments\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fragments</h2>\n<p>GraphQL includes a concept called “query fragments”. Which, as the name\nsuggests, are a part of a query that can be used in multiple queries. To ease\nbuilding with <code class=\"language-text\">gatsby-image</code>, Gatsby image processing plugins which support\n<code class=\"language-text\">gatsby-image</code> ship with fragments which you can easily include in your queries.</p>\n<p>Note,\n<a href=\"https://github.com/graphql/graphiql/issues/612\">due to a limitation of GraphiQL</a>,\nyou can not currently use these fragments in the GraphiQL IDE.</p>\n<p>Plugins supporting <code class=\"language-text\">gatsby-image</code> currently include\n<a href=\"/packages/gatsby-transformer-sharp/\">gatsby-transformer-sharp</a>,\n<a href=\"/packages/gatsby-source-contentful/\">gatsby-source-contentful</a> and <a href=\"https://github.com/datocms/gatsby-source-datocms\">gatsby-source-datocms</a>.</p>\n<p>Their fragments are:</p>\n<h3 id=\"gatsby-transformer-sharp\"><a href=\"#gatsby-transformer-sharp\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-transformer-sharp</h3>\n<ul>\n<li><code class=\"language-text\">GatsbyImageSharpFixed</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFixed_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFixed_tracedSVG</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFixed_withWebp</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFixed_withWebp_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFixed_withWebp_tracedSVG</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid_tracedSVG</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid_withWebp</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid_withWebp_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyImageSharpFluid_withWebp_tracedSVG</code></li>\n</ul>\n<h3 id=\"gatsby-source-contentful\"><a href=\"#gatsby-source-contentful\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-contentful</h3>\n<ul>\n<li><code class=\"language-text\">GatsbyContentfulFixed</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFixed_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFixed_tracedSVG</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFixed_withWebp</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFixed_withWebp_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFluid</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFluid_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFluid_tracedSVG</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFluid_withWebp</code></li>\n<li><code class=\"language-text\">GatsbyContentfulFluid_withWebp_noBase64</code></li>\n</ul>\n<h3 id=\"gatsby-source-datocms\"><a href=\"#gatsby-source-datocms\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-datocms</h3>\n<ul>\n<li><code class=\"language-text\">GatsbyDatoCmsFixed</code></li>\n<li><code class=\"language-text\">GatsbyDatoCmsFixed_noBase64</code></li>\n<li><code class=\"language-text\">GatsbyDatoCmsFluid</code></li>\n<li><code class=\"language-text\">GatsbyDatoCmsFluid_noBase64</code></li>\n</ul>\n<p>If you don’t want to use the blur-up effect, choose the fragment with <code class=\"language-text\">noBase64</code>\nat the end. If you want to use the traced placeholder SVGs, choose the fragment\nwith <code class=\"language-text\">tracedSVG</code> at the end.</p>\n<p>If you want to automatically use WebP images when the browser supports the file\nformat, use the <code class=\"language-text\">withWebp</code> fragments. If the browser doesn’t support WebP,\n<code class=\"language-text\">gatsby-image</code> will fall back to the default image format.</p>\n<p><em>Please see the\n<a href=\"/packages/gatsby-plugin-sharp/#tracedsvg\">gatsby-plugin-sharp</a>\ndocumentation for more information on <code class=\"language-text\">tracedSVG</code> and its configuration\noptions.</em></p>\n<h2 id=\"fixed-queries\"><a href=\"#fixed-queries\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“Fixed” queries</h2>\n<h3 id=\"component\"><a href=\"#component\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component</h3>\n<p>Pass in the data returned from the <code class=\"language-text\">fixed</code> object in your query via the\n<code class=\"language-text\">fixed</code> prop. e.g. <code class=\"language-text\">&lt;Img fixed={fixed} /&gt;</code></p>\n<h3 id=\"query\"><a href=\"#query\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  imageSharp <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># Other options include height (set both width and height to crop),</span>\n    <span class=\"token comment\"># grayscale, duotone, rotate, etc.</span>\n    fixed<span class=\"token punctuation\">(</span><span class=\"token attr-name\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\"># Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.</span>\n      <span class=\"token operator\">...</span>GatsbyImageSharpFixed\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"fluid-queries\"><a href=\"#fluid-queries\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>“Fluid” queries</h2>\n<h3 id=\"component-1\"><a href=\"#component-1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component</h3>\n<p>Pass in the data returned from the <code class=\"language-text\">fluid</code> object in your query via the <code class=\"language-text\">fluid</code>\nprop. e.g. <code class=\"language-text\">&lt;Img fluid={fluid} /&gt;</code></p>\n<h3 id=\"query-1\"><a href=\"#query-1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Query</h3>\n<div class=\"gatsby-highlight\" data-language=\"graphql\">\n      <pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  imageSharp <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># i.e. the max width of your container is 700 pixels.</span>\n    <span class=\"token comment\">#</span>\n    <span class=\"token comment\"># Other options include maxHeight (set both maxWidth and maxHeight to crop),</span>\n    <span class=\"token comment\"># grayscale, duotone, rotate, etc.</span>\n    fluid<span class=\"token punctuation\">(</span><span class=\"token attr-name\">maxWidth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">700</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\"># Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.</span>\n      <span class=\"token operator\">...</span>GatsbyImageSharpFluid_noBase64\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"code-classlanguage-textgatsby-imagecode-props\"><a href=\"#code-classlanguage-textgatsby-imagecode-props\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">gatsby-image</code> props</h2>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">fixed</code></td>\n<td><code class=\"language-text\">object</code></td>\n<td>Data returned from the <code class=\"language-text\">fixed</code> query</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">fluid</code></td>\n<td><code class=\"language-text\">object</code></td>\n<td>Data returned from the <code class=\"language-text\">fluid</code> query</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">fadeIn</code></td>\n<td><code class=\"language-text\">bool</code></td>\n<td>Defaults to fading in the image on load</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">title</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>Passed to the <code class=\"language-text\">img</code> element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">alt</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>Passed to the <code class=\"language-text\">img</code> element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">className</code></td>\n<td><code class=\"language-text\">string</code> / <code class=\"language-text\">object</code></td>\n<td>Passed to the wrapper element. Object is needed to support Glamor’s css prop</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">outerWrapperClassName</code></td>\n<td><code class=\"language-text\">string</code> / <code class=\"language-text\">object</code></td>\n<td>Passed to the outer wrapper element. Object is needed to support Glamor’s css prop</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">style</code></td>\n<td><code class=\"language-text\">object</code></td>\n<td>Spread into the default styles in the wrapper element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">imgStyle</code></td>\n<td><code class=\"language-text\">object</code></td>\n<td>Spread into the default styles for the actual <code class=\"language-text\">img</code> element</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">position</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>Defaults to <code class=\"language-text\">relative</code>. Pass in <code class=\"language-text\">absolute</code> to make the component <code class=\"language-text\">absolute</code> positioned</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">backgroundColor</code></td>\n<td><code class=\"language-text\">string</code> / <code class=\"language-text\">bool</code></td>\n<td>Set a colored background placeholder. If true, uses “lightgray” for the color. You can also pass in any valid color string.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">onLoad</code></td>\n<td><code class=\"language-text\">func</code></td>\n<td>A callback that is called when the full-size image has loaded.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">Tag</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td>Which HTML tag to use for wrapping elements. Defaults to <code class=\"language-text\">div</code>.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"image-processing-arguments\"><a href=\"#image-processing-arguments\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image processing arguments</h2>\n<p><a href=\"/packages/gatsby-plugin-sharp\">gatsby-plugin-sharp</a> supports many additional arguments for transforming your images like\n<code class=\"language-text\">quality</code>, <code class=\"language-text\">sizeByPixelDensity</code>, <code class=\"language-text\">pngCompressionLevel</code>, <code class=\"language-text\">cropFocus</code>, <code class=\"language-text\">greyscale</code> and many more. See its documentation for more.</p>\n<h2 id=\"some-other-stuff-to-be-aware-of\"><a href=\"#some-other-stuff-to-be-aware-of\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Some other stuff to be aware of</h2>\n<ul>\n<li>If you want to set <code class=\"language-text\">display: none;</code> on a component using a <code class=\"language-text\">fixed</code> prop,\nyou need to also pass in to the style prop <code class=\"language-text\">{ display: &#39;inherit&#39; }</code>.</li>\n<li>Images don’t load until JavaScript is loaded. Gatsby’s automatic code\nsplitting generally makes this fine but if images seem slow coming in on a\npage, check how much JavaScript is being loaded there.</li>\n</ul>","timeToRead":9}}}},"pageContext":{"slug":"/packages/@dylanvann/gatsby-image/","id":"aeda6fa7-9116-5188-a3c3-7dee47c25c5a"}}