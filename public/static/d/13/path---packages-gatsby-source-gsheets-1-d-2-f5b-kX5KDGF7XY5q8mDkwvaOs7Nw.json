{"data":{"markdownRemark":null,"npmPackage":{"name":"gatsby-source-gsheets","description":"Why go through the hassle of setting up a complicated headless CMS when Google Sheets already has user permissions, revision history, and a powerful UI?","keywords":["gatsby","gatsby-plugin","gatsby-source-plugin","google-sheets"],"lastPublisher":{"name":"nayaabkhan","avatar":"https://gravatar.com/avatar/4bb3d4e5823ab7659c9c7f6e264d043b"},"repository":null,"readme":{"childMarkdownRemark":{"html":"<h1 id=\"gatsby-source-gsheets\"><a href=\"#gatsby-source-gsheets\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-source-gsheets</h1>\n<p>Why go through the hassle of setting up a complicated headless CMS when Google Sheets already has user permissions, revision history, and a powerful UI?</p>\n<p>This source plugin for <a href=\"https://github.com/gatsbyjs/gatsby\">Gatsby JS</a> will turn any Google Sheets worksheet into a GraphQL type for build-time consumption.</p>\n<h2 id=\"heads-up\"><a href=\"#heads-up\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>heads-up!</h2>\n<p>Until <a href=\"https://github.com/gatsbyjs/gatsby/issues/2727\">this issue in Gatsby</a> is addressed, when this plugin fails, it will fail <em>silently</em>. Your build will still complete, but the data you were expecting to be available won’t be there.</p>\n<p>I’ll add <code class=\"language-text\">retry</code> to this plugin eventually, but this is a limitation of Gatsby’s build that likely affects all source plugins.</p>\n<h1 id=\"how-to\"><a href=\"#how-to\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to:</h1>\n<h2 id=\"step-1-set-up-sheetspermissions\"><a href=\"#step-1-set-up-sheetspermissions\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: set up sheets/permissions</h2>\n<p>Follow this tutorial: <a href=\"https://www.twilio.com/blog/2017/03/google-spreadsheets-and-javascriptnode-js.html\">https://www.twilio.com/blog/2017/03/google-spreadsheets-and-javascriptnode-js.html</a></p>\n<p>…but stop just before the part that says “Read Data from a Spreadsheet with Node.js”</p>\n<p>Essentially this creates a Google Sheets API for your project, then shares whichever spreadsheet you’re looking to Gatsby-fy with that endpoint.</p>\n<h2 id=\"step-2-configure-your-gatsby-project\"><a href=\"#step-2-configure-your-gatsby-project\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: configure your gatsby project</h2>\n<p>Standard source plugin installation.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">yarn add gatsby-source-gsheets\n\n\n// gatsby-config.js\n// ...\n{\n    resolve: &#39;gatsby-source-gsheets&#39;,\n    options: {\n        spreadsheetId: &#39;get this from the sheet url&#39;,\n        credentials: require(&#39;./path-to-credentials-file.json&#39;),\n        types: [\n          {\n            type: &#39;Event&#39;,\n            sheet: &#39;Events&#39;,\n            map: sheet =&gt; ({\n              ...sheet,\n              venue___NODE: sheet.venue,\n            }),\n          },\n          {\n            type: &#39;Venue&#39;,\n            sheet: &#39;Venues&#39;,\n          },\n        ],\n    }\n},\n// ...</code></pre>\n      </div>\n<p>The plugin makes the following conversions before feeding Gatsby nodes:</p>\n<ol>\n<li>Numbers are converted to numbers. Sheets formats numbers as comma-delineated strings, so to determine if something is a number, the plugin tests to see if the string (a) is non-empty and (b) is composed only of commas, decimals, and digits:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">if (\n    &quot;value&quot;.replace(/[,\\.\\d]/g, &quot;&quot;).length === 0\n      &amp;&amp; &quot;value&quot; !== &quot;&quot;\n   ) {\n    ...assume value is a number and handle accordingly\n}</code></pre>\n      </div>\n<ol start=\"2\">\n<li>“TRUE”/“FALSE” converted to boolean true/false</li>\n<li>empty cells (\"\" in sheets payload) converted to null</li>\n<li>Column names are converted to camelcase via lodash _.camelCase() (see note 2 in ‘A few notes’)</li>\n</ol>\n<p>A few notes:</p>\n<ol>\n<li>Not tested with cells of data type dates.</li>\n<li>Google sheets mangles column names and converts them all to lower case. This plugin will convert them to camelcase, so the best convention here is to name your columns all lowercase with dashes. e.g. instead of “Column Name 1” or “columnName1”, prefer “column-name-1”—this last one will be turned into “columnName1” in your GatsbyQL graph.</li>\n</ol>","timeToRead":2}}}},"pageContext":{"slug":"/packages/gatsby-source-gsheets/","id":"6bc32c81-f2ea-5d98-b3d7-27433a9a1631"}}